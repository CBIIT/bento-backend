- name: ctdc deploy pipeline
  hosts: bento
  connection: local
  gather_facts: no
  become: yes

  tasks:
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        -  amazon.aws
        -  community.aws
        -  git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,collections_v1.2

    #docker login
    - name: docker login
      include_role:
        name: bento.common.ecr_login
      vars:
        region: us-east-1

    #get db ip
    - name: get db ip
      include_role:
        name: bento.common.neo4j_ip
      vars:
        tier: "{{ lookup('env','TIER') }}"
        project_name: ctdc
        database_name: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.db_instance', nested=true, region='us-east-1' ) }}"

    #deploy frontend
    - name: deploy stage for ctdc frontend
      include_role:
        name: bento.common.ecs
      vars:
        ansible_python_interpreter: /usr/bin/python3
        project_name: ctdc
        region: us-east-1
        container_name: "frontend"
        frontend_version: "{{ lookup('env','FE_VERSION') }}"
        #frontend_branch: "{{ lookup('env','FE_BRANCH') }}"
        backend_version: "{{ lookup('env','BE_VERSION') }}"
        image_version: "{{ frontend_version }}"
        tier: "{{ lookup('env','TIER') }}"
        ecs_cluster_name: "{{ project_name }}-{{ tier }}"
        sumo_collector_endpoint: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_endpoint', nested=true, region='us-east-1' ) }}"
        sumo_collector_token: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.sumo_collector_token_fe', nested=true, region='us-east-1' ) }}"
        container_port: 80
        container_memory: 512
        container_cpu: 256
        container_image_url: "{{ ecr_repo }}/{{ project_name }}-{{ container_name }}"
        about_content_url: "{% if tier == 'prod' %}https://raw.githubusercontent.com/CBIIT/bento-ctdc-frontend/{{ frontend_version | split('-') | first }}/src/content/prod/aboutPagesContent.yaml{% else %}https://raw.githubusercontent.com/CBIIT/bento-ctdc-frontend/{{ frontend_version | split('-') | first }}/src/content/{{ tier }}/aboutPagesContent.yaml{% endif %}"
        newrelic_license_key: "{{ lookup('aws_ssm', 'newrelic_license_key', region='us-east-1' ) }}"
        app_google_client_id: "{{ lookup('aws_ssm', '/bento/auth/provider/client/google/id', region='us-east-1') }}"
        container_env:
          - name: REACT_APP_BACKEND_API
            value: "{% if tier == 'prod' %}https://bento-tools.org/v1/graphql/{% else %}https://{{ project_name }}-{{ tier }}.bento-tools.org/v1/graphql/{% endif %}"
          - name: REACT_APP_FILE_SERVICE_API
            value: "{% if tier == 'prod' %}https://bento-tools.org/api/files/{% else %}https://{{ project_name }}-{{ tier }}.bento-tools.org/api/files/{% endif %}"
          - name: REACT_APP_BE_VERSION
            value: "{{ backend_version }}"
          - name: REACT_APP_FE_VERSION
            value: "{{ frontend_version }}"
          - name: REACT_APP_ABOUT_CONTENT_URL
            value: "{{ about_content_url }}"
          - name: NEW_RELIC_LICENSE_KEY
            value: "{{ newrelic_license_key }}"
          - name: NEW_RELIC_APP_NAME
            value: "{{ project_name }}-{{ tier }}-{{ container_name }}"
          - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
            value: "true"
          - name: NEW_RELIC_HOST
            value: "gov-collector.newrelic.com"
          - name: NEW_RELIC_NO_CONFIG_FILE
            value: "true"
          - name: NEW_RELIC_LABELS
            value: "Project:{{ project_name }};Environment:{{ tier }}"
          - name: REACT_APP_GOOGLE_CLIENT_ID
            value: "{{ app_google_client_id }}"
          - name: REACT_APP_AUTH_API
            value: "{% if tier == 'prod' %}https://bento-tools.org{% else %}https://{{ project_name }}-{{ tier }}.bento-tools.org{% endif %}"