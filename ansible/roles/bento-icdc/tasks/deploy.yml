---
############################################################################################################################

#     Set URLs

############################################################################################################################

# - name: set backend_api_url
#   set_fact:
#     backend_api_url: "{% if tier == 'prod' %} https://caninecommons.nci.nih.gov/v1/graphql/ {% else %} https://caninecommons-{{ tier }}.nci.nih.gov/v1/graphql/ {% endif %}" 

############################################################################################################################

#     Prepare host for update

############################################################################################################################

- name: log into DockerHub
  docker_login:
    username: "{{ docker_user }}"
    password: "{{ docker_password }}"
    registry: https://ncidockerhub.nci.nih.gov
    
- name: verify host
  file: 
    path: /tmp/myworkspace
    state: directory

- name: touch previous_image.txt file
  file:
    path: "./previous_image.txt"
    state: touch

- name: get info about frontend container
  docker_container_info:
    name: frontend
  register: frontend_details

- name: show frontend output
  debug:
    msg: "{{frontend_details}}"

- name: set jq
  set_fact:
    jq: container.Config.Env[]

- name: get frontend_tag and backend_tag
  set_fact:
    frontend_tag: "{{frontend_details | json_query(jq) | select('match', 'REACT_APP_FE_VERSION')|list|first|replace('\"','')}}"
    backend_tag: "{{frontend_details | json_query(jq) | select('match', 'REACT_APP_BE_VERSION')|list|first|replace('\"','')}}"


- name: save frontend tag    
  shell: echo > {{backend_tag}} > ./frontend_tag.txt

- name: save backend tag
  shell: echo > {{frontend_tag}} > ./backend_tag.txt

- name: extract frontend tag
  shell: cut -d '=' -f 2 ./frontend_tag.txt
  register: frontend_tag

- name: extract backend tag
  shell: cut -d '=' -f 2 ./backend_tag.txt
  register: backend_tag

- name: set previous tags
  set_fact:
    previous_backend_tag: "{{backend_tag.stdout_lines}}"
    previous_frontend_tag: "{{frontend_tag.stdout_lines}}"

- name: show tags
  debug:
    msg: |
      {{previous_backend_tag}}
      {{previous_frontend_tag}}

- name: save frontend tag
  copy: 
    content: "{{frontend | json_query(jq) | select('match', 'REACT_APP_FE_VERSION')|list|first|replace('\"','')}}"
    dest: "./frontend_tag.txt"

- name: save backend tag
  copy: 
    content: "{{frontend | json_query(jq) | select('match', 'REACT_APP_BE_VERSION')|list|first|replace('\"','')}}"
    dest: "./backend_tag.txt"

- name: save current deployed image
  shell: docker ps | grep nci* | awk '{print $2}'  > ./previous_image.txt

- name: remove frontend container
  docker_container:
    name: frontend
    state: absent

- name: remove backend container
  docker_container:
    name: backend
    state: absent

- name: clean up 
  shell: docker system prune -a -f

############################################################################################################################

#     Update containers

############################################################################################################################

- name: start sumologic syslog service
  docker_container:
    name: sumologic-syslog
    image: sumologic/collector:latest-syslog
    env:
      SUMO_COLLECTOR_NAME: "{{ app_name }}-syslog-{{ inventory_hostname }}"
      SUMO_ACCESS_ID: "{{ sumo_access_id }}"
      SUMO_ACCESS_KEY: "{{ sumo_access_key }}"
      SUMO_COLLECTOR_NAME_PREFIX: ""
      SUMO_CLOBBER: "true"
    state: started
    restart_policy: always
    ports:
     - "514:514"
  tags:
    - sumologic
    - all

- name: start sumologic docker service
  docker_container:
    name: sumologic-docker
    image: sumologic/collector:latest
    env:
      SUMO_COLLECTOR_NAME: "{{ app_name }}-docker-{{ inventory_hostname }}"
      SUMO_ACCESS_ID: "{{ sumo_access_id }}"
      SUMO_ACCESS_KEY: "{{ sumo_access_key }}"
      SUMO_COLLECTOR_NAME_PREFIX: ""
      SUMO_CLOBBER: "true"
    state: started
    restart_policy: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
  tags:
    - sumologic
    - all

- name: start newrelic docker service
  docker_container:
    name: newrelic-docker
    image: newrelic/infrastructure:latest
    env:
      NRIA_LICENSE_KEY: "{{ newrelic_license_key }}"
      NRIA_DISPLAY_NAME: "{{ app_name }}-docker-{{ inventory_hostname }}"
      NEW_RELIC_HOST: "gov-collector.newrelic.com"
    state: started
    restart_policy: always
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/:/host"
  tags:
    - newrelic
    - all

- name: start icdc backend container
  docker_container:
    name: backend
    image: ncidockerhub.nci.nih.gov/icdc/icdc-backend:{{build_number}}
    env:
      NEW_RELIC_LICENSE_KEY: "{{ newrelic_license_key }}"
      NEW_RELIC_APP_NAME: "{{ app_name }}-backend-{{ inventory_hostname }}"
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: "true"
      NEW_RELIC_HOST: "gov-collector.newrelic.com"
      NEW_RELIC_LOG_FILE_NAME: "STDOUT"
      JAVA_OPTS: "-javaagent:/usr/local/tomcat/newrelic/newrelic.jar"
    entrypoint: "/bin/ash -c 'wget https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip -O newrelic-java.zip && unzip newrelic-java.zip && bin/catalina.sh run'"
    log_driver: syslog
    log_options:
      syslog-address: tcp://{{ syslog_host }}:514
      tag: "{{ app_name }}-backend"
      syslog-format: "rfc5424micro"
    state: started
    restart_policy: always
    ports:
     - "8080:8080"

- name: start icdc frontend container
  docker_container:
    name: frontend
    image: ncidockerhub.nci.nih.gov/icdc/icdc-frontend:{{ build_number }}
    env:
      REACT_APP_BACKEND_GETUSERINFO_API: "{{ backend_user_info }}"
      REACT_APP_LOGIN_URL: "{{ backend_fence_login }}"
      REACT_APP_USER_LOGOUT_URL: "{{ backend_fence_logout }}"
      REACT_APP_BACKEND_API: "{% if tier == 'prod' %}https://caninecommons.cancer.gov/v1/graphql/{% else %}https://caninecommons-{{ tier }}.cancer.gov/v1/graphql/{% endif %}" 
      REACT_APP_ABOUT_CONTENT_URL: "{{ backend_content_url }}"
      REACT_APP_BE_VERSION: "{{ backend_api_version }}"
      REACT_APP_FE_VERSION: "{{ backend_frontend_version }}"
      REACT_APP_GA_TRACKING_ID: "{{ backend_google_analytics_id }}"
      NEW_RELIC_LICENSE_KEY: "{{ newrelic_license_key }}"
      NEW_RELIC_APP_NAME: "{{ app_name }}-frontend-{{ inventory_hostname }}"
      NEW_RELIC_DISTRIBUTED_TRACING_ENABLED: "true"
      NEW_RELIC_HOST: "gov-collector.newrelic.com"
      NEW_RELIC_NO_CONFIG_FILE: "true"
    log_driver: syslog
    log_options:
      syslog-address: tcp://{{ syslog_host }}:514
      tag: "{{ app_name }}-frontend"
      syslog-format: "rfc5424micro"
    state: started
    restart_policy: always
    ports:
     - "80:80"

