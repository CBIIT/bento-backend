---
- name: create task definition - backend
  ecs_taskdefinition:
    containers:
    - name: backend
      essential: true
      image: "cbiitssrepo/bento-backend:{{build_number}}"
      environment:
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{ app_name }}-backend"
#        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
#          value: true
        - name: NEW_RELIC_HOST
          value: "gov-collector.newrelic.com"
        - name: NEW_RELIC_LOG_FILE_NAME
          value: "STDOUT"
        - name: JAVA_OPTS
          value: "-javaagent:/usr/local/tomcat/newrelic/newrelic.jar"
      entryPoint:
        - "/bin/ash"
        - "-c"
        - 'wget "https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip" -O newrelic-java.zip && unzip newrelic-java.zip && bin/catalina.sh run'
      portMappings:
      - containerPort: "8080"
        hostPort: "8080"
      logConfiguration:
        logDriver: syslog
        options:
          syslog-address: tcp://host.docker.internal:514
          tag: "{{ app_name }}-backend"
    network_mode: bridge
    family: bento-{{tier}}-backend
    memory: '512'
    cpu: '512'
    state: present
    region: "{{region}}"
  register: task_output

- name: create task definition - frontend
  ecs_taskdefinition:
    containers:
    - name: frontend
      essential: true
      image: "cbiitssrepo/bento-frontend:{{build_number}}"
      environment:
        - name: NEW_RELIC_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NEW_RELIC_APP_NAME
          value: "{{ app_name }}-frontend"
#        - name: NEW_RELIC_DISTRIBUTED_TRACING_ENABLED
#          value: true
        - name: NEW_RELIC_HOST
          value: "gov-collector.newrelic.com"
        - name: NEW_RELIC_NO_CONFIG_FILE
          value: "true"
      portMappings:
      - containerPort: "80"
        hostPort: "80"
      logConfiguration:
        logDriver: syslog
        options:
          syslog-address: tcp://host.docker.internal:514
          tag: "{{ app_name }}-frontend"
    network_mode: bridge
    family: bento-{{tier}}-frontend
    state: present
    memory: '512'
    cpu: '512'
    region: "{{region}}"
  register: task_output

#- name: create task definition - sumo syslog
#  ecs_taskdefinition:
#    containers:
#    - name: sumologic-syslog
#      essential: true
#      image: "sumologic/collector:latest-syslog"
#      environment:
#        - name: SUMO_COLLECTOR_NAME
#          value: "{{ app_name }}-syslog"
#        - name: SUMO_ACCESS_ID
#          value: ""
#        - name: SUMO_ACCESS_KEY
#          value: ""
#        - name: SUMO_COLLECTOR_NAME_PREFIX
#          value: ""
#        - name: SUMO_CLOBBER
#          value: "true"
#      portMappings:
#      - containerPort: "514"
#        hostPort: "514"
#    network_mode: bridge
#    family: bento-{{tier}}-sumo_syslog
#    state: present
#    region: "{{region}}"
#  register: task_output

#- name: create task definition - sumo docker
#  ecs_taskdefinition:
#    containers:
#    - name: sumologic-docker
#      essential: true
#      image: "sumologic/collector:latest"
#      environment:
#        - name: SUMO_COLLECTOR_NAME
#          value: "{{ app_name }}-syslog"
#        - name: SUMO_ACCESS_ID
#          value: ""
#        - name: SUMO_ACCESS_KEY
#          value: ""
#        - name: SUMO_COLLECTOR_NAME_PREFIX
#          value: ""
#        - name: SUMO_CLOBBER
#          value: "true"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    network_mode: bridge
#    family: bento-{{tier}}-sumo_docker
#    state: present
#    region: "{{region}}"
#  register: task_output

- name: create task definition - newrelic docker
  ecs_taskdefinition:
    containers:
    - name: newrelic-docker
      essential: true
      image: "newrelic/infrastructure:latest"
      environment:
        - name: NRIA_LICENSE_KEY
          value: "{{ newrelic_license_key }}"
        - name: NRIA_DISPLAY_NAME
          value: "{{ app_name }}-docker"
        - name: NEW_RELIC_HOST
          value: "gov-collector.newrelic.com"
      mountPoints:
        - containerPath: /var/run/docker.sock
          sourceVolume: docker-sock
        - containerPath: /
          readOnly: true
          sourceVolume: docker-root
    volumes:
      - name: docker-sock
      - name: docker-root
    network_mode: bridge
    family: bento-{{tier}}-nr_docker
    state: present
    region: "{{region}}"
  register: task_output

- name: query task definition - bento frontend
  ecs_taskdefinition_info:
    task_definition: bento-{{tier}}-frontend
    region: "{{region}}" 
  register: task_frontend

- name: query task definition - bento backend
  ecs_taskdefinition_info:
    task_definition: bento-{{tier}}-backend
    region: "{{region}}" 
  register: task_backend

- name: query task definition - newrelic docker
  ecs_taskdefinition_info:
    task_definition: bento-{{tier}}-nr_docker
    region: "{{region}}" 
  register: task_nr_docker

- name: query backend service
  ecs_service_info:
    cluster: bento-{{tier}}
    service: bento-{{tier}}-backend
    details: true
    region: "{{region}}"
  register: service_backend

- name: query ecs service
  ecs_service_info:
    cluster: bento-{{tier}}
    service: bento-{{tier}}-frontend
    details: true
    region: "{{region}}"
  register: service_frontend

- name: query newrelic docker service
  ecs_service_info:
    cluster: bento-{{tier}}
    service: bento-{{tier}}-nr_docker
    details: true
    region: "{{region}}"
  register: service_nr_docker


- name: set facts
  set_fact:
    frontend_revision: "{{task_frontend.revision}}"
    backend_revision: "{{task_backend.revision}}"
    task_backend_name: "{{task_backend.family}}"
    task_frontend_name: "{{task_frontend.family}}"
    task_nr_docker_name: "{{task_nr_docker.family}}"
    lb_frontend: "{{service_frontend.services[0].loadBalancers}}"
    lb_backend: "{{service_backend.services[0].loadBalancers}}"
    role_arn: "{{service_backend.services[0].roleArn}}"

- name: update frontend service
  ecs_service:
    state: present
    name: bento-{{tier}}-frontend
    cluster: bento-{{tier}}
    task_definition: "{{task_frontend_name}}:{{frontend_revision}}"
    role: "{{role_arn}}"
    force_new_deployment: yes
    deployment_configuration:
      minimum_healthy_percent: 0
      maximum_percent: 100
    desired_count: 1
    load_balancers: "{{ lb_frontend }}"
    region: "{{region}}"
  register: service_frontend_output


- name: update backend service
  ecs_service:
    state: present
    name: bento-{{tier}}-backend
    cluster: bento-{{tier}}
    task_definition: "{{task_backend_name}}:{{backend_revision}}"
    role: "{{role_arn}}"
    force_new_deployment: yes
    deployment_configuration:
      minimum_healthy_percent: 0
      maximum_percent: 100
    desired_count: 1
    load_balancers: "{{ lb_backend }}"
    region: "{{region}}"
  register: service_backend_output

- name: update newrelic docker service
  ecs_service:
    state: present
    name: bento-{{tier}}-nr_docker
    cluster: bento-{{tier}}
    task_definition: "{{task_nr_docker_name}}"
    role: "{{role_arn}}"
    force_new_deployment: no
    deployment_configuration:
      minimum_healthy_percent: 0
      maximum_percent: 100
    desired_count: 1
    region: "{{region}}"
  register: service_nr_docker_output

#- name: show lb_backend
#  debug: 
#    msg: "{{lb_backend}}"
