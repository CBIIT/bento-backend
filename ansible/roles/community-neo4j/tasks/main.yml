---
# tasks file for neo4j
- name: install systems packages
  yum:
    name: 
      - firewalld
      - epel-release
      - unzip
      - wget
    state: latest
    disable_gpg_check: yes

- name: create neo4j group
  group:
    name: neo4j
    state: present

- name: create neo4j user
  user:
    name: neo4j
    groups: neo4j
    append: yes

- name: add neo4j repository
  yum_repository:
    name: neo4j
    description: neo4j repository
    file: neo4j
    baseurl: https://yum.neo4j.com/stable
    gpgcheck: yes
    enabled: yes

- name: install neo4j community {{ neo4j_version }} and java 11 JRE
  yum:
    name: 
     - java-11-openjdk
     - neo4j-{{ neo4j_version }}
    state: installed

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: "/var/lib/neo4j/certificates/neo4j.key"
    size: 4096
    type: RSA
    backup: yes

- name: Generate an OpenSSL Certificate Signing Request with Subject information
  openssl_csr:
    path: "/var/lib/neo4j/certificates/neo4j.csr"
    privatekey_path: "/var/lib/neo4j/certificates/neo4j.key"
    common_name: "localhost"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: "/var/lib/neo4j/certificates/neo4j.cert"
    privatekey_path: "/var/lib/neo4j/certificates/neo4j.key"
    csr_path: "/var/lib/neo4j/certificates/neo4j.csr"
    provider: selfsigned

- name: change neo4j parameters
  lineinfile:
    path: /etc/neo4j/neo4j.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - { regexp: '^#dbms.allow_upgrade=true', line: 'dbms.allow_upgrade=true' }
    - { regexp: '^#dbms.default_listen_address=0.0.0.0', line: 'dbms.default_listen_address=0.0.0.0' }
    - { regexp: '^#dbms.connector.bolt.tls_level=DISABLED', line: 'dbms.connector.bolt.tls_level=OPTIONAL' }
    - { regexp: '^#dbms.connector.bolt.listen_address=:7687', line: 'dbms.connector.bolt.listen_address=:7687' }
    - { regexp: '^#dbms.ssl.policy.bolt.enabled=true', line: 'dbms.ssl.policy.bolt.enabled=true' }
    - { regexp: '^#dbms.ssl.policy.bolt.base_directory=certificates/bolt', line: 'dbms.ssl.policy.bolt.base_directory=certificates' }
    - { regexp: '^#dbms.ssl.policy.bolt.private_key=private.key', line: 'dbms.ssl.policy.bolt.private_key=neo4j.key' }
    - { regexp: '^#dbms.ssl.policy.bolt.public_certificate=public.crt', line: 'dbms.ssl.policy.bolt.public_certificate=neo4j.cert' }
    - { regexp: '^#dbms.ssl.policy.bolt.client_auth=NONE', line: 'dbms.ssl.policy.bolt.client_auth=NONE' }

- name: add APOC
  copy:
    remote_src: yes
    src: "/var/lib/neo4j/labs/apoc-{{ apoc_version }}.jar"
    dest: "/var/lib/neo4j/plugins/apoc-{{ apoc_version }}.jar"
    owner: neo4j
    group: neo4j

- name: start and enable neo4j service
  service:
    name: neo4j
    state: started
    enabled: yes

- name: add DefaultLimitNOFILE=60000 to /etc/systemd/user.conf
  lineinfile:
    path: /etc/systemd/user.conf
    line: 'DefaultLimitNOFILE=60000'
    regex: '#DefaultLimitNOFILE='
    state: present

- name: reload system daemon
  systemd:
    daemon_reload: yes

- name: open neo4j data ports
  firewalld:
    port: "{{item}}/tcp"
    zone: public
    immediate: yes
    permanent: yes
    state: enabled
  loop:
    - 7474
    - 7473
    - 7687
  notify: restart_firewalld