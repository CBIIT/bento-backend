
#- name: Check if tmp directory exist
#  stat:
#    path: "{{workspace}}/tmp"
#  register: stat_result

#- name: remove the tmp if exists
#  file:
#    path: "{{workspace}}/tmp"
#    state: absent
#  when: stat_result.stat.exists == True

- name: set facts
  set_fact:
    arm_id: "{{ arm_Id.split(',') }}"
    phs_id: "{{phs_Id.split(',')}}"
    bucket_name: "{{bucket_Name.split(',')}}"


# - name: create dict from arms_id and phps_id
#   set_fact:
#     match_Ids: "{{ dict(arm_Id.split(',') | zip(phs_Id.split(','))|zip(bucket_name.split(','))) }}"

- name: copy config.json.j2 config.json
  template:
    remote_src: yes
    src: "{{workspace}}/config/config.json.j2"
    dest: "{{workspace}}/config/config.json"

- name: get file content
  include_vars:
    file: "{{workspace}}/config/config.json"
    name: json_file

- name: show file
  debug:
    msg: "{{ json_file }}"

#- name: execute metadata validator script
#  shell:
#    cmd: >
#      /usr/bin/python3
#      match_metadata_validator.py
#      {{workspace}}/config/config.json
#    chdir: "{{workspace}}"
#  register: metadata_validator


#- name: show metadata_validator output
#  debug:
#    msg: "{{metadata_validator}}"

