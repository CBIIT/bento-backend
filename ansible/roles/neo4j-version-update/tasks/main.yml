---
# tasks file for neo4j update
- name: Remove neo4j repository (and clean up left-over metadata)
  yum_repository:
    name: neo4j
    state: absent
  notify: yum-clean-metadata

- name: add neo4j repository
  yum_repository:
    name: neo4j
    description: neo4j repository
    file: neo4j
    baseurl: https://yum.neo4j.com/stable
    gpgcheck: yes
    enabled: yes

- name: disable and stop neo4j
  service:
    name: neo4j
    state: stopped
    enabled: no

- name: create neo4j cert backup directory
  file:
    path: /tmp/neo4j_certs
    state: directory

- name: copy neo4j certs
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: neo4j
    group: neo4j
  with_items:
    - {src: '/var/lib/neo4j/certificates/neo4j.cert',dest: '/tmp/neo4j_certs/neo4j.cert'}
    - {src: '/var/lib/neo4j/certificates/neo4j.key',dest: '/tmp/neo4j_certs/neo4j.key'}

#- name: verify installed neo4j version
#  shell: yum list installed neo4j*
#  register: neo4j_installed

#- name: version output
#  debug:
#    msg: "{{ neo4j_installed.stdout_lines }}"

- name: remove neo4j
  shell: yum -y autoremove neo4j* java*

- name: clean old neo4j files
  file:
    path: "{{ item.path }}"
    state: absent

  with_items:
    - {path: '/var/lib/neo4j/'}
    - {path: '/etc/neo4j/'}

- name: install neo4j {{ neo4j_version }} and java 11 JRE
  shell: "yum -y install java-11-openjdk-11 neo4j-{{ neo4j_version }}" 

#- name: verify installed neo4j version
#  shell: yum list installed neo4j*
#  register: neo4j_installed

#- name: version output
#  debug:
#    msg: "{{ neo4j_installed.stdout_lines }}"

- name: copy neo4j cert and key
  copy:
    remote_src: yes
    src: "{{ item.dest }}"
    dest: "{{ item.src }}"
    owner: neo4j
    group: neo4j
  with_items:
    - {src: /tmp/neo4j_certs/neo4j.cert ,dest: /var/lib/neo4j/certificates/neo4j.cert}
    - {src: /tmp/neo4j_certs/neo4j.key,dest: /var/lib/neo4j/certificates/neo4j.key}

- name: change neo4j parameters
  lineinfile:
    path: /etc/neo4j/neo4j.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    #- { regexp: '^#dbms.memory.heap.initial_size=512m', line: 'dbms.memory.heap.initial_size=5632m' }
    #- { regexp: '^#dbms.memory.heap.max_size=512m', line: 'dbms.memory.heap.max_size=5632m' }
    - { regexp: '^#dbms.allow_upgrade=true', line: 'dbms.allow_upgrade=true' }
    - { regexp: '^#dbms.default_listen_address=0.0.0.0', line: 'dbms.default_listen_address=0.0.0.0' }
    - { regexp: '^#dbms.connector.bolt.tls_level=DISABLED', line: 'dbms.connector.bolt.tls_level=OPTIONAL' }
    - { regexp: '^#dbms.connector.bolt.listen_address=:7687', line: 'dbms.connector.bolt.listen_address=:7687' }
    - { regexp: '^#dbms.ssl.policy.bolt.enabled=true', line: 'dbms.ssl.policy.bolt.enabled=true' }
    - { regexp: '^#dbms.ssl.policy.bolt.base_directory=certificates/bolt', line: 'dbms.ssl.policy.bolt.base_directory=certificates' }
    - { regexp: '^#dbms.ssl.policy.bolt.private_key=private.key', line: 'dbms.ssl.policy.bolt.private_key=neo4j.key' }
    - { regexp: '^#dbms.ssl.policy.bolt.public_certificate=public.crt', line: 'dbms.ssl.policy.bolt.public_certificate=neo4j.cert' }
    - { regexp: '^#dbms.ssl.policy.bolt.client_auth=NONE', line: 'dbms.ssl.policy.bolt.client_auth=NONE' }
    #- { regexp: '^#dbms.backup.enabled=true', line: 'dbms.backup.enabled=true' }
    #- { regexp: '^#dbms.logs.query.page_logging_enabled=true', line: 'dbms.logs.query.page_logging_enabled=true' }
    #- { regexp: '^#dbms.logs.security.level=INFO', line: 'dbms.logs.security.level=INFO' }
    #- { regexp: '^#dbms.allow_upgrade=true', line: 'dbms.allow_upgrade=true' }
    #- { regexp: '^#dbms.logs.query.enabled=true', line: 'dbms.logs.query.enabled=true' }
    #- { regexp: '^#dbms.logs.query.time_logging_enabled=true', line: 'dbms.logs.query.time_logging_enabled=true' }
    #- { regexp: '^#dbms.logs.query.parameter_logging_enabled=true', line: 'dbms.logs.query.parameter_logging_enabled=true' }

#- name: Enable neo4j metrics
#  lineinfile:
#    state: present
#    path: /etc/neo4j/neo4j.conf
#    insertafter: 'EOF'
#    line: '{{ item }}'
#  loop:
#    - metrics.enabled=true
#    - metrics.neo4j.enabled=true
#    - metrics.neo4j.tx.enabled=true
#    - metrics.neo4j.pagecache.enabled=true
#    - metrics.neo4j.counts.enabled=true
#    - metrics.neo4j.network.enabled=true

- name: add APOC
  copy:
    remote_src: yes
    src: "/var/lib/neo4j/labs/apoc-{{ apoc_version }}.jar"
    dest: "/var/lib/neo4j/plugins/apoc-{{ apoc_version }}.jar"
    owner: neo4j
    group: neo4j

- name: update default neo4j password
  shell: "neo4j-admin set-initial-password {{ neo4j_password }}"

- name: start and enable neo4j service
  service:
    name: neo4j
    state: started
    enabled: yes