---

#create app and logs directory
- name: create app and logs directory
  file: 
    path: "{{app_base_directory}}/{{item}}"
    state: directory
  loop:
    - app
    - logs

- name: gather comets-processor facts
  ec2_instance_facts:
    region: us-east-1
    filters:
      "tag:Environment": "{{env}}"
      "tag:Name": comets-{{env}}-processor
      "instance-state-name": running
  register: processor


- name: gather comets-app facts
  ec2_instance_facts:
    region: us-east-1
    filters:
      "tag:Environment": "{{env}}"
      "tag:Name": comets-{{env}}-app
      "instance-state-name": running
  register: app

- name: set instance ip
  set_fact:
    queue_host: "{{ processor.instances[0].network_interfaces[0].private_ip_address }}"
    app_host: "{{ app.instances[0].network_interfaces[0].private_ip_address }}"

- name: show ip
  debug:
    msg: "processor: {{queue_host}} \t app: {{app_host}}"

- name: Check if comets directory exist
  stat:
    path: /tmp/comets
  register: comets_result

- name: remove old comets repo
  file:
    path: /tmp/comets
    state: absent
  when: comets_result.stat.exists

- name: Check if R-cometsAnalytics exists
  stat:
    path: /tmp/R-cometsAnalytics
  register: comets_analytics

- name: remove old r repo
  file:
    path: /tmp/R-cometsAnalytics
    state: absent
  when: comets_analytics.stat.exists

- name: checkout comets repo
  git:
    repo: "{{comets_repo}}"
    dest: /tmp/comets
    version: master
    force: yes

- name: checkout comets_analytics repo
  git:
    repo: "{{R_repo}}"
    dest: /tmp/R-cometsAnalytics
    version: comets_1.6.0_20191205
    force: yes

- name: copy R code
  synchronize:
    dest: /tmp/comets/comets/restricted/rcode/
    src: /tmp/R-cometsAnalytics/
    delete: yes
    recursive: true
    rsync_opts:
      - "--exclude=.git"

- name: update settings
  template:
    dest: /tmp/comets/comets/restricted/settings.yml
    src: settings.yml.j2

- name: copy docker-compse files
  template:  src={{item.src}} dest={{item.dest}}
  with_items:
    - { src: 'processor-docker-compose.yml.j2', dest: '{{app_base_directory}}/processor-docker-compose.yml' }
    - { src: 'app-docker-compose.yml.j2', dest: '{{app_base_directory}}/app-docker-compose.yml' }

- name: login into ecr
  shell: "$(/usr/bin/aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin {{ecr}})"
  ignore_errors: True
  delegate_to: 127.0.0.1
  register: ecr_login

- name: show login
  debug:
    msg: "{{ecr_login}}"
    
- name:  build {{ecr}}/comets:app image
  docker_image:
    build:
      path: "/tmp/comets"
      dockerfile: "/tmp/comets/docker/comets.app.dockerfile"
      pull: yes
    name: "{{ecr}}/comets"
    tag: "app-{{version}}"
    push: yes
    source: build
  delegate_to: 127.0.0.1

- name:  build {{ecr}}/comets:processor image
  docker_image:
    build:
      path: "/tmp/comets"
      dockerfile: "/tmp/comets/docker/comets.app.processor.dockerfile"
      pull: yes
    name: "{{ecr}}/comets"
    tag: "processor-{{version}}"
    push: yes
  delegate_to: 127.0.0.1

- name: start app
  docker_compose:
    project_src: "{{app_base_directory}}"
    files:
      - app-docker-compose.yml
    state: present
  when:
    - app_host == inventory_hostname

- name: start processor
  docker_compose:
    project_src: "{{app_base_directory}"
    files:
      - processor-docker-compose.yml
    state: present
  when:
    - queue_host == inventory_hostname
