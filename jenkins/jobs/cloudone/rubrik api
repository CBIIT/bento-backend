"description": "Copyright Â© 2017 Rubrik Inc.\n\n# Introduction\n\nThis is the INTERNAL REST API for Rubrik. We don't guarantee support or backward compatibility. Use at your own risk.\n\n# Changelog\n\n Revisions are listed with the most recent revision first.\n\n ## Add new event types for managed volume\n * add Maintenance and System event types\n\n ## Add vlan support for managed volume\n * IP subnet that specifies an outgoing VLAN interface for a Rubrik node.\n   This is a required value when creating a managed volume on a Rubrik node\n   that has multiple VLAN interfaces\n\n## Feature Additions/improvements:\n * Introduced the `PATCH /aws/ec2_instance/indexing_state` endpoint for\n   enabling/disabling indexing per EC2 instance.\n\n ### Changes to Internal API in Rubrik version 4.2\n ## Breaking changes:\n * Moved the /auth_domain/ endpoint from internal APIs to the v1 APIs.\n * Deprecated `POST /archive/nfs/reconnect` endpoint. Use\n   `POST /archive/nfs/reader/connect` instead to connect as a reader to an\n   existing NFS archival location.\n * Deprecated `POST /archive/object_store/reconnect` endpoint. Use\n   `POST /archive/object_store/reader/connect` instead to connect as a reader to\n   an existing object store location.\n * Deprecated `POST /archive/qstar/reconnect` endpoint. Use\n   `POST /archive/qstar/reader/connect` instead to connect as a reader to an\n   existing QStar archival location.\n * Deprecated `POST /archive/dca/reconnect` endpoint. Use\n   `POST /archive/dca/reader/connect` instead to connect as a reader to an\n   existing DCA archival location.\n * Removed `POST /hyperv/vm/snapshot/{id}/restore_file` endpoint. Use\n   `POST /hyperv/vm/snapshot/{id}/restore_files` instead to support\n   multi-files restore for Hyper-V vm.\n * Removed `POST /nutanix/vm/snapshot/{id}/restore_file` endpoint. Use\n   `POST /nutainx/vm/snapshot/{id}/restore_files` instead to support\n   multi-files restore for Nutanix vm.\n * Removed `search_timezone_offset` parameter from\n   `GET /unmanaged_object/{id}/snapshot` endpoint. The endpoint will now\n   use configured timezone on the cluster.\n * Renamed the field `id` in `UserDefinition` to `username` for `POST /user`\n   endpoint.\n * Removed the `/mssql/db/sla/{id}/availability_group_conflicts` endpoint.\n * Removed the `/mssql/db/sla/{id}/assign` endpoint.\n * Added support for Envoy VMs for Organization.\n * Modified the `DELETE /storage/array/{id}` endpoint so that it now triggers\n   an asynchronous deletion job, responds with an async request object, and\n   archives the storage array's hierarchy.\n * Added `numStorageArrayVolumeGroupsArchived` to `DataLocationUsage` which\n   is the response of the `GET /stats/data_location/usage` endpoint.\n * Modified `POST /storage/array` endpoint so that it now triggers an\n   asynchronous refresh job, and responds with an async request object.\n * Modified the `GET /storage/array/{id}` and `DELETE /storage/array/{id}`\n   endpoints so that the `id` field now corresponds to the managed ID\n   instead of the simple ID. The 'managed ID' is the ID assigned to the\n   storage array object by the Rubrik REST API server.\n * Moved /throttle endpoint to /backup_throttle.\n * Introduced a new `EmailSubscriptionUpdate` object for the request of the\n   `PATCH /report/email_subscription/{subscription_id}` endpoint.\n * Introduced a new `ReportSubscriptionOwner` object for the response of\n   `GET /report/email_subscription/{subscription_id}` and\n   `GET /report/{id}/email_subscription` endpoints.\n * Added the envoyStatus field to the response of the GET /organization\n   endpoint.\n * Added new `attachments` field to the `POST /report/{id}/email_subscription`\n   and `PATCH /report/email_subscription/{subscription_id}` endpoints.\n * Removed fields `length` and `isLog` in response of\n   `/mssql/db/{id}/restore_files`.\n * Moved the `/cluster/decommissionNode` endpoint to\n   `/cluster/decommissionNodes`. The `DecommissionNodeConfig` object is renamed\n   as `DecommissionNodesConfig` and now takes in a list of strings which\n   correspond to the IDs of the nodes that are to be decommissioned.\n * Moved the `POST /vmware/vm/{id}/register_agent` endpoint from internal\n   APIs to the v1 APIs.\n * Added a required field for environment in AzureComputeSummary to support\n   Azure Gov Cloud.\n * Remove `POST internal/vmware/vm/snapshot/{id}/mount` endpoint. Use public\n   API of `POST v1/vmware/vm/snapshot/{id}/mount`\n * The input field OperatingSystemType value `Linux` is replaced by `UnixLike`\n   in FilesetTemplateCreateDefinition, used by POST /fileset-template, and\n   in FilesetTemplatePatchDefinition, used by PATCH /fileset_template/{id}.\n * The input field operating_system_type value `Linux` is replaced by `UnixLike`\n   in GET /host-fileset and GET /host-count.\n * Added 'snmpAgentPort' field to SnmpConfig object.\n * Removed `localStorage` and `archiveStorage` from `UnmanagedSnapshotSummary`\n\n ## Feature Additions/improvements:\n * Added optional `storageClass` field to `ObjectStoreReaderConnectDefinition`\n   to store `storageClass` field for the newly connected reader location.\n * Introduced the `GET /node_management/default_gateway` and `POST\n   /node_management/default_gateway` endpoint to get and set default gateway.\n * Introduced the `GET cloud_on/aws/instance_type_list` and `GET\n   cloud_on/azure/instance_type_list` endpoint to fetch list of instance types\n   for aws and azures.\n * Introduced the `GET /aws/account/{id}/subnet` endpoint to fetch an\n   information summary for each of the subnets available in an AWS account.\n * Introduced the `GET /aws/account/{id}/security_group` endpoint to fetch an\n   information summary for each of the security groups belonging to a particular\n   virtual network in an AWS account.\n * Moved definitions `Subnet` and `SecurityGroup` of `definitions/cloud_on.yml`\n   to `definitions/cloud_common.yml` so that both the CloudOn and CloudNative\n   features can use them.\n * Introduced the `GET /host/{id}/diagnose` endpoint to support target host\n   diagnosis features. Network connectivity (machine/agent ping) implemented\n   in the current version.\n * Added vCD endpoints to support vCloud Director. The following endpoints\n   have been added to the vcdCluster object:\n   - `POST /vcd/cluster` to add a new vCD cluster object.\n * Added support for CRUD operations on vCloud Director cluster objects.\n   - POST /vcd/cluster, PATCH /vcd/cluster/{id}, DELETE /vcd/cluster/{id},\n     POST /vcd/cluster/{id}/refresh are the endpoints for adding, editing,\n     deleting and refreshing a vCD cluster object respectively.\n * Introduced endpoint `GET /search/snapshot_search` to search files in a\n   given snapshot. The search supports prefix search only.\n * Introduced the new `POST /storage/array/{id}/refresh` endpoint to\n   create a new refresh job to update the Storage Array metadata.\n * Introduced the new `GET /storage/array/request/{id}` endpoint to\n   get status of a storage array-related asynchronous request.\n * Introduced the new `POST /storage/array/volume/group` endpoint\n   to add a new storage array volume group.\n * Introduced the new `GET /storage/array/volume/group/{id}` endpoint\n   to get details of a storage array volume group.\n * Introduced the new `DELETE /storage/array/volume/group/{id}` endpoint\n   to remove a storage array volume group.\n * Introduced the new `GET /storage/array/hierarchy/{id}` endpoint\n   to get a summary of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/hierarchy/{id}/children` endpoint\n   to get the children of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/hierarchy/{id}/descendants` endpoint\n   to get the descendants of an object in the storage array hierarchy.\n * Introduced the new `GET /storage/array/volume` endpoint to get\n   summary information of all storage array volumes.\n * Introduced the new `GET /storage/array/volume/{id}` endpoint to get\n   details of a storage array volume.\n * Introduced the new `POST /storage/array/volume/group/{id}/snapshot`\n   endpoint to create a new on-demand backup job for a storage array\n   volume group.\n * Introduced the new `PATCH /storage/array/volume/group/{id}` endpoint to\n   update the properties of a storage array volume group object.\n * Introduced the new `GET /storage/array/volume/group` endpoint to\n   get all storage array volume groups subject to specified filters.\n * Introduced endpoint `POST /archive/location/{id}/owner/pause` to pause\n   archiving to a given archival location that is owned by the current cluster.\n * Introduced endpoint `POST /archive/location/{id}/owner/resume` to resume\n   archiving to a given archival location that is owned by the current cluster.\n * Introduced endpoint `POST /archive/location/{id}/reader/promote` to promote\n   the current cluster to be the owner of a specified archival location that is\n   currently connected as a reader location.\n * Introduced endpoint `POST /archive/location/{id}/reader/refresh` to sync the\n   current reader cluster with the contents on the archival location. This pulls\n   in any changes made by the owner cluster to the archival location since the\n   last time the current cluster was synced.\n * Introduced endpoint `POST /archive/dca/reader/connect` to connect as a reader\n   to a DCA archival location.\n * Introduced endpoint `POST /archive/nfs/reader/connect` to connect as a reader\n   to an NFS archival location.\n * Introduced endpoint `POST /archive/object_store/reader/connect` to connect as\n   a reader to an object store location.\n * Introduced endpoint `POST /archive/dca/qstar/connect` to connect as a reader\n   to a QStar archival location.\n * Updated `ArchivalLocationSummary` returned by `GET /archive/location`\n   endpoint to include `ownershipStatus` field, to indicate whether the current\n   cluster is connected to the archival location as an owner (active or paused),\n   as a reader, or if the archival location is deleted.\n * Added the `ca_certs` field to `StorageArrayDefinition` to allow admins\n   to specify certificates used for validation when making network\n   requests to the storage array API service. This effects endpoints\n   `POST /storage/array`, `GET /storage/array/{id}`, and\n   `PUT /storage/array/{id}`.\n * Introduced the `POST /vmware/vm/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given vm snapshot. The URL to\n   download the zip file including the files will be presented to the users.\n * Introduced the `POST /fileset/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given fileset snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Introduced the `POST /nutanix/vm/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given nutanix snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Removed the `POST /nutanix/vm/snapshot/{id}/download_file` endpoint as\n   downloading a single file/folder from the nutanix backup is just a special\n   case of downloading multiple files/folders.\n * Introduced the `POST /hyperv/snapshot/{id}/download_files` endpoint to\n   download multiple files/folders from a given Hyper-V snapshot. The URL to\n   download the zip file including the specific files/folders will be presented\n   to the users.\n * Introduced the POST /managed_volume/snapshot/{id}/download_files endpoint\n   to download multiple files and/or folders from a given managed volume\n   snapshot. This endpoint returns the URL to download the ZIP file that\n   contains the specified files and/or folders.\n * Introduced the new `GET /storage/array/volume/group/{id}/search` endpoint to\n   search storage array volume group for a file.\n * Introduced the new `GET /storage/array/volume/group/snapshot/{id}`\n   endpoint to retrieve details of a storage array volume group snapshot.\n * Introduced the new `DELETE /storage/array/volume/group/snapshot/{id}`\n   endpoint to remove a storage array volume group snapshot.\n * Introduced the new `DELETE /storage/array/volume/group/{id}` endpoint\n   to delete all snapshots of a storage array volume group.\n * Introduced the new `POST /storage/array/volume/group/{id}/download`\n   endpoint to download a storage array volume group snapshot from archival.\n * Introduced new `GET/storage/array/volume/group/snapshot/{id}/restore_files`\n   endpoint to restore files from snapshot of a storage array volume group.\n * Added storage volume endpoints for AWS cloud native workload protection.\n   Endpoints added:\n   - GET /aws/ec2_instance/{id}/storage_volume/ to retrieve\n     all storage volumes details attached to an ec2 instance object.\n   - GET /aws/ec2_instance/{ec2_instance_id}/storage_volume/{id} to retrieve\n     details of a storage volume attached to an ec2 instance object.\n   - POST /aws/ec2_intance/snapshot/{id}/export to export the snapshot of\n     an ec2 instance object to a new ec2 instance object.\n * Introduced the new `POST /storage/array/volume/group/{id}/download_file`\n   endpoint to download a file from an archived storage array volume group\n   snapshot.\n * Introduced the new `GET /storage/array/volume/group/{id}/missed_snapshot`\n   endpoint to get details about all missed snapshots of a storage array volume\n   group.\n * Introduced the `GET /network_throttle` endpoint for retrieving the list of\n   network throttles.\n * Introduced the `PATCH /network_throttle/{id}` endpoint for updating\n   network throttles.\n * Introduced the new `GET /storage/array/host/{id}` endpoint to get details\n   about all storage array volumes connected to a host.\n * Introduced the `GET /organization/{id}/storage/array` endpoint for getting\n   information for authorized storage array resources in an organization.\n * Introduced the `GET /organization/{id}/storage/array/volume_group/metric`\n   endpoint for getting storage array volume groups metrics in an\n   organization.\n * Introduced the new POST /vmware/vm/snapshot/mount/{id}/rollback endpoint to\n   rollback the datastore used by a virtual machine, after an Instant Recovery\n   that used the preserve MOID setting. This endpoint 'rolls back' the\n   recovered virtual machine's datastore from the Rubrik cluster to the\n   original datastore.\n * Added `owner` and `status` fields to the `EmailSubscriptionSummary`\n   object used in responses for many `/report/{id}/email_subscription`\n   and `/report/email_subscription/{subscription_id}` endpoints.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `NfsLocationDetail` object used in responses for `/archive/nfs` and\n   `/archive/nfs/{id}` endpoints.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `QstarLocationSummary` object used in responses for the `/archive/qstar`\n   endpoint.\n * Added `availableSpace` and `readerLocationSummary` fields to the\n   `QstarLocationDetail` object used in responses for the `/archive/qstar/{id}`\n   endpoint.\n * Added `readerLocationSummary` field to the `ObjectStoreLocationDetail`\n   object used in responses for the `/archive/object_store` and\n   `/archive/object_store/{id}` endpoints.\n * Added `readerLocationSummary` field to the `DcaLocationDetail` object\n   used in responses for the `/archive/dca` and `/archive/dca/{id}` endpoints.\n * Added a new field `guestOsType` to `HypervVirtualMachineDetail`\n   object used in response of `GET /hyperv/vm/{id}`\n * Added a new field `guestOsType` to `VirtualMachineDetail`\n   object referred by `VappVmDetail`\n * Added new field `fileType` in response of `/mssql/db/{id}/restore_files`.\n * Added an optional field `agentStatus` to `VirtualMachineSummary` object used\n   in response of `GET /vmware/vm` endpoint. This allows user to check the\n   Rubrik Backup Service connection status of the corresponding VMware VM.\n * Introduced the new `POST /fileset/snapshot/{id}/export_files` endpoint to\n   export multiple files or directories to destination host.\n * Introduced the new `GET /vmware/config/esx_subnets` endpoint to get the\n   the preferred subnets to reach ESX hosts.\n * Introduced the new `PATCH /vmware/config/reset_esx_subnets` endpoint to\n   reset the preferred subnets to reach ESX hosts.\n * Changed the `PATCH /vmware/config/reset_esx_subnets` endpoint to\n   `PATCH /vmware/config/set_esx_subnets`\n * Removed the `needsInspection` field from the NodeStatus object returned in\n   the `/cluster/{id}/node` and `/node` endpoints.\n * Introduced the new `PATCH /auth_domain/{id}` endpoint to update the Active\n   Directory configuration parameters.\n * Introduced the new `GET /cluster/{id}/auto_removed_node` endpoint to\n   query for unacknowledged automatic node removals by the Rubrik cluster.\n * Introduced the new\n   `DELETE /cluster/{id}/auto_removed_node/{node_id}/acknowledge` endpoint to\n   acknowledge an automatic node removal.\n * Introduced the new `GET /cluster/{id}/system_status` endpoint to retrieve\n   information about the status of the Rubrik cluster.\n * Changed the `POST /cloud_on/azure/subscription` endpoint to to take\n   the parameter `AzureSubscriptionRequest` instead of\n   `AzureSubscriptionCredential` in body.\n * Changed the `POST /cloud_on/azure/storage_account` endpoint to to take\n   the parameter `AzureStorageAccountRequest` instead of\n   `AzureStorageAccountCredential` in body.\n * Changed the `POST /cloud_on/azure/resource_group` endpoint to take\n   the parameter `AzureResourceGroupRequest` instead of\n   `AzureResourceGroupCredential` in body.\n * Introduced the new `POST /polaris/metadata/query_by_ids` endpoint to request\n   composite row IDs from a Rubrik cluster for storage in the Polaris\n   metadata store.\n * Added new optional fields 'organizationId' and 'organizationName' to\n   `/host/{id}` and `/host` endpoints to get the organization a host is\n   assigned to due to Envoy.\n * Introduced a new `GET /host/envoy` endpoint. Acts similar to queryHost but\n   also includes Envoy organization info if Envoy is enabled.\n * Added a `reportTemplate` field to the response of both the\n   `GET /report/{id}/table` and `GET /report/{id}/chart` endpoints.\n\n ### Changes to Internal API in Rubrik version 4.1\n ## Changes to support instance from image\n * POST /aws/instance and /azure/instance was supported only from a Rubrik\n   snapshot. Now it is changed to support instantiation from Rubrik snapshot as\n   well as pre-existing image. Rest end point is same, we just changed the\n   CreateCloudInstanceRequest object type.\n * Add a new field 'ignoreErrors' to POST /vmware/vm/snapshot/{id}/restore_files\n   that will let job restore ignore file errors during restore job.\n ## Breaking changes:\n * None is removed as a Nutanix snapshot consistency mandate so it is no\n   longer valid in GET /nutanix/vm, GET /nutanix/vm/{id}, and\n   PATCH /nutanix/vm/{id}.\n * computeSecurityGroupId is replaced by the object defaultComputeNetworkConfig\n   in ObjectStoreLocationSummary ,ObjectStoreUpdateDefinition and\n   ObjectStoreReconnectDefinition which are used by\n   GET /archive/object_store/{id}, PATCH /archive/object_store/{id} and\n   POST /archive/object_store/reconnect respectively.\n * The PUT /throttle endpoint was changed to provide configuration for\n   Hyper-V adaptive throttling. Three parameters were added:\n   hypervHostIoLatencyThreshold, hypervHostCpuUtilizationThreshold, and\n   hypervVmCpuUtilizationThreshold. To differentiate between the multiple\n   hypervisors, the existing configuration parameters for VMware were renamed\n   VmwareVmIoLatencyThreshold, VmwareDatastoreIoLatencyThreshold and\n   VmwareCpuUtilizationThreshold. These changes also required modifications\n   and additions to the GET /throttle endpoint.\n * For `POST /cluster/{id}/node` endpoint, it gets now `AddNodesConfig` in body\n   instead of `Map_NodeConfig` directly.\n * For `POST /node_management/replace_node` endpoint, added the `ipmiPassword`\n   field to the `ReplaceNodeConfig` object.\n * For `POST /stats/system_storage` endpoint, added the miscellaneous, liveMount\n   and snapshot field to `SystemStorageStats` object.\n * For `POST /principal_search`, removed `managedId` field from the\n   `PrincipalSummary` object and changed the `id` field of the\n   `PrincipalSummary` object to correspond to the managed id instead of the\n   simple id.\n * For `GET /cluster/{id}/timezone` and `PATCH /cluster/{id}/timezone`, the\n   functionality has merged into `GET /cluster/{id}` and `PATCH /cluster/{id}`\n   in v1.\n * Removed the `GET /cluster/{id}/decommissionNodeStatus` endpoint.\n   Decommission status is now available through queries of the `jobId` that is\n   returned by a decommission request. Queries can be performed at the\n   `GET /job/{id}` endpoint.\n * For `GET /api/internal/managed_volume/?name=<name>`, the name match is now\n   exact instead of infix\n * Updated the list of available attribute and measure values for the `chart0`\n   and `chart1` parameters for the `PATCH /report/{id}` endpoint.\n * Updated the list of available column values for the `table` parameter for the\n   `PATCH /report/{id}` endpoint.\n * Updated the `FolderHierarchy` response object to include\n   `effectiveSlaDomainId`, `effectiveSlaDomainName`,\n   `effectiveSlaSourceObjectId`, and `effectiveSlaSourceObjectName`.\n\n ## Feature Additions/improvements:\n * Added the field `pendingSnapshotCount` to ManagedVolumeSummary and\n   ManagedVolumeDetail objects used in responses for endpoints\n   `GET /managed_volume`, `POST /managed_volume`, `GET /managed_volume/{id}`,\n   `PATCH /managed_volume/{id}`, `GET /organization/{id}/managed_volume`.\n * Introduced the `GET /managed_volume/snapshot/export/{id}` endpoint\n   to retrieve details of a specific managed volume snapshot export.\n * Added the 'name' filter for GET requests on the /replication/target endpoint.\n   This filter allows users to filter results based on the name of a\n   replication target.\n * Added the 'name' filter for GET requests on the /archive/location endpoint.\n   This filter allows users to filter results based on the name of an\n   archival location.\n * Added new fields 'replicas' and 'availabilityGroupId' on GET /mssql\n   and GET /mssql/{id}. If a database is an availability database,\n   it will have some number of replicas, which are copies of the database\n   running on different instances. Otherwise, there will only be one\n   replica, which represents the single copy of the database. The field\n   'availabilityGroupId' will be set only for availability databases\n   and points to the availability group of the database. Also deprecated\n   several fields on these endpoints, as they should now be accessed via\n   the 'replicas' field.\n * Added 'Cluster' notification type.\n * Added optional 'organizationId' parameter to to the grant/revoke and get\n  authorization endpoints. This parameter can be used to\n   grant/revoke/get authorizations with respect to a specific Organization.\n * Added endpoint to get/set whether the Rubrik Backup Service is automatically\n   deployed to a guest OS.\n * Added cloudInstantiationSpec field to Hyper-V VM endpoint for configuring\n   automatic cloud conversion\n * Introduced a new end point /cluster/{id}/platforminfo to GET information\n   about the platform the current software is running on\n * Introduced the `GET /organization` and `GET /organization/{id}` endpoints\n   for retrieving the list of organizations and a single organization.\n * Introduced the `POST /organization` endpoint for creating organizations,\n   the `PATCH /organization/{id}` endpoint for updating organizations and the\n   `DELETE /organization/{id}` endpoint for deleting organizations.\n * Introduced the `GET /organization/{id}/stats/storage_growth_timeseries`\n   endpoint and the `GET /organization/{id}/stats/total_storage_usage` for\n   getting Physical Storage Growth over Time and Total Physical Storage Usage\n   on a per Organization basis.\n * Introduced a number of endpoints of the format\n   `GET /organization/{id}/<resource-type>` for retrieving all the resources of\n   the corresponding type in a given organization.\n * Introduced a number of endpoints of the format\n   `GET /organization/{id}/<resource-type>/metric` for retrieving the protection\n   counts of the resources of the corresponding type in a given organization.\n * Added the 'reportTemplate' filter for GET requests on the /report endpoint.\n   This allows queried reports to be filtered and sorted by report template.\n * Introduced the `POST /cluster/{id}/security/password/strength` endpoint\n   for assessing the strength of passwords during bootstrap through rkcli.\n * Added a new 'ipv6' field in the response of the `GET /cluster/{id}/discover`\n   endpoint.\n * Added relatedIds field for EventSummary object to give more context about\n   the event.\n * Added operatingSystemType field for NutanixSummary object. This field\n   represents the type of operating system on the Nutanix virtual machine.\n\n ### Changes to Internal API in Rubrik version 4.0\n ## Breaking changes:\n * For `GET /unmanaged_object` endpoint, replaced the 'Fileset' of object_type\n   filter with more specific object types: 'WindowsFileset', 'LinuxFileset' and\n   'ShareFileset'. Also added filter value for additional unmanaged objects\n   we now support.\n * For /mssql/db/{id}/compatible_instance added recoveryType as mandatory\n   query parameter\n\n ## Feature Additions/improvements:\n * Added QStar end points to support it as an archival location. The location\n   is always encrypted and an encryption password must be set while adding the\n   location. End points added:\n   - `DELETE /archive/qstar` to clean up the data in the bucket in the QStar\n     archival location.\n   - `GET /archive/qstar` to retrieve a summary of all QStar archival locations.\n   - `POST /archive/qstar` to add a QStar archival location.\n   - `POST /archive/qstar/reconnect` to reconnect to a specific QStar archival\n     location.\n   - `POST /archive/qstar/remove_bucket` to remove buckets matching a prefix\n      from QStar archival location.\n   - `GET /archive/qstar/{id}` to retrieve a summary information from a specific\n     QStar archival location.\n   - `PATCH /archive/qstar/{id}` to update a specific QStar archival location.\n * Added the 'name' filter for GET requests on the /archive/location endpoint.\n   This filter allows users to filter results based on the name of an\n   archival location.\n * Introduced an optional parameter `encryptionPassword` for the\n   `/data_location/nfs` `POST` endpoint. This password is used for\n   deriving the master key for encrypting the NFS archival location.\n * Introduced /managed\\_volume, /managed\\_volume/snapshot/export/{id},\n   and other child endpoints for creating, deleting, and updating\n   Managed Volumes and its exports and snapshots.\n * Added support for Hyper-V.\n * Add new /hierarchy endpoint to support universal hierarchy view.\n * Added support for Nutanix.\n * Moved and merged vCenter refresh status and delete status from independent\n   internal endpoints to a single status field in v1 vCenter detail.\n * Added endpoint to get/set whether the Rubrik Backup Service is automatically\n   deployed to a guest OS.\n * Introduced an optional parameter `minTolerableNodeFailures` for the\n   `/cluster/decommissionNode` `POST` endpoint. This parameter specifies the\n   minimum fault tolerance to node failures that must exist when a node is\n   decommissioned.\n * Added `nodeId` to `AsyncRequestStatus` to improve debugging job failures.\n\n ### Changes to Internal API in Rubrik version 3.2.0\n ## Breaking changes:\n * Introduced endpoint /host/share/id/search to search for\n   files on the network share.\n * Introduced endpoints /host/share and /host/share/id to\n   support native network shares under /host endpoint.\n * For /unmanaged_object endpoints, change sort_attr to sort_by\n   sort_attr used to accept a comma separated list of column names to sort.\n   Now sort_by only accepts a single column name.\n * For /unmanaged_object endpoints, removed the need for object type when\n   deleting unmanaged objects and its snapshots.\n\n ## Feature Additions/improvements:\n * Added internal local_<component> end points. These are used for\n   handling operations on per-node auto-scaling config values.\n   Please see src/spec/local-config/comments for details.\n * For the response of /mssql/db/{id}/restore_files, added two more fields\n   for each file object. They are the original file name and file length\n   of the file to be restore.\n * Introduced a new end point /cluster/{id}/is_registered to GET registration\n   status. With this change, we can query if the cluster is registered in the\n   Rubrik customer database.\n * Introduced a new end point /cluster/{id}/registration_details to POST\n   registration details. Customers are expected to get the registration details\n   from the support portal. On successful submission of registration details\n   with a valid registration id, the cluster will mark itself as registered.\n * For the /mssql/instance/{id} end point, added fields configuredSlaDomainId,\n   configuredSlaDomainName, logBackupFrequencyInSeconds, logRetentionHours,\n   and copyOnly.\n * Introduced optional parameter keepMacAddresses to\n   POST /vmware/vm/snapshot/{id}/mount, /vmware/vm/snapshot/{id}/export, and\n   /vmware/vm/snapshot/{id}/instant_recovery endpints.\n   This allows new VMs to have the same MAC address as their source VMs.\n\n ## Bug fixes:\n * Made path parameter required in GET /browse. Previously, an error was\n   thrown when path wasn't passed in. This solves that bug.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "archive",
			"item": [
				{
					"name": "Retrieve an array of DCA archival location objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca"
							]
						},
						"description": "Returns an array containing DCA archival locations, and information specific to them. DCA is a subset of the normal object storage locations, so these DCA locations will also be returned by the /archive/object_store GET API."
					},
					"response": []
				},
				{
					"name": "Add a new DCA archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca"
							]
						},
						"description": "Add a new DCA archival location. Initiates an asynchronous job to connect to the archival location."
					},
					"response": []
				},
				{
					"name": "Generate a new private key and return a certificate signing request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information for client certificate request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca/csr",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca",
								"csr"
							]
						},
						"description": "Generates a new private key and return base64 encoded PKCS#10 certificate signing request. If there is a pending DCA CSR, this will invalidate it and create a new one."
					},
					"response": []
				},
				{
					"name": "Connect to a DCA archival location as a reader",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object that contains information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca/reader/connect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca",
								"reader",
								"connect"
							]
						},
						"description": "Connect to an existing DCA archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Reconnect to a specific DCA archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca/reconnect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca",
								"reconnect"
							]
						},
						"description": "Reconnect to a specific DCA archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/dca/reader/connect instead."
					},
					"response": []
				},
				{
					"name": "Get information about a specific DCA archival location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get information about a specific DCA archival location."
					},
					"response": []
				},
				{
					"name": "Update a DCA archival location",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/dca/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"dca",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the properties of a DCA archival location."
					},
					"response": []
				},
				{
					"name": "Get summary information for all archival locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location?status={{status}}&name={{name}}&sort_by={{sort_by}}&sort_order={{sort_order}}&location_type={{location_type}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								},
								{
									"key": "location_type",
									"value": "{{location_type}}"
								}
							]
						},
						"description": "Retrieve information for all archival locations, including ID, type, status, address, and bucket count."
					},
					"response": []
				},
				{
					"name": "Get running connection jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/connect_job",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								"connect_job"
							]
						},
						"description": "Retrieve a list of all running connection and reconnection jobs for archival locations. Returns summary information about the archival location and the job."
					},
					"response": []
				},
				{
					"name": "Get details about a archival location connect job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/job/connect/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								"job",
								"connect",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following information about job: ID of job, job status, error details, start time of job, end time of job, job type, ID of the node, job progress and location id."
					},
					"response": []
				},
				{
					"name": "Get details about an archival location reconnect job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/job/reconnect/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								"job",
								"reconnect",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following information about job: ID of job, job status, error details, start time of job, end time of job, job type, ID of the node, job progress and location id"
					},
					"response": []
				},
				{
					"name": "Delete an archival location",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete the specified archival location. Remove the archival location from the SLA Domains that reference it and expire all snapshots at the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Pause archiving",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/:id/owner/pause",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								":id",
								"owner",
								"pause"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Pause archiving to a specified active archival location of the current Rubrik cluster.\n"
					},
					"response": []
				},
				{
					"name": "Resume archiving",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/:id/owner/resume",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								":id",
								"owner",
								"resume"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Resume archiving to a specified archival location of the current Rubrik cluster.\n"
					},
					"response": []
				},
				{
					"name": "Take ownership of a reader archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/:id/reader/promote?refresh_before_promote={{refresh_before_promote}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								":id",
								"reader",
								"promote"
							],
							"query": [
								{
									"key": "refresh_before_promote",
									"value": "{{refresh_before_promote}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to make the current Rubrik cluster the owner of a reader archival location. After successful completion, the Rubrik cluster that was the previous owner will not have access to the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Refresh archive information",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/location/:id/reader/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"location",
								":id",
								"reader",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the current Rubrik cluster with information aout the changes made to an archival location by the Rubrik cluster that is the owner of the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Get NFS archival locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/nfs",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"nfs"
							]
						},
						"description": "Retrieve an array of NFS archival location objects for the cluster.\n"
					},
					"response": []
				},
				{
					"name": "Add a new NFS archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/nfs",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"nfs"
							]
						},
						"description": "Add a new NFS archival location. Initiate an asynchronous job to connect to the archival location target.\n"
					},
					"response": []
				},
				{
					"name": "Connect to an NFS archival location as a reader",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Access credentials for the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/nfs/reader/connect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"nfs",
								"reader",
								"connect"
							]
						},
						"description": "Connect the current cluster to an existing NFS archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Reconnect to a specific NFS archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Archival location credentials."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/nfs/reconnect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"nfs",
								"reconnect"
							]
						},
						"description": "Reconnect to a specific NFS archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/nfs/reader/connect instead.\n"
					},
					"response": []
				},
				{
					"name": "Update an NFS archival location",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/nfs/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"nfs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the properties of an NFS archival location."
					},
					"response": []
				},
				{
					"name": "Get object storage archival locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store"
							]
						},
						"description": "Retrieve an array of archival locations from the Rubrik cluster. The array contains all object storage locations, but does not include NFS and QStar locations.\n"
					},
					"response": []
				},
				{
					"name": "Add an object storage archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store"
							]
						},
						"description": "Start an asynchronous job to add a new object storage location.\n"
					},
					"response": []
				},
				{
					"name": "Connect to an object storage archival location as reader",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Access credentials for the specified object storage archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store/reader/connect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store",
								"reader",
								"connect"
							]
						},
						"description": "Connect the current cluster as a reader to an existing object storage location. Initiates an asynchronous job to connect to the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Reconnect to a specific object storage archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Archival location credentials."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store/reconnect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store",
								"reconnect"
							]
						},
						"description": "Reconnect to a specific object storage location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/object_store/reader/connect instead.\n"
					},
					"response": []
				},
				{
					"name": "Get information about an object storage archival location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the archival location object for a specific object storage location.\n"
					},
					"response": []
				},
				{
					"name": "Update an object storage archival location",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing information about the archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the properties of an object storage location. To update the bucket count, specify a value equal to or greater than the existing bucket count.\n"
					},
					"response": []
				},
				{
					"name": "Complete or abort an in-progress vault lock operation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object describing the operation to perform: Complete or Abort.\n"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/object_store/:id/glacier_vault_lock",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"object_store",
								":id",
								"glacier_vault_lock"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update an existing in-progress vault lock operation on a specific Amazon Glacier archival location, by either completing or aborting the current vault lock.\n"
					},
					"response": []
				},
				{
					"name": "Retrieve an array of QStar archival location objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar"
							]
						},
						"description": "Retrieve an array containing summary information for all QStar archival location objects."
					},
					"response": []
				},
				{
					"name": "Add a QStar archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object that contains information about the specified QStar archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar"
							]
						},
						"description": "Add a new QStar archival location object. Initiates an asynchronous job to connect to the archival location."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the QStar archival location",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Archival definition"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "Connect to a QStar archival location as a reader",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Access credentials for the specified QStar archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar/reader/connect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar",
								"reader",
								"connect"
							]
						},
						"description": "Connect to an existing QStar archival location as a reader. Initiates an asynchronous job to connect to the archival location.\n"
					},
					"response": []
				},
				{
					"name": "Reconnect to a QStar archival location",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Access credentials for the specified QStar archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar/reconnect",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar",
								"reconnect"
							]
						},
						"description": "Reconnect to a specified QStar archival location. Initiates an asynchronous job to connect to the archival location. This operation is deprecated. Use /archive/qstar/reader/connect instead."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Remove bucket request configurations"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar/remove_bucket",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar",
								"remove_bucket"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all QStar buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "Get information for a QStar archival location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for a specified QStar archival location."
					},
					"response": []
				},
				{
					"name": "Update a QStar archival location",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object that contains information about the specified QStar archival location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/archive/qstar/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"archive",
								"qstar",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the properties of a QStar archival location object."
					},
					"response": []
				}
			],
			"description": "Folder for archive"
		},
		{
			"name": "authorization",
			"item": [
				{
					"name": "Queries the current list of explicit authorizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization?principals={{principals}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								}
							]
						},
						"description": "Queries the current list of explicit authorizations"
					},
					"response": []
				},
				{
					"name": "Queries the current effective authorizations on the specified resources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Query listing all resources to get effective authorizations for"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/effective/for_resources",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"effective",
								"for_resources"
							]
						},
						"description": "Queries the current effective authorizations on the specified resources"
					},
					"response": []
				},
				{
					"name": "Queries the current effective authorizations by role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/effective/roles?principal={{principal}}&resource_types={{resource_types}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"effective",
								"roles"
							],
							"query": [
								{
									"key": "principal",
									"value": "{{principal}}"
								},
								{
									"key": "resource_types",
									"value": "{{resource_types}}"
								}
							]
						},
						"description": "Queries the current effective authorizations by role"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the admin role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/admin?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"admin"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the admin role"
					},
					"response": []
				},
				{
					"name": "Grants an admin authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"admin"
							]
						},
						"description": "Grants an admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes an admin authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"admin"
							]
						},
						"description": "Revokes an admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the end_user role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/end_user?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"end_user"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the end_user role"
					},
					"response": []
				},
				{
					"name": "Grants an end_user authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/end_user",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"end_user"
							]
						},
						"description": "Grants an end_user authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes an end_user authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/end_user",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"end_user"
							]
						},
						"description": "Revokes an end_user authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the managed_volume_admin role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_admin?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_admin"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the managed_volume_admin role"
					},
					"response": []
				},
				{
					"name": "Grants a managed_volume_admin authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_admin"
							]
						},
						"description": "Grants a managed_volume_admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes a managed_volume_admin authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_admin"
							]
						},
						"description": "Revokes a managed_volume_admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the managed_volume_user role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_user?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_user"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the managed_volume_user role"
					},
					"response": []
				},
				{
					"name": "Grants a managed_volume_user authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_user",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_user"
							]
						},
						"description": "Grants a managed_volume_user authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes a managed_volume_user authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/managed_volume_user",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"managed_volume_user"
							]
						},
						"description": "Revokes a managed_volume_user authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the org_admin role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/org_admin?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"org_admin"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the org_admin role"
					},
					"response": []
				},
				{
					"name": "Grants an org_admin authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/org_admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"org_admin"
							]
						},
						"description": "Grants an org_admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes an org_admin authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/org_admin",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"org_admin"
							]
						},
						"description": "Revokes an org_admin authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Gets the current list of explicit authorizations for the organization role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/organization?principals={{principals}}&organization_id={{organization_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"organization"
							],
							"query": [
								{
									"key": "principals",
									"value": "{{principals}}"
								},
								{
									"key": "organization_id",
									"value": "{{organization_id}}"
								}
							]
						},
						"description": "Gets the current list of explicit authorizations for the organization role"
					},
					"response": []
				},
				{
					"name": "Grants an organization authorization for principal(s)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to add"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/organization",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"organization"
							]
						},
						"description": "Grants an organization authorization for principal(s)"
					},
					"response": []
				},
				{
					"name": "Revokes an organization authorization for principal(s)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy describing the authorization to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/authorization/role/organization",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"authorization",
								"role",
								"organization"
							]
						},
						"description": "Revokes an organization authorization for principal(s)"
					},
					"response": []
				}
			],
			"description": "Folder for authorization"
		},
		{
			"name": "aws",
			"item": [
				{
					"name": "Get information for AWS accounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account?limit={{limit}}&offset={{offset}}&name={{name}}&sort_by=Name&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "Name"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Retrieve information for each AWS account object. Optionally, sort the set of returned objects."
					},
					"response": []
				},
				{
					"name": "Add an AWS account.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration to use to add an AWS account object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account"
							]
						},
						"description": "Add an AWS account object using specified configuration."
					},
					"response": []
				},
				{
					"name": "Get AWS account request details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details about a specified asynchronous request for an AWS account object."
					},
					"response": []
				},
				{
					"name": "Get security groups by AWS account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/security_group?access_key={{access_key}}&secret_key={{secret_key}}&region={{region}}&vpc_id={{vpc_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								"security_group"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{access_key}}"
								},
								{
									"key": "secret_key",
									"value": "{{secret_key}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								},
								{
									"key": "vpc_id",
									"value": "{{vpc_id}}"
								}
							]
						},
						"description": "Retrieve a list of the security groups available for a specified AWS account."
					},
					"response": []
				},
				{
					"name": "Get subnets by AWS account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/subnet?access_key={{access_key}}&secret_key={{secret_key}}&region={{region}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								"subnet"
							],
							"query": [
								{
									"key": "access_key",
									"value": "{{access_key}}"
								},
								{
									"key": "secret_key",
									"value": "{{secret_key}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								}
							]
						},
						"description": "Retrieve a list of the subnets available for a specified AWS account."
					},
					"response": []
				},
				{
					"name": "Get AWS account details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details of an AWS account with a specified ID."
					},
					"response": []
				},
				{
					"name": "Update an AWS account",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration to use to update an AWS account."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Provide updated information for a specified AWS account object."
					},
					"response": []
				},
				{
					"name": "Delete an AWS account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id?delete_existing_snapshots=false",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id"
							],
							"query": [
								{
									"key": "delete_existing_snapshots",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete an AWS account object specified by its ID. Optionally, delete all existing snapshot data at the cloud location associated with the specified AWS account."
					},
					"response": []
				},
				{
					"name": "Get AWS resources that should get GC.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id/garbage_resource?include_instances={{include_instances}}&include_volumes={{include_volumes}}&include_snapshots={{include_snapshots}}&include_images={{include_images}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id",
								"garbage_resource"
							],
							"query": [
								{
									"key": "include_instances",
									"value": "{{include_instances}}"
								},
								{
									"key": "include_volumes",
									"value": "{{include_volumes}}"
								},
								{
									"key": "include_snapshots",
									"value": "{{include_snapshots}}"
								},
								{
									"key": "include_images",
									"value": "{{include_images}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve AWS IDs for all AWS resources that should get GC."
					},
					"response": []
				},
				{
					"name": "Refresh an AWS account",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Refresh  the information an AWS account object identified by its ID."
					},
					"response": []
				},
				{
					"name": "Get security groups by AWS account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id/security_group?vpc_id={{vpc_id}}&region={{region}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id",
								"security_group"
							],
							"query": [
								{
									"key": "vpc_id",
									"value": "{{vpc_id}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve a list of the security groups available for a specified AWS account ID."
					},
					"response": []
				},
				{
					"name": "Get subnets by AWS account",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/account/:id/subnet?region={{region}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"account",
								":id",
								"subnet"
							],
							"query": [
								{
									"key": "region",
									"value": "{{region}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve a list of the subnets available for a specified AWS account ID."
					},
					"response": []
				},
				{
					"name": "Get EC2 instance objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance?limit={{limit}}&offset={{offset}}&name={{name}}&effective_sla_domain_id={{effective_sla_domain_id}}&sla_assignment={{sla_assignment}}&region={{region}}&primary_cluster_id={{primary_cluster_id}}&is_relic={{is_relic}}&sort_by=instanceId&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "sort_by",
									"value": "instanceId"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Retrieve summary information for all EC2 instance objects from all AWS account objects."
					},
					"response": []
				},
				{
					"name": "Indexing update of specified EC2 instances",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the updates of the indexing state of a given list of EC2 instances."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/indexing_state",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"indexing_state"
							]
						},
						"description": "Update whether to enable or disable indexing in the specified list of EC2 instances."
					},
					"response": []
				},
				{
					"name": "Get request status for EC2 instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details of an asynchronous request for an EC2 instance object."
					},
					"response": []
				},
				{
					"name": "Get details for an EC2 instance snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about an EC2 instance snapshot."
					},
					"response": []
				},
				{
					"name": "Delete EC2 instance snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete an EC2 instance snapshot by resetting the retention to cause immediate expiration. The snapshot must be an on-demand snapshot or a snapshot from an EC2 instance that is not currently managed."
					},
					"response": []
				},
				{
					"name": "Get directories and files in EC2 instance snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve a directory and file listing for a specified EC2 instance snapshot. The listing starts at a point in the directory hierarchy specified by an absolute path value."
					},
					"response": []
				},
				{
					"name": "Download files from EC2 instance snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for file download from an EC2 instance snapshot"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate a download request for files in a specified EC2 instance snapshot."
					},
					"response": []
				},
				{
					"name": "Export EC2 instance snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for exporting an EC2 instance snapshot"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/snapshot/:id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								"snapshot",
								":id",
								"export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export a specified snapshot of an EC2 instance."
					},
					"response": []
				},
				{
					"name": "Update storage volume protection",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update on a specified AWS storage volume object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:ec2_instance_id/storage_volume/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":ec2_instance_id",
								"storage_volume",
								":id"
							],
							"variable": [
								{
									"key": "ec2_instance_id",
									"value": "{{ec2_instance_id}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update whether to take snapshots of a specified AWS storage volume object."
					},
					"response": []
				},
				{
					"name": "Get EC2 instance details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details of an EC2 instance object."
					},
					"response": []
				},
				{
					"name": "Update EC2 instance",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties for an EC2 object update."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the configuration of a specific EC2 instance object with specified properties."
					},
					"response": []
				},
				{
					"name": "Restore in-place an EC2 instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the in-place restore of an EC2 instance."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/inplace_restore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"inplace_restore"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate the in-place restore of an EC2 instance from a given snapshot."
					},
					"response": []
				},
				{
					"name": "Get missed snapshots for an EC2 instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details about missed policy-driven snapshots for an EC2 instance."
					},
					"response": []
				},
				{
					"name": "Search for file in an EC2 instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search across all the snapshots for a file within the EC2 instance. Search by using a full path prefix or a filename prefix."
					},
					"response": []
				},
				{
					"name": "Get snapshot list for EC2 instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve information about all of the snapshots of a specified EC2 instance."
					},
					"response": []
				},
				{
					"name": "Initiate on-demand snapshot for EC2 instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for an on-demand snapshot of an EC2 instance"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Use the object ID for an EC2 instance to Initiate an on-demand snapshot."
					},
					"response": []
				},
				{
					"name": "Delete all snapshots of an EC2 instance",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots of an EC2 instance. To perform this action, the EC2 instance cannot currently be assigned to an SLA Domain."
					},
					"response": []
				},
				{
					"name": "Get EC2 storage volumes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/ec2_instance/:id/storage_volume?limit={{limit}}&offset={{offset}}&volume_path={{volume_path}}&sort_by=VolumePath&sort_order=asc&root_volume={{root_volume}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"ec2_instance",
								":id",
								"storage_volume"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "volume_path",
									"value": "{{volume_path}}"
								},
								{
									"key": "sort_by",
									"value": "VolumePath"
								},
								{
									"key": "sort_order",
									"value": "asc"
								},
								{
									"key": "root_volume",
									"value": "{{root_volume}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for all storage volume objects of an EC2 instance object."
					},
					"response": []
				},
				{
					"name": "Get hierarchy of an AWS object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the hierarchy details for an AWS object."
					},
					"response": []
				},
				{
					"name": "Get direct children of AWS account object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/hierarchy/:id/children?limit={{limit}}&offset={{offset}}&name={{name}}&region={{region}}&sla_assignment={{sla_assignment}}&effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&sort_by=name&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "sort_by",
									"value": "name"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for all AWS instance objects that are direct children of a specified AWS account object."
					},
					"response": []
				},
				{
					"name": "Get full hierarchy for AWS account object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/aws/hierarchy/:id/descendants?limit={{limit}}&offset={{offset}}&name={{name}}&region={{region}}&sla_assignment={{sla_assignment}}&effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&sort_by=name&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"aws",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "region",
									"value": "{{region}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "sort_by",
									"value": "name"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for all AWS instance objects that are descendants of a specified AWS account object."
					},
					"response": []
				}
			],
			"description": "Folder for aws"
		},
		{
			"name": "backup_throttle",
			"item": [
				{
					"name": "Get backup throttle settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/backup_throttle",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"backup_throttle"
							]
						},
						"description": "Retrieve the configuration of the backup throttle for the specified Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Change the backup throttle settings",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Backup throttle configuration"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/backup_throttle",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"backup_throttle"
							]
						},
						"description": "Change the backup throttling settings. This request completely replaces the existing settings. Unspecified fields are cleared and are not used for backup throttling."
					},
					"response": []
				}
			],
			"description": "Folder for backup_throttle"
		},
		{
			"name": "blackout_window",
			"item": [
				{
					"name": "Get current status of global blackout window.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/blackout_window",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"blackout_window"
							]
						},
						"description": "Determine whether global blackout window is currently active."
					},
					"response": []
				},
				{
					"name": "Starts or stops the global blackout window in local Rubrik cluster.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Whether to start or stop the global blackout window."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/blackout_window",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"blackout_window"
							]
						},
						"description": "Return whether we are in blackout window or not"
					},
					"response": []
				}
			],
			"description": "Folder for blackout_window"
		},
		{
			"name": "browse",
			"item": [
				{
					"name": "Lists all files and directories in a given path",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/browse?snapshot_id={{snapshot_id}}&path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"browse"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								},
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Lists all files and directories in a given path"
					},
					"response": []
				}
			],
			"description": "Folder for browse"
		},
		{
			"name": "cloud_on",
			"item": [
				{
					"name": "Query for a list of a Aws cloud images.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/image?snappable_id={{snappable_id}}&location_id={{location_id}}&offset={{offset}}&limit={{limit}}&snappable_name={{snappable_name}}&sort_by=SourceVmName&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"image"
							],
							"query": [
								{
									"key": "snappable_id",
									"value": "{{snappable_id}}"
								},
								{
									"key": "location_id",
									"value": "{{location_id}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "snappable_name",
									"value": "{{snappable_name}}"
								},
								{
									"key": "sort_by",
									"value": "SourceVmName"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Query for a list of a Aws cloud images."
					},
					"response": []
				},
				{
					"name": "Get details about a given Aws cloud image.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/image/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"image",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a given Aws cloud image."
					},
					"response": []
				},
				{
					"name": "Delete a given Aws cloud image.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/image/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"image",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a given Aws cloud image."
					},
					"response": []
				},
				{
					"name": "Query for a list of a Aws cloud instances.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance?offset={{offset}}&limit={{limit}}&snappable_name={{snappable_name}}&sort_by=SourceVmName&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance"
							],
							"query": [
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "snappable_name",
									"value": "{{snappable_name}}"
								},
								{
									"key": "sort_by",
									"value": "SourceVmName"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Query for a list of a Aws cloud instances."
					},
					"response": []
				},
				{
					"name": "Create an instance on AWS.\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request to create a new Aws public cloud instance."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance"
							]
						},
						"description": "Create an instance at a specified location on AWS using a specified snapshot or cloud image. When a cloud image does not exist, one is created to use for the instantiation. For a cloud image, the imageId member is required. For a snapshot, the snapshotId and snappableId members are both required.\n"
					},
					"response": []
				},
				{
					"name": "Turn on or off a given Aws cloud instance.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance"
							]
						},
						"description": "Turn on or off a given Aws cloud instance."
					},
					"response": []
				},
				{
					"name": "Get details about a given Aws cloud instance.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a given Aws cloud instance."
					},
					"response": []
				},
				{
					"name": "Delete a given Aws cloud instance.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a given Aws cloud instance."
					},
					"response": []
				},
				{
					"name": "Get list of all instance types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/instance_type_list",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"instance_type_list"
							]
						},
						"description": "Get list of all instance types"
					},
					"response": []
				},
				{
					"name": "Get the recommended instance type for a given snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/recommended_instance_type?snapshot_id={{snapshot_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"recommended_instance_type"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Get the recommended instance type for a given snapshot"
					},
					"response": []
				},
				{
					"name": "Get asynchronous request details for Aws-related jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of an asynchronous request that involves Aws"
					},
					"response": []
				},
				{
					"name": "Get list of security group IDs queried by Aws location and VPC IDs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/security_group?data_location_id={{data_location_id}}&vpc_id={{vpc_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"security_group"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "{{data_location_id}}"
								},
								{
									"key": "vpc_id",
									"value": "{{vpc_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of subnets queried by Aws location ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/aws/subnet?data_location_id={{data_location_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"aws",
								"subnet"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "{{data_location_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query for a list of a azure cloud images.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/image?snappable_id={{snappable_id}}&location_id={{location_id}}&offset={{offset}}&limit={{limit}}&snappable_name={{snappable_name}}&sort_by=SourceVmName&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"image"
							],
							"query": [
								{
									"key": "snappable_id",
									"value": "{{snappable_id}}"
								},
								{
									"key": "location_id",
									"value": "{{location_id}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "snappable_name",
									"value": "{{snappable_name}}"
								},
								{
									"key": "sort_by",
									"value": "SourceVmName"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Query for a list of a azure cloud images."
					},
					"response": []
				},
				{
					"name": "Get details about a given azure cloud image.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/image/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"image",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a given azure cloud image."
					},
					"response": []
				},
				{
					"name": "Delete a given Azure cloud image.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/image/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"image",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a given Azure cloud image."
					},
					"response": []
				},
				{
					"name": "Query for a list of a azure cloud instances.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance?offset={{offset}}&limit={{limit}}&snappable_name={{snappable_name}}&sort_by=SourceVmName&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance"
							],
							"query": [
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "snappable_name",
									"value": "{{snappable_name}}"
								},
								{
									"key": "sort_by",
									"value": "SourceVmName"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Query for a list of a azure cloud instances."
					},
					"response": []
				},
				{
					"name": "create an instance on Azure.\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request to create a new Azure public cloud instance."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance"
							]
						},
						"description": "Create an instance at a specified location on Azure using a specified snapshot or cloud image. When a cloud image does not exist, one is created to use for the instantiation. For a cloud image, the imageId member is required. For a snapshot, the snapshotId and snappableId members are both required.\n"
					},
					"response": []
				},
				{
					"name": "Turn on or off a given azure cloud instance.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance"
							]
						},
						"description": "Turn on or off a given azure cloud instance."
					},
					"response": []
				},
				{
					"name": "Get details about a given azure cloud instance.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a given azure cloud instance."
					},
					"response": []
				},
				{
					"name": "Delete a given Azure cloud instance.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a given Azure cloud instance."
					},
					"response": []
				},
				{
					"name": "Get list of all instance types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/instance_type_list",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"instance_type_list"
							]
						},
						"description": "Get list of all instance types"
					},
					"response": []
				},
				{
					"name": "Get the recommended instance type for a given snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/recommended_instance_type?snapshot_id={{snapshot_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"recommended_instance_type"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Get the recommended instance type for a given snapshot"
					},
					"response": []
				},
				{
					"name": "Get all the regions in Azure",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/region",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"region"
							]
						},
						"description": "Get all the regions in Azure\n"
					},
					"response": []
				},
				{
					"name": "Get asynchronous request details for Azure-related jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of an asynchronous request that involves Azure"
					},
					"response": []
				},
				{
					"name": "Get list of all resource groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An Azure resource group request that contains the credentials or data location ID required to fetch a list of the Azure resource groups and compute proxy configuration.\n"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/resource_group",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"resource_group"
							]
						},
						"description": "Get list of all resource groups associated with given Azure storage account credentials\n"
					},
					"response": []
				},
				{
					"name": "Get a list of security group IDs queried by Azure location ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/security_group?data_location_id={{data_location_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"security_group"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "{{data_location_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all the storage accounts for an azure resource group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An Azure storage account request that contains the credentials of the Azure storage account and compute proxy configuration.\n"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/storage_account",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"storage_account"
							]
						},
						"description": "Get all the storage accounts for an azure resource group\n"
					},
					"response": []
				},
				{
					"name": "Get a list of subnets queried by Azure location ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/subnet?data_location_id={{data_location_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"subnet"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "{{data_location_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all the subscriptions for an azure tenant",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An Azure subscription request that contains the credentials required to find the Azure subscription group and compute proxy configuration.\n"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cloud_on/azure/subscription",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cloud_on",
								"azure",
								"subscription"
							]
						},
						"description": "Get all the subscriptions for an azure tenant accessible to a particular client app\n"
					},
					"response": []
				}
			],
			"description": "Folder for cloud_on"
		},
		{
			"name": "cluster",
			"item": [
				{
					"name": "Get auto removed nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/auto_removed_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"auto_removed_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve the list of nodes that were automatically removed from the Rubrik cluster for which the node removal has not been acknowledged."
					},
					"response": []
				},
				{
					"name": "Acknowledge node removal",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/auto_removed_node/:node_id/acknowledge",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"auto_removed_node",
								":node_id",
								"acknowledge"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								},
								{
									"key": "node_id",
									"value": "{{node_id}}"
								}
							]
						},
						"description": "Acknowledge automatic removal of a node from the Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Cluster bootstrap request status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/bootstrap?request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"bootstrap"
							],
							"query": [
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves status of in progress bootstrap requests"
					},
					"response": []
				},
				{
					"name": "Bootstrap the cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the Rubrik cluster"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/bootstrap",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"bootstrap"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Issues a bootstrap request to a specified Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get cluster brik count",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/brik_count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"brik_count"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve the number of briks in this Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Decommission nodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Node decommission job properties."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/decommission_nodes",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"decommission_nodes"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Start an asynchronous task to decommission the specified node or nodes."
					},
					"response": []
				},
				{
					"name": "Discover bootstrappable nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/discover",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"discover"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Searches for nodes bootstrappable to the specified Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get disks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/disk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"disk"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves information about the disks in the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Set up an unformatted disk",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/disk/:disk_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"disk",
								":disk_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								},
								{
									"key": "disk_id",
									"value": "{{disk_id}}"
								}
							]
						},
						"description": "Formats, initializes and mounts an unformatted disk"
					},
					"response": []
				},
				{
					"name": "Instruct the cluster that a disk has been removed",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/disk/:disk_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"disk",
								":disk_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								},
								{
									"key": "disk_id",
									"value": "{{disk_id}}"
								}
							]
						},
						"description": "Marks the disk removed and updates cluster metadata"
					},
					"response": []
				},
				{
					"name": "Get installed disk capacity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/disk_capacity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"disk_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves total installed disk space on the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get DNS servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/dns_nameserver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"dns_nameserver"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve a list the DNS servers assigned to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Assign DNS servers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of the IPv4 addresses of NTP servers"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/dns_nameserver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"dns_nameserver"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Assign DNS servers to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get DNS search domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/dns_search_domain",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"dns_search_domain"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve a list the DNS search domains assigned to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Assign DNS search domains",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of the DNS search domains"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/dns_search_domain",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"dns_search_domain"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Assign DNS search domains to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get installed flash capacity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/flash_capacity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"flash_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves total installed flash on the Rubrik cluste "
					},
					"response": []
				},
				{
					"name": "Get a list of a cluster's floating IP to node mapping",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/floating_ip?floating_ip={{floating_ip}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"floating_ip"
							],
							"query": [
								{
									"key": "floating_ip",
									"value": "{{floating_ip}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Get a list of a cluster's floating IP to node mapping"
					},
					"response": []
				},
				{
					"name": "global",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/global_manager",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"global_manager"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "global"
					},
					"response": []
				},
				{
					"name": "global",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "connection"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/global_manager",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"global_manager"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "global"
					},
					"response": []
				},
				{
					"name": "Get if it has TPM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/has_tpm",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"has_tpm"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether this Rubrik cluster has TPM"
					},
					"response": []
				},
				{
					"name": "Get IO throughput information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/io_stats?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"io_stats"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves IO statistics of the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get IPMI details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ipmi",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ipmi"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "get IPMI details of availability and enabled access in the cluster"
					},
					"response": []
				},
				{
					"name": "Modify IPMI settings",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "password to set"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ipmi",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ipmi"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "modify IPMI settings"
					},
					"response": []
				},
				{
					"name": "Get if it is encrypted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/is_encrypted",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"is_encrypted"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is encrypted (the encryption could be either be software-based encryption or hardware-based encryption)."
					},
					"response": []
				},
				{
					"name": "Get if it is hardware encrypted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/is_hardware_encrypted",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"is_hardware_encrypted"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is hardware encrypted"
					},
					"response": []
				},
				{
					"name": "Get is on-cloud",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/is_on_cloud",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"is_on_cloud"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is running on cloud"
					},
					"response": []
				},
				{
					"name": "Get registration status for a Rubrik cluster.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/is_registered",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"is_registered"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether the specified Rubrik cluster is registered in the Rubrik customer database."
					},
					"response": []
				},
				{
					"name": "Get is single node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/is_single_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"is_single_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Check whether this Rubrik cluster is configured to be single node"
					},
					"response": []
				},
				{
					"name": "Add iscsi targets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Iscsi target portal information"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/iscsi",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"iscsi"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Add iscsi targets from the specificied portal to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get installed memory capacity",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/memory_capacity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"memory_capacity"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve total installed memory on the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get cluster name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/name",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"name"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves the name of the Rubrik cluster identified by the id"
					},
					"response": []
				},
				{
					"name": "Get network interfaces for a Rubrik Cluster cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/network_interface?interface={{interface}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"network_interface"
							],
							"query": [
								{
									"key": "interface",
									"value": "{{interface}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves network interfaces(including VLANs) on bond0/bond1"
					},
					"response": []
				},
				{
					"name": "Get nodes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve the list of nodes in this Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Add nodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The request object for addNodes."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Add nodes to the specified Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get NTP Servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ntp_server",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ntp_server"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve a list if the NTP servers assigned to the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Assign NTP servers to Rubrik cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of fully qualifed domain names or IPv4 addresses of NTP servers"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ntp_server",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ntp_server"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Assign NTP servers to Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get Add node request status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/pending_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"pending_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves status of a pending add node request on the specified cluster"
					},
					"response": []
				},
				{
					"name": "Get platform identifier",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/platforminfo",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"platforminfo"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve the computing platform that is running the Rubrik CDM software."
					},
					"response": []
				},
				{
					"name": "Get node recommission status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/recommission_node?request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"recommission_node"
							],
							"query": [
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve the status of a specified asynchronous node recommission request."
					},
					"response": []
				},
				{
					"name": "Recommission a node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Id of the node to recommission"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/recommission_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"recommission_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Schedule a node for recommission"
					},
					"response": []
				},
				{
					"name": "Submit community user credentials to register a cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Community User Credentials"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/register",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"register"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Submit community user credentials to register a cluster."
					},
					"response": []
				},
				{
					"name": "Submit the registration details for a Rubrik cluster.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Registration details assigned to a Rubrik cluster"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/registration_details",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"registration_details"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Submit the registration details for the specified Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Get node removal status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/remove_node?request_id={{request_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"remove_node"
							],
							"query": [
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves the status of the remove node request"
					},
					"response": []
				},
				{
					"name": "Removes a node from",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Id of the node to remove"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/remove_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"remove_node"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Schedules a node for removal"
					},
					"response": []
				},
				{
					"name": "Resets nodes in this Rubrik cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/reset",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"reset"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Resets nodes in this Rubrik cluster to manufactured. state"
					},
					"response": []
				},
				{
					"name": "Get details of key rotations.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/key_rotation?rotation_id={{rotation_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"key_rotation"
							],
							"query": [
								{
									"key": "rotation_id",
									"value": "{{rotation_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Return detailed information for a key rotation identified by **rotation_id**, or for all key rotations if **rotation_id** is not specified."
					},
					"response": []
				},
				{
					"name": "Rotate keys in encrypted cluster.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Key rotation options"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/key_rotation",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"key_rotation"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Trigger a key rotation for all nodes in the cluster. A reboot may be required depending on the rotation specification."
					},
					"response": []
				},
				{
					"name": "Generate a new private key and return a certificate signing request.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information for client certificate request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/kmip/client_csr",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"kmip",
								"client_csr"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Generates a new private key and return base64 encoded PKCS#10 certificate signing request. If there is a pending CSR, this will invalidate it and create a new one."
					},
					"response": []
				},
				{
					"name": "Get KMIP configuration.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/kmip/configuration",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"kmip",
								"configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Return the currently configured KMIP information. If KMIP is not configured, the return object would contain empty fields."
					},
					"response": []
				},
				{
					"name": "Configure KMIP server to use.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "KMIP configuration"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/kmip/configuration",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"kmip",
								"configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Configure each node with the specified KMIP configuration."
					},
					"response": []
				},
				{
					"name": "Get password strength.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Password value to be evaluated."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/password/strength",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"password",
								"strength"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves a strength object that indicates whether a specified password value was determined to be strong and includes the reason for the determination."
					},
					"response": []
				},
				{
					"name": "Get details about an async request.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/request/:request_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"request",
								":request_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								},
								{
									"key": "request_id",
									"value": "{{request_id}}"
								}
							]
						},
						"description": "Get details about a security-related async request."
					},
					"response": []
				},
				{
					"name": "Get whether SSH is enabled for nodes in the cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/ssh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"ssh"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Returns whether SSH is enabled on TCP port 22 for all nodes in the cluster."
					},
					"response": []
				},
				{
					"name": "Set whether SSH is enabled/disabled for nodes in the cluser",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new configuration parameters for SSH, including whether it is enabled."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/ssh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"ssh"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Disables or enables SSH on TCP port 22 for all nodes in the cluster."
					},
					"response": []
				},
				{
					"name": "Generate a new private key and return a certificate signing request.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information for client certificate request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/web_csr",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"web_csr"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Generates a new private key and return base64 encoded PKCS#10 certificate signing request. If there is a pending CSR, this will invalidate it and create a new one."
					},
					"response": []
				},
				{
					"name": "Set a signed certificate for Web server.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "X.509 certificate"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/security/web_signed_cert",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"security",
								"web_signed_cert"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Setting the given certificate for each node's web server to use."
					},
					"response": []
				},
				{
					"name": "Get SNMP configuration of the cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/snmp_configuration",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"snmp_configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Get SNMP configuration of the queried cluster"
					},
					"response": []
				},
				{
					"name": "Update SNMP configuration",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "SNMP configuration updates for the specified Rubrik cluster."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/snmp_configuration",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"snmp_configuration"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Update the SNMP configuration for a specified Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Get system status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/system_status",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"system_status"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves information about the status of the Rubrik cluster"
					},
					"response": []
				},
				{
					"name": "Get UI preference of cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ui_preference",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ui_preference"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Get UI preference of queried cluster"
					},
					"response": []
				},
				{
					"name": "Update UI preference of cluster",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "updated UI preference"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/ui_preference",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"ui_preference"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Update UI preference of cluster"
					},
					"response": []
				},
				{
					"name": "Get configured VLAN interfaces for a Rubrik Cluster cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/vlan?vlan={{vlan}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"vlan"
							],
							"query": [
								{
									"key": "vlan",
									"value": "{{vlan}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieves the VLANs configured on a Rubrik Cluster and their ip configurations"
					},
					"response": []
				},
				{
					"name": "Adds a VLAN interface on the cluster or re-ips a VLAN",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "VLAN Configuration"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/vlan",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"vlan"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Edits tagged interfaces on the cluster by VLAN."
					},
					"response": []
				},
				{
					"name": "Drops a VLAN from the cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/cluster/:id/vlan?vlan_id={{vlan_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"cluster",
								":id",
								"vlan"
							],
							"query": [
								{
									"key": "vlan_id",
									"value": "{{vlan_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Drops interfaces assigend to the specified VLAN on the cluster."
					},
					"response": []
				}
			],
			"description": "Folder for cluster"
		},
		{
			"name": "config",
			"item": [
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Atlas configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/atlas",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"atlas"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Atlas configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Atlas configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/atlas",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"atlas"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Atlas configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Blobstore configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/blobstore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"blobstore"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Blobstore configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/blobstore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"blobstore"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Blobstore configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Callisto configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/callisto",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"callisto"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Callisto configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Callisto configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/callisto",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"callisto"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Callisto configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Cerebro configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"cerebro"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Cerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"cerebro"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Cerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Cloud configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/cloud",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"cloud"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Cloud configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Cloud configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/cloud",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"cloud"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Cloud configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Crystal configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"crystal"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Crystal configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Crystal configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"crystal"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Crystal configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Envision configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/envision",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"envision"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Envision configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Envision configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/envision",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"envision"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Envision configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Fileset configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/fileset",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"fileset"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Fileset configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Fileset configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/fileset",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"fileset"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Fileset configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Forge configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/forge",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"forge"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Forge configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Forge configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/forge",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"forge"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Forge configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Galactus configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/galactus",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"galactus"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Galactus configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Galactus configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/galactus",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"galactus"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Galactus configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Hawkeye configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/hawkeye",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"hawkeye"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Hawkeye configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Hawkeye configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/hawkeye",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"hawkeye"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Hawkeye configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Hyperv configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/hyperv",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"hyperv"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Hyperv configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Hyperv configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/hyperv",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"hyperv"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Hyperv configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Infinity configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/infinity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"infinity"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Infinity configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Infinity configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/infinity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"infinity"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Infinity configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Jarvis configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/jarvis",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"jarvis"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Jarvis configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/jarvis",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"jarvis"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Jarvis configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Jobiopriority configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/jobIoPriority",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"jobIoPriority"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Jobiopriority configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Jobiopriority configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/jobIoPriority",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"jobIoPriority"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Jobiopriority configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Lambda configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"lambda"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Lambda configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Lambda configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"lambda"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Lambda configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Atlas configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_atlas",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_atlas"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Atlas configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Atlas configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_atlas",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_atlas"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Atlas configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Blobstore configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_blobstore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_blobstore"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Blobstore configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_blobstore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_blobstore"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Blobstore configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Callisto configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_callisto",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_callisto"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Callisto configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Callisto configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_callisto",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_callisto"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Callisto configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Cerebro configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_cerebro"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Cerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_cerebro"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Cerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Envision configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_envision",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_envision"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Envision configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Envision configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_envision",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_envision"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Envision configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Forge configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_forge",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_forge"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Forge configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Forge configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_forge",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_forge"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Forge configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Galactus configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_galactus",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_galactus"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Galactus configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Galactus configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_galactus",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_galactus"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Galactus configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Infinity configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_infinity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_infinity"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Infinity configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Infinity configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_infinity",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_infinity"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Infinity configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Lambda configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_lambda"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Lambda configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Lambda configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_lambda"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Lambda configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Mssql configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_mssql",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_mssql"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Mssql configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Mssql configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_mssql",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_mssql"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Mssql configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Quicksilver configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_quicksilver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_quicksilver"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Quicksilver configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Quicksilver configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_quicksilver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_quicksilver"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Quicksilver configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Shield configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_shield",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_shield"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Shield configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Shield configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_shield",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_shield"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Shield configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the local Thor configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_thor",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_thor"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the local Thor configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/local_thor",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"local_thor"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the local Thor configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Managedvolume configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/managedVolume",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"managedVolume"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Managedvolume configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/managedVolume",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"managedVolume"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Managedvolume configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Mssql configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/mssql",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"mssql"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Mssql configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Mssql configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/mssql",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"mssql"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Mssql configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Nutanix configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/nutanix",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"nutanix"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Nutanix configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Nutanix configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/nutanix",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"nutanix"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Nutanix configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Oracle configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/oracle",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"oracle"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Oracle configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Oracle configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/oracle",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"oracle"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Oracle configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Polaris configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/polaris",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"polaris"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Polaris configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Polaris configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/polaris",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"polaris"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Polaris configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Quicksilver configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/quicksilver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"quicksilver"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Quicksilver configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Quicksilver configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/quicksilver",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"quicksilver"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Quicksilver configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Replication configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/replication",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"replication"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Replication configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Replication configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/replication",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"replication"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Replication configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Shield configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/shield",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"shield"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Shield configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Shield configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/shield",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"shield"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Shield configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Snapshot configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"snapshot"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Snapshot configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"snapshot"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Snapshot configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SPARK TOKEN -  Get the global SparkSettableCrystal configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/sparksettable_crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"sparksettable_crystal"
							]
						},
						"description": "REQUIRES SPARK TOKEN - Get the global SparkSettableCrystal configuration. A spark token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SPARK TOKEN - Update the global SparkSettableCrystal configuration. A spark token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/sparksettable_crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"sparksettable_crystal"
							]
						},
						"description": "REQUIRES SPARK TOKEN - Update the global SparkSettableCrystal configuration. A spark token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SPARK TOKEN -  Get the global SparkSettableLambda configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/sparksettable_lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"sparksettable_lambda"
							]
						},
						"description": "REQUIRES SPARK TOKEN - Get the global SparkSettableLambda configuration. A spark token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SPARK TOKEN - Update the global SparkSettableLambda configuration. A spark token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/sparksettable_lambda",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"sparksettable_lambda"
							]
						},
						"description": "REQUIRES SPARK TOKEN - Update the global SparkSettableLambda configuration. A spark token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Storagearray configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/storageArray",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"storageArray"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Storagearray configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Storagearray configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/storageArray",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"storageArray"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Storagearray configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Thor configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/thor",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"thor"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Thor configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Thor configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/thor",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"thor"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Thor configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES ADMIN TOKEN -  Get the global UserSettableCerebro configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/usersettable_cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"usersettable_cerebro"
							]
						},
						"description": "REQUIRES ADMIN TOKEN - Get the global UserSettableCerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES ADMIN TOKEN - Update the global UserSettableCerebro configuration. An admin token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/usersettable_cerebro",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"usersettable_cerebro"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global UserSettableCerebro configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES ADMIN TOKEN -  Get the global UserSettableCrystal configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/usersettable_crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"usersettable_crystal"
							]
						},
						"description": "REQUIRES ADMIN TOKEN - Get the global UserSettableCrystal configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES ADMIN TOKEN - Update the global UserSettableCrystal configuration. An admin token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/usersettable_crystal",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"usersettable_crystal"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global UserSettableCrystal configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Vcd configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/vcd",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"vcd"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Vcd configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Vcd configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/vcd",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"vcd"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Vcd configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Get the global Volumegroup configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/volumeGroup",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"volumeGroup"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the global Volumegroup configuration. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Update the global Volumegroup configuration. A support token is required for this operation.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New configuration values"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/config/volumeGroup",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"config",
								"volumeGroup"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Update the global Volumegroup configuration. A support token is required for this operation."
					},
					"response": []
				}
			],
			"description": "Folder for config"
		},
		{
			"name": "data_location",
			"item": [
				{
					"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the NFS spec",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Data Location definition"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/nfs",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"nfs"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Remove bucket request configurations"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/nfs/remove_bucket",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"nfs",
								"remove_bucket"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all nfs buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Tries to clean up the data in the bucket in the ObjectSTore spec.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Data Location definition"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/object_store",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"object_store"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to clean the buckets. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Remove all buckets matching given prefix.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Remove bucket request configurations"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/object_store/remove_bucket",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"object_store",
								"remove_bucket"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - To be used by internal tests to remove all object store buckets matching given prefix. Returns a list of buckets successfully removed. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - DataLocationId from which to start the recovery process",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "ID of the data location to recover from"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/recover_archived_metadata",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"recover_archived_metadata"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - DataLocationId from which to start the recovery process. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get the details of all one-off delete replication source jobs.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/replication_source/delete_job",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"replication_source",
								"delete_job"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get the details of all one-off delete replication source jobs. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  Disconnect from a specific data location. Deletes the lock files, encryption files, and all the data.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "dataLocationId"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/data_location/teardown",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"data_location",
								"teardown"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Disconnect from a specific data location. Deletes the lock files, encryption files and all the data. A support token is required for this operation."
					},
					"response": []
				}
			],
			"description": "Folder for data_location"
		},
		{
			"name": "event",
			"item": [
				{
					"name": "Get information for specified events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/event?limit={{limit}}&after_id={{after_id}}&event_series_id={{event_series_id}}&status={{status}}&event_type={{event_type}}&object_ids={{object_ids}}&object_name={{object_name}}&before_date={{before_date}}&after_date={{after_date}}&object_type={{object_type}}&show_only_latest={{show_only_latest}}&filter_only_on_latest={{filter_only_on_latest}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"event"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "after_id",
									"value": "{{after_id}}"
								},
								{
									"key": "event_series_id",
									"value": "{{event_series_id}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "event_type",
									"value": "{{event_type}}"
								},
								{
									"key": "object_ids",
									"value": "{{object_ids}}"
								},
								{
									"key": "object_name",
									"value": "{{object_name}}"
								},
								{
									"key": "before_date",
									"value": "{{before_date}}"
								},
								{
									"key": "after_date",
									"value": "{{after_date}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "show_only_latest",
									"value": "{{show_only_latest}}"
								},
								{
									"key": "filter_only_on_latest",
									"value": "{{filter_only_on_latest}}"
								}
							]
						},
						"description": "Retrieve information for the latest of related events that match the value specified in any of the following categories: type, status, or ID, and limit events by date."
					},
					"response": []
				}
			],
			"description": "Folder for event"
		},
		{
			"name": "event_series",
			"item": [
				{
					"name": "Get information for several events",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/event_series/status?ids={{ids}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"event_series",
								"status"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{ids}}"
								}
							]
						},
						"description": "Use the event series IDs of several events to retrieve information about each event, including ID, progress, cancelable, cancel pending, and the number of times the event has been attempted. Place each event_series_id on a separate line."
					},
					"response": []
				},
				{
					"name": "Get events associated with an event series",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/event_series/:id?object_ids={{object_ids}}&limit={{limit}}&after_id={{after_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"event_series",
								":id"
							],
							"query": [
								{
									"key": "object_ids",
									"value": "{{object_ids}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "after_id",
									"value": "{{after_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get events associated with an event series (a grouping of related events)"
					},
					"response": []
				},
				{
					"name": "Cancel an event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/event_series/:id/cancel",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"event_series",
								":id",
								"cancel"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Request cancelation of an event. To succeed, the 'isCancelable' parameter of the event must be 'true'."
					},
					"response": []
				},
				{
					"name": "Get information for a specific event",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/event_series/:id/status",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"event_series",
								":id",
								"status"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Use the event series ID for an event to retrieve information about the event, including ID, progress, cancelable, cancel pending, and the number of times the event has been attempted."
					},
					"response": []
				}
			],
			"description": "Folder for event_series"
		},
		{
			"name": "fileset",
			"item": [
				{
					"name": "Create filesets for a host.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "For each fileset, specify a template id along with either host id or share id. If a share id is provided, the host id will be inferred from the host share"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset",
								"bulk"
							]
						},
						"description": "Create filesets for a network host. Each fileset is a fileset template applied to a host"
					},
					"response": []
				},
				{
					"name": "Delete filesets.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset/bulk?ids={{ids}}&preserve_snapshots={{preserve_snapshots}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset",
								"bulk"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{ids}}"
								},
								{
									"key": "preserve_snapshots",
									"value": "{{preserve_snapshots}}"
								}
							]
						},
						"description": "Delete filesets by specifying the fileset IDs."
					},
					"response": []
				},
				{
					"name": "Download files from a fileset backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration information for a job to download files and folders from a fileset backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to download multiple files and folders from a specified fileset backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'fileset/request/{id}'."
					},
					"response": []
				},
				{
					"name": "Create an export job to export multiple files or directories.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The configuration of a job that exports one or more files or folders from a fileset backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset/snapshot/:id/export_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset",
								"snapshot",
								":id",
								"export_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Starts a job that exports one or more files or folders from a fileset backup to the destination host. Returns the job status as of the job creation time. This job status includes the job ID."
					},
					"response": []
				},
				{
					"name": "Create restore job to restore multiple files/directories",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for job to restore one or more files or folders from a fileset backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate a job to copy one or more file or folder from a fileset backup to the source host. Returns the job instance ID."
					},
					"response": []
				}
			],
			"description": "Folder for fileset"
		},
		{
			"name": "fileset_template",
			"item": [
				{
					"name": "Create fileset templates.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provide an array containing a separate object for each fileset template definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset_template/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset_template",
								"bulk"
							]
						},
						"description": "Create fileset templates. The template is applied to the host.  Each template is a set of paths on the host.\n\nA template uses full paths and wildcards to define the objects to include, exclude, and exempt from exclusion.\n\nThe **_exceptions_** value specifies paths that should not be excluded from the fileset by the **_exclude_** value.\n\nSpecify an array of full path descriptions for each property **_include_**, **_exclude_**, and **_exceptions_**.\n\nAcceptable wildcard characters are\n+ **_\\*_** Single asterisk matches zero or more characters up to a path deliminator\n+ **_\\*\\*_** Double asterisk matches zero or more characters\n\nThe following rules apply to path descriptions\n+ Accepts UTF-8 characters\n+ Case sensitive\n+ Forward slash character **_/_** is the path deliminator\n+ Symbolic links must point to a subset of a non symbolic link path\n+ Paths that do not start with **_/_** are modified to start with **_\\*\\*/_**\n+ Paths that do not end with **_\\*_** are modified to end with **_/\\*\\*_**"
					},
					"response": []
				},
				{
					"name": "Modify fileset templates.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provide an array containing a separate object for each fileset template being modified."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset_template/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset_template",
								"bulk"
							]
						},
						"description": "Modify the values of specified fileset templates."
					},
					"response": []
				},
				{
					"name": "Delete fileset templates.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/fileset_template/bulk?ids={{ids}}&preserve_snapshots={{preserve_snapshots}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"fileset_template",
								"bulk"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{ids}}"
								},
								{
									"key": "preserve_snapshots",
									"value": "{{preserve_snapshots}}"
								}
							]
						},
						"description": "Deletes specfied fileset templates. Detaches and retains all associated filesets as independent filesets with the existing values."
					},
					"response": []
				}
			],
			"description": "Folder for fileset_template"
		},
		{
			"name": "folder",
			"item": [
				{
					"name": "Hierarchy of folders and managed objects with this folder as root.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/folder/hierarchy_rooted_at/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"folder",
								"hierarchy_rooted_at",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Hierarchy of folders and managed objects with this folder as root."
					},
					"response": []
				},
				{
					"name": "Get the top level host folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/folder/host/:datacenter_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"folder",
								"host",
								":datacenter_id"
							],
							"variable": [
								{
									"key": "datacenter_id",
									"value": "{{datacenter_id}}"
								}
							]
						},
						"description": "The top level host folder"
					},
					"response": []
				},
				{
					"name": "Get the top level vm folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/folder/vm/:datacenter_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"folder",
								"vm",
								":datacenter_id"
							],
							"variable": [
								{
									"key": "datacenter_id",
									"value": "{{datacenter_id}}"
								}
							]
						},
						"description": "The top level vm folder"
					},
					"response": []
				},
				{
					"name": "Details of a folder",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/folder/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"folder",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Details of a folder"
					},
					"response": []
				}
			],
			"description": "Folder for folder"
		},
		{
			"name": "graphql",
			"item": [],
			"description": "Folder for graphql"
		},
		{
			"name": "hierarchy",
			"item": [
				{
					"name": "Search for hierarchy objects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Search query to perform"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hierarchy/search",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hierarchy",
								"search"
							]
						},
						"description": "Search by name, location and slaDomain over hierarchy objects for specified object types."
					},
					"response": []
				},
				{
					"name": "Get summary of a hierarchy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details for the specified storage hierarchy object."
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects with SLA conflicts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hierarchy/:id/sla_conflicts",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hierarchy",
								":id",
								"sla_conflicts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects with an explicitly configured SLA, or inherit an SLA from a different parent."
					},
					"response": []
				}
			],
			"description": "Folder for hierarchy"
		},
		{
			"name": "host",
			"item": [
				{
					"name": "Register hosts.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Array containing a registration definition for each host."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"bulk"
							]
						},
						"description": "Register hosts with Rubrik clusters."
					},
					"response": []
				},
				{
					"name": "Deregister hosts.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provide the ID of each host to deregister."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/bulk-delete",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"bulk-delete"
							]
						},
						"description": "Deregister specified network hosts from Rubrik clusters."
					},
					"response": []
				},
				{
					"name": "Count all hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/count?operating_system_type={{operating_system_type}}&share_type={{share_type}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"count"
							],
							"query": [
								{
									"key": "operating_system_type",
									"value": "{{operating_system_type}}"
								},
								{
									"key": "share_type",
									"value": "{{share_type}}"
								}
							]
						},
						"description": "Retrieve the total number of hosts, and the total number of protected hosts. A protected host has at least one protected fileset."
					},
					"response": []
				},
				{
					"name": "Get summary information for hosts with Envoy organization information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/envoy?operating_system_type={{operating_system_type}}&primary_cluster_id={{primary_cluster_id}}&hostname={{hostname}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"envoy"
							],
							"query": [
								{
									"key": "operating_system_type",
									"value": "{{operating_system_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "hostname",
									"value": "{{hostname}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information for all hosts that are registered with a Rubrik cluster. Also returns the organization information of a host if Envoy is enabled on that host."
					},
					"response": []
				},
				{
					"name": "Get host async request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a host related async request."
					},
					"response": []
				},
				{
					"name": "Get summary information for network shares.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share?host_id={{host_id}}&share_type={{share_type}}&primary_cluster_id={{primary_cluster_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share"
							],
							"query": [
								{
									"key": "host_id",
									"value": "{{host_id}}"
								},
								{
									"key": "share_type",
									"value": "{{share_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								}
							]
						},
						"description": "Retrieve summary information for network shares. Apply filters to refine the returned information."
					},
					"response": []
				},
				{
					"name": "Add a network share to a host.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network share creation definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share"
							]
						},
						"description": "Add a network share object to a host."
					},
					"response": []
				},
				{
					"name": "Get detailed information for a network share.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information for a network share."
					},
					"response": []
				},
				{
					"name": "Modify a network share.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network share modification definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Modify a network share object."
					},
					"response": []
				},
				{
					"name": "Delete a network share.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete network by specifying the network share ID."
					},
					"response": []
				},
				{
					"name": "Search for a file within a network share.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search for a file within a network share. Search via full path prefix or filename prefix."
					},
					"response": []
				},
				{
					"name": "Get summary information for host credential",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share_credential?host_id={{host_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share_credential"
							],
							"query": [
								{
									"key": "host_id",
									"value": "{{host_id}}"
								}
							]
						},
						"description": "Retrieve summary information for host credential. Apply filters to refine the returned information."
					},
					"response": []
				},
				{
					"name": "Add a share credential to a host.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Host share credential creation definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/share_credential",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								"share_credential"
							]
						},
						"description": "Add a share credential object to a host."
					},
					"response": []
				},
				{
					"name": "Delete a registered host asynchronously",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/:id/async",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								":id",
								"async"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete host asynchronously by specifying the host ID."
					},
					"response": []
				},
				{
					"name": "Get host availability statuses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/:id/diagnose",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								":id",
								"diagnose"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the availability status for each host registered with a specified Rubrik CDM instance."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get the value for a physical host flag.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/:id/flag?flag={{flag}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								":id",
								"flag"
							],
							"query": [
								{
									"key": "flag",
									"value": "{{flag}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Retrieve physical host agent flag value. Physical host agent flags are defined during compile-time. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Modify physical host agent flags.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Flag name and new value."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/:id/flag",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								":id",
								"flag"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Modify physical host agent flags to new values. Physical host agent flags are defined during compile-time. They can be passed in during agent startup or can be modified dynamically using this endpoint. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host/:id/log",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host",
								":id",
								"log"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Fetch host logs from agent into cluster /sd/scratch directory. A support token is required for this operation."
					},
					"response": []
				}
			],
			"description": "Folder for host"
		},
		{
			"name": "host_fileset",
			"item": [
				{
					"name": "Get summary information for hosts.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host_fileset?hostname={{hostname}}&operating_system_type={{operating_system_type}}&operating_system={{operating_system}}&primary_cluster_id={{primary_cluster_id}}&effective_sla_domain_id={{effective_sla_domain_id}}&template_id={{template_id}}&search_type={{search_type}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host_fileset"
							],
							"query": [
								{
									"key": "hostname",
									"value": "{{hostname}}"
								},
								{
									"key": "operating_system_type",
									"value": "{{operating_system_type}}"
								},
								{
									"key": "operating_system",
									"value": "{{operating_system}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "template_id",
									"value": "{{template_id}}"
								},
								{
									"key": "search_type",
									"value": "{{search_type}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information for all hosts that are registered with a Rubrik cluster. For each host, we also retrieve the summary information for the filesets applied to the host."
					},
					"response": []
				},
				{
					"name": "Get summary information for network shares.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host_fileset/share?hostname={{hostname}}&export_point={{export_point}}&share_type={{share_type}}&primary_cluster_id={{primary_cluster_id}}&effective_sla_domain_id={{effective_sla_domain_id}}&template_id={{template_id}}&search_type={{search_type}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host_fileset",
								"share"
							],
							"query": [
								{
									"key": "hostname",
									"value": "{{hostname}}"
								},
								{
									"key": "export_point",
									"value": "{{export_point}}"
								},
								{
									"key": "share_type",
									"value": "{{share_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "template_id",
									"value": "{{template_id}}"
								},
								{
									"key": "search_type",
									"value": "{{search_type}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information for the network shares that are registered with a Rubrik cluster, and summary information for the filesets that are assigned to each network share."
					},
					"response": []
				},
				{
					"name": "Get detailed information for a network share.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host_fileset/share/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host_fileset",
								"share",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information for a network share, including detailed information for the filesets that are assigned to the network share."
					},
					"response": []
				},
				{
					"name": "Get detail information for a host.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/host_fileset/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"host_fileset",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detail information for a registered host. For each host, we also retrieve the detail information for the filesets applied to the host."
					},
					"response": []
				}
			],
			"description": "Folder for host_fileset"
		},
		{
			"name": "hyperv",
			"item": [
				{
					"name": "Get summary of all the Hyper-V hlusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/cluster?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"cluster"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the Hyper-V hlusters"
					},
					"response": []
				},
				{
					"name": "Get details of a Hyper-V cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details of a Hyper-V cluster"
					},
					"response": []
				},
				{
					"name": "Update Hyper-V cluster",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update cluster with specified properties"
					},
					"response": []
				},
				{
					"name": "Get summary of a hierarchy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details for the specified hierarchy object."
					},
					"response": []
				},
				{
					"name": "Get list of immediate descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/hierarchy/:id/children?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of immediate descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/hierarchy/:id/descendants?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get summary of all the Hyper-V hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/host?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"host"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the Hyper-V hosts"
					},
					"response": []
				},
				{
					"name": "Get Hyper-V host async request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/host/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"host",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Hyper-V host related async request."
					},
					"response": []
				},
				{
					"name": "Get details of a Hyper-V host",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/host/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"host",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details of a Hyper-V host"
					},
					"response": []
				},
				{
					"name": "Update Hyper-V host",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/host/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"host",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update host with specified properties"
					},
					"response": []
				},
				{
					"name": "Refresh Hyper-V host metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/host/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"host",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a job to refresh the metadata for the specified Hyper-V host"
					},
					"response": []
				},
				{
					"name": "Get summary of all the Hyper-V SCVMMs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the Hyper-V SCVMMs"
					},
					"response": []
				},
				{
					"name": "Register a Hyper-V SCVMM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Registration definition for a Hyper-V SCVMM."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm"
							]
						},
						"description": "Register a Hyper-V SCVMM."
					},
					"response": []
				},
				{
					"name": "Get Hyper-V SCVMM async request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Hyper-V SCVMM related async request."
					},
					"response": []
				},
				{
					"name": "Get details of a Hyper-V SCVMM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details of a Hyper-V SCVMM"
					},
					"response": []
				},
				{
					"name": "Update a Hyper-V SCVMM",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update SCVMM with specified properties"
					},
					"response": []
				},
				{
					"name": "Delete a Hyper-V SCVMM",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a Hyper-V SCVMM"
					},
					"response": []
				},
				{
					"name": "Refresh Hyper-V SCVMM metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/scvmm/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"scvmm",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a job to refresh the metadata for the specified Hyper-V SCVMM"
					},
					"response": []
				},
				{
					"name": "Get list of VMs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&is_relic={{is_relic}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the VMs"
					},
					"response": []
				},
				{
					"name": "Get VM async request details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Hyper-V vm related async request."
					},
					"response": []
				},
				{
					"name": "Get summary information for all live mounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/mount?vm_id={{vm_id}}&vm_name={{vm_name}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								"mount"
							],
							"query": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}"
								},
								{
									"key": "vm_name",
									"value": "{{vm_name}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Retrieve the following information for all live mounts: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
					},
					"response": []
				},
				{
					"name": "Get summary information for a live mount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/mount/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								"mount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following summary information for a specified live mount: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
					},
					"response": []
				},
				{
					"name": "Power a Live Mount on and off",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Power state configuration."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/mount/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								"mount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Power a specified Live Mount virtual machine on or off. Pass **_true_** to power the virtual machine on and pass **_false_** to power the virtual machine off."
					},
					"response": []
				},
				{
					"name": "Requst to delete a live mount",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/mount/:id?force={{force}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								"mount",
								":id"
							],
							"query": [
								{
									"key": "force",
									"value": "{{force}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a request to delete a live mount"
					},
					"response": []
				},
				{
					"name": "Get VM snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a snapshot."
					},
					"response": []
				},
				{
					"name": "Delete VM snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a snapshot by expiring it. Snapshot is expired only if it is a manual snapshot or a snapshot of an unprotected vm."
					},
					"response": []
				},
				{
					"name": "Lists all files in VM snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists all files and directories in a given path"
					},
					"response": []
				},
				{
					"name": "Creates a download from archival request.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Download a snapshot from archival."
					},
					"response": []
				},
				{
					"name": "Download file from VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a download request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/download_file",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"download_file"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a download file request"
					},
					"response": []
				},
				{
					"name": "Download files from a Hyper-V VM backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration information for a job to download files and folders from a Hyper-V VM backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to download multiple files and folders from a specified Hyper-V VM backup. The response returns an asynchrounous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'hyperv/vm/request/{id}'."
					},
					"response": []
				},
				{
					"name": "Export VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the export request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export snapshot of a vm."
					},
					"response": []
				},
				{
					"name": "Creates an instant recover request that restores a target VM from the given Rubrik-hosted-snapshot.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the instant recover request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/instant_recover",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"instant_recover"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "The VM will be started with networking enabled. If the VM does not exist anymore, a new VM will be created."
					},
					"response": []
				},
				{
					"name": "Create a live mount request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the mount request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/mount",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"mount"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a live mount request with given configuration"
					},
					"response": []
				},
				{
					"name": "Restore files from snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a job to restore files from a snapshot"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Restore files from a snapshot to the original source location"
					},
					"response": []
				},
				{
					"name": "Get VM details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Detailed view of a VM"
					},
					"response": []
				},
				{
					"name": "Update VM",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update VM with specified properties"
					},
					"response": []
				},
				{
					"name": "Get details about missed snapshots for a VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the time of the day when the snapshots were missed specific to a vm."
					},
					"response": []
				},
				{
					"name": "Register the agent installed in VM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/register_agent",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"register_agent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Register the agent that installed in VM"
					},
					"response": []
				},
				{
					"name": "Search for file in VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search for a file within the Virtual Machine. Search via full path prefix or filename prefix."
					},
					"response": []
				},
				{
					"name": "Get list of snapshots of VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following information for all snapshots for a VM: ID, snapshot date, expiration date, type of source object, Name of VM, Name of fileset, type of snapshot, state of the cloud, level of consistency, name of snapshot VM, Index of state, total number of file, IDs of all replication location, IDs of all archival location."
					},
					"response": []
				},
				{
					"name": "Create on-demand VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the on-demand backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create an on-demand snapshot for the given VM ID"
					},
					"response": []
				},
				{
					"name": "Delete all snapshots of VM",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/hyperv/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"hyperv",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots of a virtual machine"
					},
					"response": []
				}
			],
			"description": "Folder for hyperv"
		},
		{
			"name": "job",
			"item": [
				{
					"name": "REQUIRES SUPPORT TOKEN - deletes a replication source cluster on the target cluster.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the delete replication source job"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/deleteReplicationSource",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"deleteReplicationSource"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Deletes a replication source cluster on the target cluster. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Query for job instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/instance?status={{status}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"instance"
							],
							"query": [
								{
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - This is just for easier diagnosis to figure out what jobs there are in the system. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - list of job instances.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "job id and status(optional)"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/instances",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"instances"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Get instances by job id and status. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN -  sets the start time of the next queued GC job to be the current date and time",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/schedule_gc_job_start_time_now",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"schedule_gc_job_start_time_now"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Sets the start time of the next queued GC job to be the current date and time. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Create a backup job instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the backup job"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/backup",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"backup"
							]
						},
						"description": "TODO"
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores, throttles, replication targets)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/clean_up_references",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"clean_up_references"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Creates a job to clean up references (semaphores, throttles, replication targets). A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Create an expire snapshot job instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the expire snapshot job"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/expire",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"expire"
							]
						},
						"description": "TODO"
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Create a garbage collection job instance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the garbage collection job"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/garbageCollection",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"garbageCollection"
							]
						},
						"description": "TODO"
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Creates a job to prune job instances.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/prune_job_instances",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"prune_job_instances"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Creates a job to prune job instances. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM jobs.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/type/vmJobMaintainer",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								"type",
								"vmJobMaintainer"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Creates a job that maintains other VM jobs. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get details about a job instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Retrieve the following information about job instance- ID of job instance, job status, error details, start time of job, end time of job, job type, ID of the node and job progress. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - End point to update general properties of a job.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/job/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"job",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - This is to allow one to update general properties of a job. A support token is required for this operation."
					},
					"response": []
				}
			],
			"description": "Folder for job"
		},
		{
			"name": "lambda",
			"item": [],
			"description": "Folder for lambda"
		},
		{
			"name": "log",
			"item": [
				{
					"name": "INTERNAL ONLY: Log a message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Details of message to log"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/log",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"log"
							]
						},
						"description": "Used by UI to generate logs"
					},
					"response": []
				}
			],
			"description": "Folder for log"
		},
		{
			"name": "managed_object",
			"item": [
				{
					"name": "Gets the summaries of a set of managed objects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of managed IDs whose summaries to get"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_object/bulk/summary?sort_attr={{sort_attr}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_object",
								"bulk",
								"summary"
							],
							"query": [
								{
									"key": "sort_attr",
									"value": "{{sort_attr}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Gets the summaries of a set of managed objects"
					},
					"response": []
				},
				{
					"name": "Gets the summaries of a managed object's children",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_object/:managed_id/children?limit={{limit}}&object_type={{object_type}}&operating_system_type={{operating_system_type}}&offset={{offset}}&primary_cluster_id={{primary_cluster_id}}&search_attr={{search_attr}}&search_value={{search_value}}&search_type={{search_type}}&join_operator={{join_operator}}&sort_attr={{sort_attr}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_object",
								":managed_id",
								"children"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "operating_system_type",
									"value": "{{operating_system_type}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "search_attr",
									"value": "{{search_attr}}"
								},
								{
									"key": "search_value",
									"value": "{{search_value}}"
								},
								{
									"key": "search_type",
									"value": "{{search_type}}"
								},
								{
									"key": "join_operator",
									"value": "{{join_operator}}"
								},
								{
									"key": "sort_attr",
									"value": "{{sort_attr}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "managed_id",
									"value": "{{managed_id}}"
								}
							]
						},
						"description": "Gets the summaries of a managed object's immediate children"
					},
					"response": []
				},
				{
					"name": "Gets the summaries of a managed object's descendants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_object/:managed_id/descendants?limit={{limit}}&object_type={{object_type}}&operating_system_type={{operating_system_type}}&offset={{offset}}&primary_cluster_id={{primary_cluster_id}}&search_attr={{search_attr}}&search_value={{search_value}}&search_type={{search_type}}&join_operator={{join_operator}}&sort_attr={{sort_attr}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_object",
								":managed_id",
								"descendants"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "operating_system_type",
									"value": "{{operating_system_type}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "search_attr",
									"value": "{{search_attr}}"
								},
								{
									"key": "search_value",
									"value": "{{search_value}}"
								},
								{
									"key": "search_type",
									"value": "{{search_type}}"
								},
								{
									"key": "join_operator",
									"value": "{{join_operator}}"
								},
								{
									"key": "sort_attr",
									"value": "{{sort_attr}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "managed_id",
									"value": "{{managed_id}}"
								}
							]
						},
						"description": "Gets the summaries of all the descendants of a managed object"
					},
					"response": []
				},
				{
					"name": "Gets the summary of a managed object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_object/:managed_id/summary",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_object",
								":managed_id",
								"summary"
							],
							"variable": [
								{
									"key": "managed_id",
									"value": "{{managed_id}}"
								}
							]
						},
						"description": "Gets the summary of a managed object"
					},
					"response": []
				}
			],
			"description": "Folder for managed_object"
		},
		{
			"name": "managed_volume",
			"item": [
				{
					"name": "Get summary information for managed volumes.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume?is_relic={{is_relic}}&primary_cluster_id={{primary_cluster_id}}&name={{name}}&effective_sla_domain_id={{effective_sla_domain_id}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume"
							],
							"query": [
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information for all managed volumes that are created within a Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Create a managed volume",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Managed volume configuration."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume"
							]
						},
						"description": "Create a managed volume."
					},
					"response": []
				},
				{
					"name": "Get managed volume async request status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get status of a managed volume async request."
					},
					"response": []
				},
				{
					"name": "Get summary information for all managed volume snapshot exports.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/export?source_managed_volume_id={{source_managed_volume_id}}&source_managed_volume_name={{source_managed_volume_name}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								"export"
							],
							"query": [
								{
									"key": "source_managed_volume_id",
									"value": "{{source_managed_volume_id}}"
								},
								{
									"key": "source_managed_volume_name",
									"value": "{{source_managed_volume_name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Returns a list of summary information for all exports of all managed volume snapshots, sorted and filtered."
					},
					"response": []
				},
				{
					"name": "Get information for a managed volume snapshot export",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/export/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								"export",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a managed volume snapshot export by specifying the snapshot export ID."
					},
					"response": []
				},
				{
					"name": "Delete a managed volume snapshot export",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/export/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								"export",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a managed volume snapshot export."
					},
					"response": []
				},
				{
					"name": "Get managed volume snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a snapshot."
					},
					"response": []
				},
				{
					"name": "Delete a managed volume snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a managed volume snapshot"
					},
					"response": []
				},
				{
					"name": "Lists all files in Managed volume snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists all files and directories in a given path"
					},
					"response": []
				},
				{
					"name": "Create a download managed volume snapshot from archival request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a download managed volume snapshot from archival request."
					},
					"response": []
				},
				{
					"name": "Download file from Managed volume snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a download request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id/download_file",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id",
								"download_file"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a download file request"
					},
					"response": []
				},
				{
					"name": "Download files from a Managed Volume backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration information for a job to download files and folders from a Managed Volume backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to download multiple files and folders from a specified Managed Volume backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'managed-volume/request/{id}'."
					},
					"response": []
				},
				{
					"name": "Create a request to export a snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Export parameters."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/snapshot/:id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								"snapshot",
								":id",
								"export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export a managed volume snapshot as a share."
					},
					"response": []
				},
				{
					"name": "Get details of a managed volume",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Details of a managed volume."
					},
					"response": []
				},
				{
					"name": "Update managed volume",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update managed volume with specified properties."
					},
					"response": []
				},
				{
					"name": "Delete a managed volume",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id?preserve_snapshots={{preserve_snapshots}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id"
							],
							"query": [
								{
									"key": "preserve_snapshots",
									"value": "{{preserve_snapshots}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a managed volume."
					},
					"response": []
				},
				{
					"name": "Begin managed volume snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id/begin_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id",
								"begin_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Opens the managed volume for writes. All writes to the managed volume until next end-snapshot call will be part of this snapshot."
					},
					"response": []
				},
				{
					"name": "End managed volume snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Snapshot parameters."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id/end_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id",
								"end_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Close a managed volume for writes. A snapshot will be created containing all writes since the last begin-snapshot call."
					},
					"response": []
				},
				{
					"name": "Search for files in a managed volume",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search a managed volume for files"
					},
					"response": []
				},
				{
					"name": "Get summary information for snapshots of a managed volume.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/managed_volume/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"managed_volume",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns a list of summary information for snapshots of a managed volume."
					},
					"response": []
				}
			],
			"description": "Folder for managed_volume"
		},
		{
			"name": "mssql",
			"item": [
				{
					"name": "Get summary information for Microsoft SQL availability groups.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/availability_group?primary_cluster_id={{primary_cluster_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"availability_group"
							],
							"query": [
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								}
							]
						},
						"description": "Returns a list of summary information for Microsoft SQL availability groups."
					},
					"response": []
				},
				{
					"name": "Get detailed information for a Microsoft SQL availability group.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/availability_group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"availability_group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns a detailed view of a Microsoft SQL availability group."
					},
					"response": []
				},
				{
					"name": "Update a Microsoft SQL availability group.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/availability_group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"availability_group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a Microsoft SQL availability group with the specified properties."
					},
					"response": []
				},
				{
					"name": "Update multiple Microsoft SQL databases.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update for each database."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								"bulk"
							]
						},
						"description": "Update multiple Microsoft SQL databases with the specified properties"
					},
					"response": []
				},
				{
					"name": "Get a count of Microsoft SQL databases.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/count?root_id={{root_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								"count"
							],
							"query": [
								{
									"key": "root_id",
									"value": "{{root_id}}"
								}
							]
						},
						"description": "Returns a count of Microsoft SQL databases."
					},
					"response": []
				},
				{
					"name": "Get the current default properties for Microsoft SQL databases",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/defaults",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								"defaults"
							]
						},
						"description": "The default properties are Log Backup Frequency (minutes) and Log Backup Retention (Days). New databases added to the Rubrik system will be given these values as their defaults."
					},
					"response": []
				},
				{
					"name": "Update the default properties for Microsoft SQL databases.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Updated default properties."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/defaults",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								"defaults"
							]
						},
						"description": "The default properties are Log Backup Frequency (minutes) and Log Backup Retention (Days). New databases added to the Rubrik system will be given these values as their defaults."
					},
					"response": []
				},
				{
					"name": "Get the deletion status of downloaded recoverable ranges.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/recoverable_range/download/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								"recoverable_range",
								"download",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of the progress made in deleting recoverable ranges. The recoverable ranges to delete are those specified by the DELETE request to /mssql/db/{id}/recoverable_range/download which yielded the response with the job id."
					},
					"response": []
				},
				{
					"name": "Get compatible instances for the recovery of a Microsoft SQL database.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/:id/compatible_instance?recovery_time={{recovery_time}}&recovery_type={{recovery_type}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								":id",
								"compatible_instance"
							],
							"query": [
								{
									"key": "recovery_time",
									"value": "{{recovery_time}}"
								},
								{
									"key": "recovery_type",
									"value": "{{recovery_type}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns all compatible instances for export for a given recovery time."
					},
					"response": []
				},
				{
					"name": "Delete downloaded recoverable ranges of a Microsoft SQL database.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/:id/recoverable_range/download?after_time={{after_time}}&before_time={{before_time}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								":id",
								"recoverable_range",
								"download"
							],
							"query": [
								{
									"key": "after_time",
									"value": "{{after_time}}"
								},
								{
									"key": "before_time",
									"value": "{{before_time}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Deletes all local snapshots and logs that have previously been downloaded. A begin and/or end time can be provided to delete only the downloaded snapshots and logs that fall within the window. The time is relative to when the snapshot or log backup was originally taken, not downloaded. Parts of the window may not be deleted if certain log files must be kept to preserve times outside the window. Data is deleted in the background. To check the status of the deletion, poll /mssql/db/recoverable_range/downloaded/{id}."
					},
					"response": []
				},
				{
					"name": "Get a size estimate for a restore or export.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/:id/restore_estimate?time={{time}}&lsn={{lsn}}&recovery_fork_guid={{recovery_fork_guid}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								":id",
								"restore_estimate"
							],
							"query": [
								{
									"key": "time",
									"value": "{{time}}"
								},
								{
									"key": "lsn",
									"value": "{{lsn}}"
								},
								{
									"key": "recovery_fork_guid",
									"value": "{{recovery_fork_guid}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Provides an estimate of resources needed for the specified restore or export operation."
					},
					"response": []
				},
				{
					"name": "Get all database files to be restored.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/:id/restore_files?time={{time}}&lsn={{lsn}}&recovery_fork_guid={{recovery_fork_guid}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								":id",
								"restore_files"
							],
							"query": [
								{
									"key": "time",
									"value": "{{time}}"
								},
								{
									"key": "lsn",
									"value": "{{lsn}}"
								},
								{
									"key": "recovery_fork_guid",
									"value": "{{recovery_fork_guid}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Provides a list of database files to be restored for the specified restore or export operation."
					},
					"response": []
				},
				{
					"name": "Get the snappableId for a Microsoft SQL database.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/db/:id/snappable_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"db",
								":id",
								"snappable_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns the snappableId for a Microsoft SQL database."
					},
					"response": []
				},
				{
					"name": "Get list of immediate descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/hierarchy/:id/children?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of immediate descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/hierarchy/:id/descendants?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get a count of Microsoft SQL instances.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/mssql/instance/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"mssql",
								"instance",
								"count"
							]
						},
						"description": "Returns a count of all Microsoft SQL instances."
					},
					"response": []
				}
			],
			"description": "Folder for mssql"
		},
		{
			"name": "network_throttle",
			"item": [
				{
					"name": "Get network throttles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/network_throttle?resource_id={{resource_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"network_throttle"
							],
							"query": [
								{
									"key": "resource_id",
									"value": "{{resource_id}}"
								}
							]
						},
						"description": "Retrieve information about the network throttles that are configured for the specified Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Update a network throttle",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration changes to apply to a specified network throttle object. Unspecified values are left unchanged."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/network_throttle/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"network_throttle",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the configuration of a specified network throttle object."
					},
					"response": []
				}
			],
			"description": "Folder for network_throttle"
		},
		{
			"name": "node",
			"item": [
				{
					"name": "Get list of nodes in this Rubrik cluster.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node"
							]
						},
						"description": "Returns the list of all Rubrik nodes."
					},
					"response": []
				},
				{
					"name": "Detailed view of a Rubrik node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns the complete view of a Rubrik node"
					},
					"response": []
				},
				{
					"name": "Get CPU Cores count of a node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/cpu_cores_count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"cpu_cores_count"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "CPU cores count of a node."
					},
					"response": []
				},
				{
					"name": "Iops and IO throughput of the node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/io_stats?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"io_stats"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Iops and IO throughput of the node"
					},
					"response": []
				},
				{
					"name": "Get list of active sessions on a node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/sessions",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"sessions"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns the list of all active sessions on a node"
					},
					"response": []
				},
				{
					"name": "Fetches time ranged statistics about the specified Node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/stats?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"stats"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Statistics about the specific Node given a time range. One hour is default"
					},
					"response": []
				},
				{
					"name": "Check support tunnel status for a particular node",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/support_tunnel",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"support_tunnel"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "To be used by Admin to check status of the support tunnel."
					},
					"response": []
				},
				{
					"name": "Enable or disable the SSH Tunnel for Support Access",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The support tunnel parameters."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node/:id/support_tunnel",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node",
								":id",
								"support_tunnel"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "To be used by Admin to open or close a SSH tunnel for support. When enabling the support tunnel, the node 'id' must be *me* or the current node's 'id', because remote open is not supported. When disabling a support tunnel, the node 'id' can be that of any node in the cluster."
					},
					"response": []
				}
			],
			"description": "Folder for node"
		},
		{
			"name": "node_management",
			"item": [
				{
					"name": "Get Rubrik cluster failure tolerance information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/cluster/:id/failure_tolerance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"cluster",
								":id",
								"failure_tolerance"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Return various numbers of component failures allowed in the Rubrik cluster under which the cluster remains fully functional."
					},
					"response": []
				},
				{
					"name": "Get a list of a cluster's always-available Ips",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/cluster_ip",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"cluster_ip"
							]
						},
						"description": "Get a list of a cluster's always-available Ips"
					},
					"response": []
				},
				{
					"name": "Modify the list of cluster IPs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New list of cluster IPs"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/cluster_ip",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"cluster_ip"
							]
						},
						"description": "Modify the list of cluster IPs"
					},
					"response": []
				},
				{
					"name": "Get the node which owns the cluster IP address",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/cluster_ip/:ip",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"cluster_ip",
								":ip"
							],
							"variable": [
								{
									"key": "ip",
									"value": "{{ip}}"
								}
							]
						},
						"description": "Returns the node which owns provided cluster IP address. Returns 'NOT OWNED' if the IP is not owned by any node"
					},
					"response": []
				},
				{
					"name": "Get current default gateway",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/default_gateway",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"default_gateway"
							]
						},
						"description": "Get current default gateway"
					},
					"response": []
				},
				{
					"name": "Update the default gateway",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Default gateway"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/default_gateway",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"default_gateway"
							]
						},
						"description": "Update the default gateway"
					},
					"response": []
				},
				{
					"name": "hostname supporting the current server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/hostname",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"hostname"
							]
						},
						"description": "hostname supporting the current server"
					},
					"response": []
				},
				{
					"name": "Returns whether this machine is bootstrapped to a cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/is_bootstrapped",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"is_bootstrapped"
							]
						},
						"description": "Check whether this machine has been bootstrapped"
					},
					"response": []
				},
				{
					"name": "Get the management ip's netmask and gateway for this machine's cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/management_ip",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"management_ip"
							]
						},
						"description": "Get the management ip's netmask and gateway for this machine's cluster"
					},
					"response": []
				},
				{
					"name": "Get existing proxy settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/proxy_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"proxy_config"
							]
						},
						"description": "Get existing proxy settings"
					},
					"response": []
				},
				{
					"name": "Update proxy config",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Proxy url and port"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/proxy_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"proxy_config"
							]
						},
						"description": "Update proxy config"
					},
					"response": []
				},
				{
					"name": "Delete existing proxy configuration",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/proxy_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"proxy_config"
							]
						},
						"description": "Delete an existing proxy that was configured"
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Returns the status of the corresponding replaceNode request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/replace_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"replace_node"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Returns the status of the corresponding replaceNode request. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Replace a removed node with a new node, keeping HDDs and IPs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "IDs of new node and node to replace"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/replace_node",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"replace_node"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Replace a removed node with a new node. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "Issues a reset to the current node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/reset",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"reset"
							]
						},
						"description": "Issues a reset to the current node"
					},
					"response": []
				},
				{
					"name": "Get all existing route configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/route_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"route_config"
							]
						},
						"description": "Lists all existing route configs"
					},
					"response": []
				},
				{
					"name": "Add a new route config to all hosts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network, netmask and gateway"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/route_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"route_config"
							]
						},
						"description": "Add a new route config to all hosts"
					},
					"response": []
				},
				{
					"name": "Delete an existing route",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network and netmask"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/route_config",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								"route_config"
							]
						},
						"description": "Delete an existing route that was configured"
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Return fetch upgrade package request status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/:id/fetch_package",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								":id",
								"fetch_package"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Returns the status of the fetch upgrade package request, which is initiated by fetch_package POST. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Initiate download of rubrik upgrade package from http server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "URL of location where the upgrade package is hosted"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/:id/fetch_package",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								":id",
								"fetch_package"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Fetch a package for software upgrade from a remote http server given the url, use the node_management/{id}/upgrade endpoint to initiate upgrade. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Get upgrade request status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/:id/upgrade",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								":id",
								"upgrade"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Returns the status of the upgrade request, which is initiated by the POST endpoint. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Initiate upgrade using package downloaded from remote http server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " Force defaults to be false. Allows software to use an upgrade package of lower or equal version, which is not allowed by if force is not specified"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/node_management/:id/upgrade",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"node_management",
								":id",
								"upgrade"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Runs upgrade with the package downloaded from remote http server, use the node_management/{id}/fetch_upgrade endpoint to fetch upgrade package. A support token is required for this operation."
					},
					"response": []
				}
			],
			"description": "Folder for node_management"
		},
		{
			"name": "nutanix",
			"item": [
				{
					"name": "Get list of Nutanix clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster?primary_cluster_id={{primary_cluster_id}}&should_get_status={{should_get_status}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster"
							],
							"query": [
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "should_get_status",
									"value": "{{should_get_status}}"
								}
							]
						},
						"description": "Retrieve information for each managed Nutanix cluster"
					},
					"response": []
				},
				{
					"name": "Add Nutanix cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "IP address, natural ID of added cluster (since Prism central can manage multiple clusters), and credentials for Prism."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster"
							]
						},
						"description": "Create a Nutanix cluster object by providing an address and account credentials for Prism. Initiates an asynchronous job to establish a connection with the cluster and retrieve all metadata. Use GET /nutanix_cluster/{id}/status to check status."
					},
					"response": []
				},
				{
					"name": "Get Nutanix cluster async request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Nutanix cluster-related async request."
					},
					"response": []
				},
				{
					"name": "Get the details of a Nutanix Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information for a Nutanix Cluster object."
					},
					"response": []
				},
				{
					"name": "Patch Nutanix cluster",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing updated Nutanix cluster information."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Patch the host, credentials, and/or CA certs of the specified Nutanix cluster object."
					},
					"response": []
				},
				{
					"name": "Remove Nutanix cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiates an asynchronous job to remove a Nutanix cluster object. The Nutanix cluster cannot have VMs mounted through the Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Get list of containers on this cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/:id/container",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								":id",
								"container"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Query the nutanix cluster to get the list of containers, used for export purposes."
					},
					"response": []
				},
				{
					"name": "Refresh Nutanix cluster metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/cluster/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"cluster",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a job to refresh the metadata for the specified Nutanix cluster"
					},
					"response": []
				},
				{
					"name": "Get summary of a hierarchy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details for the specified hierarchy object."
					},
					"response": []
				},
				{
					"name": "Get list of immediate descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/hierarchy/:id/children?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&is_relic={{is_relic}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of immediate descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/hierarchy/:id/descendants?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&is_relic={{is_relic}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects for the specified parent"
					},
					"response": []
				},
				{
					"name": "Get list of Nutanix VMs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&is_relic={{is_relic}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the VMs"
					},
					"response": []
				},
				{
					"name": "Get VM async request details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Nutanix VM-related async request."
					},
					"response": []
				},
				{
					"name": "Get VM snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a snapshot."
					},
					"response": []
				},
				{
					"name": "Delete VM snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a snapshot by expiring it. Snapshot is expired only if it is a manual snapshot or a snapshot of an unprotected vm."
					},
					"response": []
				},
				{
					"name": "Lists all files in VM snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists all files and directories in a given path"
					},
					"response": []
				},
				{
					"name": "Creates a download from archival request.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Download a snapshot from archival."
					},
					"response": []
				},
				{
					"name": "Download files from a Nutanix VM backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration information for a job to download files and folders from a Nutanix VM backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to download multiple files and folders from a specified Nutanix VM backup. The response returns an asynchronous request ID. Get the URL for downloading the zip file including the specific files/folders by sending a GET request to 'nutanix/vm/request/{id}'."
					},
					"response": []
				},
				{
					"name": "Export VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the export request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id",
								"export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export snapshot of a vm."
					},
					"response": []
				},
				{
					"name": "Restore files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a job to restore files to a source Nutanix virtual machine."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Restore files from a snapshot to the source Nutanix virtual machine."
					},
					"response": []
				},
				{
					"name": "Get VM details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Detailed view of a Nutanix VM"
					},
					"response": []
				},
				{
					"name": "Patch VM",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to patch"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Patch VM with specified properties"
					},
					"response": []
				},
				{
					"name": "Get details about missed snapshots for a VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the time of the day when the snapshots were missed specific to a vm."
					},
					"response": []
				},
				{
					"name": "Register the agent installed on the Nutanix VM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/register_agent",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"register_agent"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Register the agent installed on the Nutanix VM"
					},
					"response": []
				},
				{
					"name": "Search for file in Nutanix VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search for a file within the Nutanix Virtual Machine. Search via full path prefix or filename prefix."
					},
					"response": []
				},
				{
					"name": "Get list of snapshots of VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following information for all snapshots for a VM: ID, snapshot date, expiration date, type of source object, name of VM, type of snapshot, state of the cloud, level of consistency, name of snapshot VM, index state, total number of files, IDs of all replication location, IDs of all archival locations."
					},
					"response": []
				},
				{
					"name": "Create on-demand VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the on-demand backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create an on-demand snapshot for the given VM ID"
					},
					"response": []
				},
				{
					"name": "Delete all snapshots of VM",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/nutanix/vm/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"nutanix",
								"vm",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots of a virtual machine"
					},
					"response": []
				}
			],
			"description": "Folder for nutanix"
		},
		{
			"name": "oracle",
			"item": [],
			"description": "Folder for oracle"
		},
		{
			"name": "organization",
			"item": [
				{
					"name": "Get list of all Organizations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization?name={{name}}&sort_by={{sort_by}}&sort_order={{sort_order}}&is_global={{is_global}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								},
								{
									"key": "is_global",
									"value": "{{is_global}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Parameters for creating an Organization object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization"
							]
						},
						"description": "Create a new Organization object with the specified resource parameters."
					},
					"response": []
				},
				{
					"name": "Get Rubrik Envoy userInfo for the envoy vm",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/envoy/user_info",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								"envoy",
								"user_info"
							]
						},
						"description": "Retrieve a Rubrik Envoy vm userInfo that is used to log in the envoy vm."
					},
					"response": []
				},
				{
					"name": "Get storage growth of an Organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/stats/storage_growth_timeseries?id={{id}}&range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								"stats",
								"storage_growth_timeseries"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Retrieve the storage growth of an Organization object as a time series analysis that uses bytes as the unit of measurement."
					},
					"response": []
				},
				{
					"name": "Get Organization Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details of a specified Organization object."
					},
					"response": []
				},
				{
					"name": "Update an Organization",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Updated parameters for the specified Organization object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Make changes to the parameters of a specified Organization object."
					},
					"response": []
				},
				{
					"name": "Delete an Organization",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a specified Organization object."
					},
					"response": []
				},
				{
					"name": "Get archival locations associated with this organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/archive/location",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"archive",
								"location"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total list of archive locations that have been granted to this organization."
					},
					"response": []
				},
				{
					"name": "Get information for authorized AWS resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/aws",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"aws"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized AWS resources of an organization. Information for a AWS resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get AWS EC2 instance metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/aws/ec2_instance/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"aws",
								"ec2_instance",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get Rubrik Envoy list for an organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/envoy",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"envoy"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve a list of all of the Rubrik Envoy objects that are assigned to a specified organization."
					},
					"response": []
				},
				{
					"name": "Create a Rubrik Envoy object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to assign to a specified Rubrik Envoy object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/envoy",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"envoy"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a Rubrik Envoy object for a specified organization and specify the properties to assign to the Rubrik Envoy object."
					},
					"response": []
				},
				{
					"name": "Get a Rubrik Envoy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/envoy/:envoy_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"envoy",
								":envoy_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "envoy_id",
									"value": "{{envoy_id}}"
								}
							]
						},
						"description": "Retrieve the details of a specified Rubrik Envoy object."
					},
					"response": []
				},
				{
					"name": "Update Rubrik Envoy",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to assign to the specified Rubrik Envoy object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/envoy/:envoy_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"envoy",
								":envoy_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "envoy_id",
									"value": "{{envoy_id}}"
								}
							]
						},
						"description": "Change one or more of the properties of a specified Rubrik Envoy object."
					},
					"response": []
				},
				{
					"name": "Remove Rubrik Envoy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/envoy/:envoy_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"envoy",
								":envoy_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "envoy_id",
									"value": "{{envoy_id}}"
								}
							]
						},
						"description": "Remove a Rubrik Envoy object from an organization and delete the object from the Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Get information for authorized Hyper-v resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/hyperv",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"hyperv"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized Hyper-v resources of an organization. Information for a Hyper-v resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get hyperv vm metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/hyperv/vm/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"hyperv",
								"vm",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized Linux hosts in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/linux",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"linux"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized Linux hosts of an organization. Information for a Linux host is only included when the organization has an explicit authorization for the host. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get linux fileset metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/linux/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"linux",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count and total protected object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized Managed Volumes in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/managed_volume",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"managed_volume"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized Managed Volumes of an organization. Information for a Managed Volume is only included when the organization has an explicit authorization for the Managed Volume. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get managed volume metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/managed_volume/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"managed_volume",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized SQL Server resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/mssql",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"mssql"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized SQL Server resources of an organization. Information for a SQL Server resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get mssql database metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/mssql/db/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"mssql",
								"db",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized NAS shares in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/nas",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"nas"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized NAS shares of an organization. Information for a NAS share is only included when the organization has an explicit authorization for the share. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get nas share metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/nas/share/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"nas",
								"share",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized Nutanix resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/nutanix",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"nutanix"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized Nutanix resources of an organization. Information for a Nutanix resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get nutanix vm metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/nutanix/vm/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"nutanix",
								"vm",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get replication targets associated with this organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/replication/target",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"replication",
								"target"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total list of replication targets that have been granted to this organization."
					},
					"response": []
				},
				{
					"name": "Get sla domains associated with this organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/sla_domain",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"sla_domain"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total list of sla domains that have been granted to this organization."
					},
					"response": []
				},
				{
					"name": "Get the Total Storage Usage for an Organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/stats/total_storage_usage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"stats",
								"total_storage_usage"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the Total Storage Usage (bytes) for the Organization specified by id"
					},
					"response": []
				},
				{
					"name": "Get information for authorized storage array resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/storage/array",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"storage",
								"array"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized storage array resources of an organization. Information for a storage array resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get storage array volume group metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/storage/array/volume_group/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"storage",
								"array",
								"volume_group",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized users and groups in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/users_and_groups",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"users_and_groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized users and groups of an organization. Information for a user or a group is only included when the user or group has an explicit authorization. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get information for authorized vCD resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/vcd",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"vcd"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized vCD resources of an organization. Information for a vCD resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get vCD vApp metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/vcd/vapp/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"vcd",
								"vapp",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized VMware resources in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/vmware",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"vmware"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized VMware resources of an organization. Information for a Vmware resource is only included when the organization has an explicit authorization for the resource. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get vmware vm metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/vmware/vm/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"vmware",
								"vm",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count, total protected object and no sla object count"
					},
					"response": []
				},
				{
					"name": "Get information for authorized Windows hosts in an organization.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/windows",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"windows"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for the explicitly authorized Windows hosts of an organization. Information for a Windows host is only included when the organization has an explicit authorization for the host. This endpoint returns an empty list for the default global organization."
					},
					"response": []
				},
				{
					"name": "Get Window fileset metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/organization/:id/windows/metric",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"organization",
								":id",
								"windows",
								"metric"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the total object count and total protected object count"
					},
					"response": []
				}
			],
			"description": "Folder for organization"
		},
		{
			"name": "polaris",
			"item": [
				{
					"name": "Export information about a given object type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Config for export info job."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/polaris/export_info",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"polaris",
								"export_info"
							]
						},
						"description": "Trigger an asynchronous job that uploads a file with metadata information about the given object type."
					},
					"response": []
				},
				{
					"name": "Get asynchronous request details for an export info job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/polaris/export_info/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"polaris",
								"export_info",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of an asynchronous request that runs an export info job."
					},
					"response": []
				},
				{
					"name": "Get Rubrik cluster metadata.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Sequential queries to retrieve metadata rows."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/polaris/metadata/query_by_ids",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"polaris",
								"metadata",
								"query_by_ids"
							]
						},
						"description": "Use table names and composite row IDs to retrieve metadata from a Rubrik cluster."
					},
					"response": []
				},
				{
					"name": "Get information about snapshots in a given time range",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Config for snapshot upload job"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/polaris/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"polaris",
								"snapshot"
							]
						},
						"description": "Get information about snapshots in a given time range"
					},
					"response": []
				},
				{
					"name": "Get asynchronous request details for a get snapshots job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/polaris/snapshot/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"polaris",
								"snapshot",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of an asynchronous request that runs a get snapshots job."
					},
					"response": []
				}
			],
			"description": "Folder for polaris"
		},
		{
			"name": "principal_search",
			"item": [
				{
					"name": "Searches for security principals",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Search request to perform"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/principal_search",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"principal_search"
							]
						},
						"description": "Searches for security principals using one or more independent queries. The result set is the union of the principals returned by each query."
					},
					"response": []
				}
			],
			"description": "Folder for principal_search"
		},
		{
			"name": "replication",
			"item": [
				{
					"name": "Get summaries for all replication sources.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/source",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"source"
							]
						},
						"description": "Retrieve the ID, name, and address for each replication source."
					},
					"response": []
				},
				{
					"name": "Get summary for a specific replication source.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/source/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"source",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the ID, name, and address for a specified replication source."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN: Remove a replication source.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/source/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"source",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN: Remove a specified replication source from this Rubrik cluster. A support token is required for this operation"
					},
					"response": []
				},
				{
					"name": "Get summary of current replication target.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/target?name={{name}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"target"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve the ID, name, and address for the current replication target."
					},
					"response": []
				},
				{
					"name": "Configure a replication target",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Replication target definition"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/target",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"target"
							]
						},
						"description": "Provide an address, network setup, username, and password to configure and enable a replication target. Network setup must be either 'NAT' or 'Private Network'. WARNING: This will fail if there is already an existing replication target."
					},
					"response": []
				},
				{
					"name": "Get summary for the replication target.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/target/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"target",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the ID, name, and address of the replication target."
					},
					"response": []
				},
				{
					"name": "Update the replication target information.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object containing updated replication target information."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/target/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"target",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the setup information, address, username, and password for the replication target."
					},
					"response": []
				},
				{
					"name": "Remove the replication target.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/replication/target/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"replication",
								"target",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Remove the replication target from this cluster."
					},
					"response": []
				}
			],
			"description": "Folder for replication"
		},
		{
			"name": "report",
			"item": [
				{
					"name": "Get summary information for all reports.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report?report_template={{report_template}}&report_type={{report_type}}&name={{name}}&sort_by=name&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report"
							],
							"query": [
								{
									"key": "report_template",
									"value": "{{report_template}}"
								},
								{
									"key": "report_type",
									"value": "{{report_type}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sort_by",
									"value": "name"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Retrieve summary information for each report. Optionally, filter the retrieved information."
					},
					"response": []
				},
				{
					"name": "Create a new report.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Report name and Report template"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report"
							]
						},
						"description": "Create a new report by specifying one of the report templates."
					},
					"response": []
				},
				{
					"name": "Get a CSV file for the report data source specified by type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Type of the report data source"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/data_source/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								"data_source",
								"download"
							]
						},
						"description": "Create a job to generate data source csv file in background. Returns a job id to poll the status of job."
					},
					"response": []
				},
				{
					"name": "Returns specific email subscription for a report.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/email_subscription/:subscription_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								"email_subscription",
								":subscription_id"
							],
							"variable": [
								{
									"key": "subscription_id",
									"value": "{{subscription_id}}"
								}
							]
						},
						"description": "Returns the email subscription specified by subscription_id for the report it is a subscription of."
					},
					"response": []
				},
				{
					"name": "Updates a specific email subscription for a report.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Definition of the updated email subscription."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/email_subscription/:subscription_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								"email_subscription",
								":subscription_id"
							],
							"variable": [
								{
									"key": "subscription_id",
									"value": "{{subscription_id}}"
								}
							]
						},
						"description": "Updates the email subscription specified by subscription_id for the report it is a subscription of."
					},
					"response": []
				},
				{
					"name": "Deletes a specific email subscription for a report.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/email_subscription/:subscription_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								"email_subscription",
								":subscription_id"
							],
							"variable": [
								{
									"key": "subscription_id",
									"value": "{{subscription_id}}"
								}
							]
						},
						"description": "Deletes the email subscription specified by subscription_id for the report it is a subscription of."
					},
					"response": []
				},
				{
					"name": "Get asynchronous request details for data source CSV download job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the details of an asynchronous request that generates data source CSV download file"
					},
					"response": []
				},
				{
					"name": "Get information about a specific report.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get report details and update status"
					},
					"response": []
				},
				{
					"name": "Update a specific report.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Report update config"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update a specific report. The report's name, chart parameters, filters and table can be updated. If successful, this will automatically trigger an async job to refresh the report content."
					},
					"response": []
				},
				{
					"name": "Delete a specific report.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a specific report specified by reportId"
					},
					"response": []
				},
				{
					"name": "Get chart data for a report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/chart?chart_id={{chart_id}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"chart"
							],
							"query": [
								{
									"key": "chart_id",
									"value": "{{chart_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve chart data associated with the report specified by id"
					},
					"response": []
				},
				{
					"name": "Get the link for CSV file of the report specified by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/csv_link",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"csv_link"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get the link to a CSV file for a report. This is a synchronous operation."
					},
					"response": []
				},
				{
					"name": "Returns email subscriptions for a report.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/email_subscription",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"email_subscription"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns all email subscriptions for the report specified by id."
					},
					"response": []
				},
				{
					"name": "Creates email subscription for a report.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Definition of the email subscription to create."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/email_subscription",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"email_subscription"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Creates an email subscription for the report specified by id."
					},
					"response": []
				},
				{
					"name": "Begins to refresh the data associated with a report.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Begins to refresh the data associated with the report specified by id. This should be used following calls to the various report patch endpoints in order to trigger the data update."
					},
					"response": []
				},
				{
					"name": "Gets the table associated with the report specified by id and filters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Definition of items to get from the report table."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/report/:id/table",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"report",
								":id",
								"table"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve table data for a specific report"
					},
					"response": []
				}
			],
			"description": "Folder for report"
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Search for file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/search?managed_id={{managed_id}}&query_string={{query_string}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"search"
							],
							"query": [
								{
									"key": "managed_id",
									"value": "{{managed_id}}"
								},
								{
									"key": "query_string",
									"value": "{{query_string}}"
								}
							]
						},
						"description": "Search for a file within the backup of a specified virtual machine, fileset, host, or storage array volume group. Perform the search by using a search string that consists of a prefix portion of the full path of the file or a prefix portion of the filename."
					},
					"response": []
				},
				{
					"name": "Search for a file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/search/snapshot_search?snapshot_id={{snapshot_id}}&name={{name}}&dir={{dir}}&limit={{limit}}&offset={{offset}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"search",
								"snapshot_search"
							],
							"query": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "dir",
									"value": "{{dir}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								}
							]
						},
						"description": "Perform a search for a file within a specified snapshot by using a prefix portion of the filename."
					},
					"response": []
				}
			],
			"description": "Folder for search"
		},
		{
			"name": "sla_domain",
			"item": [
				{
					"name": "Finding managed entities with SLA Domain conflicts.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/sla_domain/conflicts?managed_id={{managed_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"sla_domain",
								"conflicts"
							],
							"query": [
								{
									"key": "managed_id",
									"value": "{{managed_id}}"
								}
							]
						},
						"description": "Find managed entities that have a conflict with the SLA Domain assignment that is derived from a specified entity. For managed entities that derive an assignment from the specified entity, this call finds conflicts caused by an individual assignment, and conflicts caused by deriving assignments from more than one source."
					},
					"response": []
				},
				{
					"name": "Assign managed entities to an SLA Domain synchronously.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A comma-separated list of the IDs of the managed entities being assigned to the SLA Domain."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/sla_domain/:id/assign",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"sla_domain",
								":id",
								"assign"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Assign managed entities to the specified SLA Domain. The assignment event runs synchronously."
					},
					"response": []
				}
			],
			"description": "Folder for sla_domain"
		},
		{
			"name": "smtp_instance",
			"item": [
				{
					"name": "Get summary of all smtp instances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance"
							]
						},
						"description": "Get summary of all smtp instances"
					},
					"response": []
				},
				{
					"name": "Add smtp instances",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "smtp instance"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance"
							]
						},
						"description": "Add smtp instances"
					},
					"response": []
				},
				{
					"name": "send email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "send email params"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance/send_test_email",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance",
								"send_test_email"
							]
						},
						"description": "Send email to admin users if toEmailIds is empty"
					},
					"response": []
				},
				{
					"name": "Details of a smtp instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update specifications for sending email",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "smtp instances"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "update specifications for sending email"
					},
					"response": []
				},
				{
					"name": "Delete a smtp instance",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/smtp_instance/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"smtp_instance",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Folder for smtp_instance"
		},
		{
			"name": "snapshot",
			"item": [
				{
					"name": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d on archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of snapshot IDs and location ID to check if GC'd"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/archive_garbage_collect_status",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								"archive_garbage_collect_status"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d on archive. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Corrupt an incremental snapshot by redirecting its base pointer.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the snapshot corruption"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/corrupt_chain",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								"corrupt_chain"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN- Corrupt an incremental snapshot by redirecting its base pointer. CAUTION - This request races with Reverse and Expire, so care must be taken to disable these jobs or stop services (on all nodes). A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Expire a snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "ID of the Snapshot that needs to be expired locally"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/expire",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								"expire"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Will mark the snapshot as expired. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of snapshot IDs to check if GC'd"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/garbage_collect_status",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								"garbage_collect_status"
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - Check whether snapshots have been GC''d. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "REQUIRES SUPPORT TOKEN - Returns the diagnostic info of a snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/:id/diagnostic?snappable_id={{snappable_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								":id",
								"diagnostic"
							],
							"query": [
								{
									"key": "snappable_id",
									"value": "{{snappable_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "REQUIRES SUPPORT TOKEN - It returns some diagnostic info of a snapshot, right now only compression type is returned. A support token is required for this operation."
					},
					"response": []
				},
				{
					"name": "Returns storage stats for a snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/snapshot/:id/storage/stats?snappable_id={{snappable_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"snapshot",
								":id",
								"storage",
								"stats"
							],
							"query": [
								{
									"key": "snappable_id",
									"value": "{{snappable_id}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns the storage statistics for a snapshot."
					},
					"response": []
				}
			],
			"description": "Folder for snapshot"
		},
		{
			"name": "stats",
			"item": [
				{
					"name": "Get the bandwidth of the archival location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/archival/bandwidth/time_series?data_location_id={{data_location_id}}&range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"archival",
								"bandwidth",
								"time_series"
							],
							"query": [
								{
									"key": "data_location_id",
									"value": "{{data_location_id}}"
								},
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Gets the bandwidth of the archival location. If data location ID is not provided, returns the sum over all archival locations."
					},
					"response": []
				},
				{
					"name": "Get available storage in cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/available_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"available_storage"
							]
						},
						"description": "Get available storage in cluster."
					},
					"response": []
				},
				{
					"name": "Get average storage growth per day",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/average_storage_growth_per_day",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"average_storage_growth_per_day"
							]
						},
						"description": "Get average storage growth per day."
					},
					"response": []
				},
				{
					"name": "Get storage used on cloud for all snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/cloud_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"cloud_storage"
							]
						},
						"description": "Get storage used on cloud for all snapshots."
					},
					"response": []
				},
				{
					"name": "Get compression stats for cross increments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/cross_compression",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"cross_compression"
							]
						},
						"description": "Get compression stats for cross increments."
					},
					"response": []
				},
				{
					"name": "Get usage details of al data locations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/data_location/usage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"data_location",
								"usage"
							]
						},
						"description": "Get usage details from all data locations"
					},
					"response": []
				},
				{
					"name": "Get timeseries on logical data ingestion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/logical_ingest/time_series",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"logical_ingest",
								"time_series"
							]
						},
						"description": "Get timeseries on logical data ingestion."
					},
					"response": []
				},
				{
					"name": "Get storage footprint on rubrik for a given mount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/per_mount_storage/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"per_mount_storage",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get storage footprint on rubrik for a given mount."
					},
					"response": []
				},
				{
					"name": "Get timeseries on physical data ingestion",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/physical_ingest/time_series?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"physical_ingest",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get timeseries on physical data ingestion"
					},
					"response": []
				},
				{
					"name": "Get a timeseries on physical data ingestion per day",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/physical_ingest_per_day/time_series?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"physical_ingest_per_day",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get a timeseries on physical data ingestion per day."
					},
					"response": []
				},
				{
					"name": "Get total physical storage being used in the system",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/physical_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"physical_storage"
							]
						},
						"description": "Get total Physical storage being used in the system."
					},
					"response": []
				},
				{
					"name": "Get protected primary storage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/protected_primary_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"protected_primary_storage"
							]
						},
						"description": "Get protected primary storage."
					},
					"response": []
				},
				{
					"name": "Get a timeseries of total incoming bandwidth from the replication clusters.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/replication/incoming/time_series?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"replication",
								"incoming",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get the total incoming bandwidth from the replication clusters"
					},
					"response": []
				},
				{
					"name": "Get the total outgoing bandwidth to the replication clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/replication/outgoing/time_series?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"replication",
								"outgoing",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get the total outgoing bandwidth to the replication clusters."
					},
					"response": []
				},
				{
					"name": "Get the number of days remaining before the system fills up",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/runway_remaining",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"runway_remaining"
							]
						},
						"description": "Get the number of days remaining before the system fills up."
					},
					"response": []
				},
				{
					"name": "Get total storage for all the SLA domains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/sla_domain_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"sla_domain_storage"
							]
						},
						"description": "Get total storage for all the SLA domains."
					},
					"response": []
				},
				{
					"name": "Get a timeseries of storage growth for the given SLA domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/sla_domain_storage/time_series?id={{id}}&range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"sla_domain_storage",
								"time_series"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get a timeseries of storage growth timeseries for the given SLA domain."
					},
					"response": []
				},
				{
					"name": "Get storage used on cloud for the given SLA domain",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/sla_domain_storage/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"sla_domain_storage",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get storage used on cloud for the given SLA domain."
					},
					"response": []
				},
				{
					"name": "Get a timeseries of snapshots being ingested at a given time instance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/snapshot_ingest/time_series",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"snapshot_ingest",
								"time_series"
							]
						},
						"description": "Get a timeseries of snapshots being ingested at a given time instance."
					},
					"response": []
				},
				{
					"name": "Get ingested storage for all snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/snapshot_storage/ingested",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"snapshot_storage",
								"ingested"
							]
						},
						"description": "Get ingested storage for all snapshots."
					},
					"response": []
				},
				{
					"name": "Get live snapshot storage for all snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/snapshot_storage/live",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"snapshot_storage",
								"live"
							]
						},
						"description": "Get live snapshot storage for all snapshots."
					},
					"response": []
				},
				{
					"name": "Get logical storage for all snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/snapshot_storage/logical",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"snapshot_storage",
								"logical"
							]
						},
						"description": "Get logical storage for all snapshots."
					},
					"response": []
				},
				{
					"name": "Get physical storage for all snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/snapshot_storage/physical",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"snapshot_storage",
								"physical"
							]
						},
						"description": "Get physical storage for all snapshots."
					},
					"response": []
				},
				{
					"name": "Get the number of concurent streams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/streams/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"streams",
								"count"
							]
						},
						"description": "Get the number of concurent streams."
					},
					"response": []
				},
				{
					"name": "Get entire storage info about TotalStorage, AvailableStorage, ReservedStorage and UsedStorage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/system_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"system_storage"
							]
						},
						"description": "Get entire storage info about TotalStorage, AvailableStorage, ReservedStorage and UsedStorage."
					},
					"response": []
				},
				{
					"name": "Get a timeseries of total physical storage growth",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/total_physical_storage/time_series?range={{range}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"total_physical_storage",
								"time_series"
							],
							"query": [
								{
									"key": "range",
									"value": "{{range}}"
								}
							]
						},
						"description": "Get a timeseries of total physical storage growth."
					},
					"response": []
				},
				{
					"name": "Get total storage including local vm storage replicated across targets and also remote vm storage on premise",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/total_replication_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"total_replication_storage"
							]
						},
						"description": "Get Total storage including local vm storage replicated across targets and also remote vm storage on premise."
					},
					"response": []
				},
				{
					"name": "Get total storage in cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/total_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"total_storage"
							]
						},
						"description": "Get total storage in cluster."
					},
					"response": []
				},
				{
					"name": "Get total storage for snappables that have snapshots but are currently not protected",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/stats/unprotected_snappable_storage",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"stats",
								"unprotected_snappable_storage"
							]
						},
						"description": "Get total storage for snappables that have snapshots but are currently not protected"
					},
					"response": []
				}
			],
			"description": "Folder for stats"
		},
		{
			"name": "storage",
			"item": [
				{
					"name": "Summary of all storage arrays",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array"
							]
						},
						"description": "Retrieve the host IP and username for all storage arrays."
					},
					"response": []
				},
				{
					"name": "Add a storage array",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "JSON object for storage array definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array"
							]
						},
						"description": "Adds a storage array object and initiates an asynchronous job to obtain the metadata of the storage array for the object."
					},
					"response": []
				},
				{
					"name": "Get information for hierarchy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get information about a specific storage array hierarchy object."
					},
					"response": []
				},
				{
					"name": "Get list of children",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/hierarchy/:id/children?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get a list of the immediate subordinate objects of a storage array object."
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/hierarchy/:id/descendants?effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects for the specified storage array."
					},
					"response": []
				},
				{
					"name": "Get storage array information for a host",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/host/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"host",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about the storage arrays and storage array volumes that are associated with a specified host object."
					},
					"response": []
				},
				{
					"name": "Get storage array request",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the status and details of a specified asynchronous request for a storage array object."
					},
					"response": []
				},
				{
					"name": "Get details for all storage array volumes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume?storage_array_id={{storage_array_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume"
							],
							"query": [
								{
									"key": "storage_array_id",
									"value": "{{storage_array_id}}"
								}
							]
						},
						"description": "Retrieve the summary details for all storage array volume objects."
					},
					"response": []
				},
				{
					"name": "Get list of volume groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&is_relic={{is_relic}}&name={{name}}&sla_assignment={{sla_assignment}}&storage_array_id={{storage_array_id}}&host_id={{host_id}}&proxy_host_id={{proxy_host_id}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "storage_array_id",
									"value": "{{storage_array_id}}"
								},
								{
									"key": "host_id",
									"value": "{{host_id}}"
								},
								{
									"key": "proxy_host_id",
									"value": "{{proxy_host_id}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Retrieve summary information about all storage array volume group objects."
					},
					"response": []
				},
				{
					"name": "Add a storage array volume group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "JSON representation of a storage array volume group object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group"
							]
						},
						"description": "Create a storage array volume group object."
					},
					"response": []
				},
				{
					"name": "Get volume group snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details of a specified volume group snapshot."
					},
					"response": []
				},
				{
					"name": "Delete a volume group snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a snapshot of a specified volume group by expiring it. The snapshot cannot be expired unless it is a on-demand snapshot or a snapshot of an unprotected volume group."
					},
					"response": []
				},
				{
					"name": "List files in volume group snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists all files and directories beneath a specified path in a volume group snapshot."
					},
					"response": []
				},
				{
					"name": "Download an archival snapshot for a volume group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate an asynchronous job to download a specified volume group snapshot from an archival location."
					},
					"response": []
				},
				{
					"name": "Download files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a download request of files from a specified volume group snapshot."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate an asynchronous job to download files from a backup of a storage array volume group. Returns a job instance ID. To retrieve the files, use GET /user_notification/{user_id} to monitor the job. When the download is ready, JobNotificationInfo includes the job instance ID as the value of **_jobId_** and the download link as the value of **_DownloadFile_**."
					},
					"response": []
				},
				{
					"name": "Export Volume group snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the export request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id",
								"export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export snapshot of a volume group."
					},
					"response": []
				},
				{
					"name": "Restore files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for an asynchronous job to restore files from a snapshot of a storage array volume group to the source location."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Initiate an asynchronous job to restore files from a snapshot of a storage array volume group to the source location. The call returns a job instance ID."
					},
					"response": []
				},
				{
					"name": "Get volume group details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the properties of a specified storage array volume group object."
					},
					"response": []
				},
				{
					"name": "Update a volume group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update for the specified volume group object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the properties of a specified volume group object."
					},
					"response": []
				},
				{
					"name": "Remove a volume group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id?preserve_snapshots={{preserve_snapshots}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id"
							],
							"query": [
								{
									"key": "preserve_snapshots",
									"value": "{{preserve_snapshots}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Removes a specified storage array volume group object."
					},
					"response": []
				},
				{
					"name": "Get missed snapshots for volume group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve a list of missed SLA Domain scheduled snapshots for a specified storage array volume group. Each entry includes a timestamp."
					},
					"response": []
				},
				{
					"name": "Search volume group for a file",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search for a file within a specified storage array volume group. The search string can be a prefix portion of the full path for the file or a prefix portion of the name of the file."
					},
					"response": []
				},
				{
					"name": "Get list of snapshots of Volume Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following information for all snapshots for a Volume Group: ID, snapshot date, expiration date, type of source object, name of Volume Group, type of snapshot, state of the cloud, level of consistency, name of snapshot Volume Group, index state, total number of files, IDs of all replication location, IDs of all archival locations."
					},
					"response": []
				},
				{
					"name": "Initiate an on-demand snapshot for a volume group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a job to create an on-demand snapshot of a storage array volume group."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an async job to create an on-demand snapshot for a specified storage array volume group."
					},
					"response": []
				},
				{
					"name": "Delete volume group snapshots",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								"group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots for a specified volume group."
					},
					"response": []
				},
				{
					"name": "Get storage array volume details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/volume/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								"volume",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details for a storage array volume object by using the assigned ID."
					},
					"response": []
				},
				{
					"name": "Get information about a specific storage array.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get information about a specific storage array."
					},
					"response": []
				},
				{
					"name": "Update a specific storage array",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "JSON object for storage array definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the host ip, username, and/or password of given storage array."
					},
					"response": []
				},
				{
					"name": "Remove a specific storage array.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create an asynchronous job for removing a specified storage array object."
					},
					"response": []
				},
				{
					"name": "Refresh storage array metadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/storage/array/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"storage",
								"array",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create an asynchronous job to refresh the metadata for a specified storage array object."
					},
					"response": []
				}
			],
			"description": "Folder for storage"
		},
		{
			"name": "support",
			"item": [
				{
					"name": "Get the status of generating support bundle",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/support/support_bundle?id={{id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"support",
								"support_bundle"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Given a request ID for generate support bundle request, provide the status of the request. If the request is successful, the download link for the support bundle would be included."
					},
					"response": []
				},
				{
					"name": "Collect log files from the cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Either event id or request id list of the request to be collected, if both are provided, request id list would be ignored"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/support/support_bundle",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"support",
								"support_bundle"
							]
						},
						"description": "To be used by Admin to collect necessary Rubrik's log files from all the nodes. Both event_id and reqeust_ids are optional. If nothing is specified, the whole support bundle is to be collected, if event_id is specified, the reqeuest_ids is ignored. If request id is specified, only collect logs related to the specific request, otherwise collect all the logs"
					},
					"response": []
				}
			],
			"description": "Folder for support"
		},
		{
			"name": "syslog",
			"item": [
				{
					"name": "Get configured Syslog Server export settings.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog"
							]
						},
						"description": "Returns the list of all configured Syslog Server export settings."
					},
					"response": []
				},
				{
					"name": "Configure new Syslog Server export settings.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New Syslog Server export settings."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog"
							]
						},
						"description": "Configures new Syslog Server export settings to be used for Syslog export."
					},
					"response": []
				},
				{
					"name": "Test Syslog Server export settings.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Syslog Server export settings."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog/test",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog",
								"test"
							]
						},
						"description": "Sends a test message using a given Syslog Server export settings."
					},
					"response": []
				},
				{
					"name": "Get Syslog Server export settings for a configured Syslog Server.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Gets the Syslog Server export settings of a configured Syslog Server with the given ID."
					},
					"response": []
				},
				{
					"name": "Modify Syslog Server export settings.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Syslog Server export settings."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Modify the export settings for a single Syslog Server."
					},
					"response": []
				},
				{
					"name": "Delete Syslog Server export settings.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/syslog/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"syslog",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete the Syslog Server export settings by specifying the settings ID."
					},
					"response": []
				}
			],
			"description": "Folder for syslog"
		},
		{
			"name": "unmanaged_object",
			"item": [
				{
					"name": "Get summary of all the objects with unmanaged snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/unmanaged_object?limit={{limit}}&after_id={{after_id}}&search_value={{search_value}}&unmanaged_status={{unmanaged_status}}&object_type={{object_type}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"unmanaged_object"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "after_id",
									"value": "{{after_id}}"
								},
								{
									"key": "search_value",
									"value": "{{search_value}}"
								},
								{
									"key": "unmanaged_status",
									"value": "{{unmanaged_status}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							]
						},
						"description": "Get summary of all the objects with unmanaged snapshots"
					},
					"response": []
				},
				{
					"name": "Bulk delete all unmanaged snapshots for the given objects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of objectId/objectType pairings for which to delete all snapshots"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/unmanaged_object/snapshot/bulk_delete",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"unmanaged_object",
								"snapshot",
								"bulk_delete"
							]
						},
						"description": "Bulk delete all unmanaged snapshots for the objects specified by objectId/objectType pairings"
					},
					"response": []
				},
				{
					"name": "Get summary of all the unmanaged snapshots for a given object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/unmanaged_object/:id/snapshot?limit={{limit}}&offset={{offset}}&search_value={{search_value}}&unmanaged_snapshot_type={{unmanaged_snapshot_type}}&before_date={{before_date}}&after_date={{after_date}}&sort_by={{sort_by}}&sort_order={{sort_order}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"unmanaged_object",
								":id",
								"snapshot"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "search_value",
									"value": "{{search_value}}"
								},
								{
									"key": "unmanaged_snapshot_type",
									"value": "{{unmanaged_snapshot_type}}"
								},
								{
									"key": "before_date",
									"value": "{{before_date}}"
								},
								{
									"key": "after_date",
									"value": "{{after_date}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "{{sort_order}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get summary of all the unmanaged snapshots for the object specified by id"
					},
					"response": []
				},
				{
					"name": "Bulk delete specified unmanaged snapshots for the given object. Must specify object type as well.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of snapshotIds to delete and the type of object the snapshots are of."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/unmanaged_object/:id/snapshot/bulk_delete",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"unmanaged_object",
								":id",
								"snapshot",
								"bulk_delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Bulk delete unmanaged snapshots specified by snapshotIds for the given object"
					},
					"response": []
				}
			],
			"description": "Folder for unmanaged_object"
		},
		{
			"name": "user",
			"item": [
				{
					"name": "ADMIN ONLY: Summary of all the Users ",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user?username={{username}}&auth_domain_id={{auth_domain_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "auth_domain_id",
									"value": "{{auth_domain_id}}"
								}
							]
						},
						"description": "To be used by Admin to fetch the list of Users"
					},
					"response": []
				},
				{
					"name": "ADMIN ONLY: Create new User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Detail info about the user to be created"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user"
							]
						},
						"description": "To be used by Admin to create new User"
					},
					"response": []
				},
				{
					"name": "ADMIN ONLY: Details about the specific User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "To be used by Admin to fetch details about the specific User"
					},
					"response": []
				},
				{
					"name": "ADMIN ONLY: Update existing User",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "User info to be updated"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "To be used by Admin to update existing User"
					},
					"response": []
				},
				{
					"name": "ADMIN ONLY: Delete a user for the given id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a user for the given id"
					},
					"response": []
				},
				{
					"name": "Get Organization access list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user/:id/organization",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user",
								":id",
								"organization"
							],
							"variable": [
								{
									"key": "id",
									"value": "me"
								}
							]
						},
						"description": "Retrieve a list of all of the Organization objects that the current session user can access."
					},
					"response": []
				}
			],
			"description": "Folder for user"
		},
		{
			"name": "user_notification",
			"item": [
				{
					"name": "Get notifications for the current user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user_notification?limit={{limit}}&after_id={{after_id}}&state={{state}}&status={{status}}&notification_type={{notification_type}}&object_ids={{object_ids}}&before_date={{before_date}}&after_date={{after_date}}&object_type={{object_type}}&object_name={{object_name}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user_notification"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "after_id",
									"value": "{{after_id}}"
								},
								{
									"key": "state",
									"value": "{{state}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "notification_type",
									"value": "{{notification_type}}"
								},
								{
									"key": "object_ids",
									"value": "{{object_ids}}"
								},
								{
									"key": "before_date",
									"value": "{{before_date}}"
								},
								{
									"key": "after_date",
									"value": "{{after_date}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "object_name",
									"value": "{{object_name}}"
								}
							]
						},
						"description": "Notifications for the current user"
					},
					"response": []
				},
				{
					"name": "Update user notification state in bulk",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "user notifications to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user_notification/update/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user_notification",
								"update",
								"bulk"
							]
						},
						"description": "Update user notification state in bulk. For each notification state, enter any of the following values: **NEW** or **READ**."
					},
					"response": []
				},
				{
					"name": "Change status of given notification",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "State to update. Enter any of the following values: **NEW** or **READ**."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/user_notification/:notification_id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"user_notification",
								":notification_id"
							],
							"variable": [
								{
									"key": "notification_id",
									"value": "{{notification_id}}"
								}
							]
						},
						"description": "Change status of given notification"
					},
					"response": []
				}
			],
			"description": "Folder for user_notification"
		},
		{
			"name": "vcd",
			"item": [
				{
					"name": "Get summary for all vCD Clusters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster?name={{name}}&status={{status}}&sort_by={{sort_by}}&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "status",
									"value": "{{status}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Retrieve summary information for all vCD cluster objects."
					},
					"response": []
				},
				{
					"name": "Add a vCD Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "IP address and account credentials of the vCD Cluster, and ID of the managing Rubrik cluster."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster"
							]
						},
						"description": "Create a vCD Cluster object by providing the address of the vCD Cluster and the credentials for an account on the vCD Cluster that has administrator privileges. This request initiates an asynchronous job to connect with the vCD Cluster and retrieve the required metadata."
					},
					"response": []
				},
				{
					"name": "Get vCD Cluster job status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details of a specified asynchronous job for a vCD Cluster."
					},
					"response": []
				},
				{
					"name": "Get vCD Cluster details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information for a vCD Cluster object."
					},
					"response": []
				},
				{
					"name": "Change vCD Cluster object",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Updated hostname and credentials for a specified vCD Cluster object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Modify the hostname and credentials of a specified vCD Cluster object."
					},
					"response": []
				},
				{
					"name": "Remove vCD Cluster",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to remove a vCD Cluster object."
					},
					"response": []
				},
				{
					"name": "Refresh a vCD Cluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/:id/refresh",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								":id",
								"refresh"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to refresh the metadata for a specified vCD Cluster object."
					},
					"response": []
				},
				{
					"name": "Get VimServers of a vCD Cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/cluster/:id/vimserver?sort_by={{sort_by}}&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"cluster",
								":id",
								"vimserver"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieves the VimServer representation of the vCenter Servers that are attached to a specified vCD Cluster object."
					},
					"response": []
				},
				{
					"name": "Get summary of a vCD hierarchy object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/hierarchy/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"hierarchy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve details for the specified object in the vCD hierarchy."
					},
					"response": []
				},
				{
					"name": "Get immediate descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/hierarchy/:id/children?sort_by={{sort_by}}&sort_order=asc&limit={{limit}}&offset={{offset}}&name={{name}}&is_relic={{is_relic}}&effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&sla_assignment={{sla_assignment}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"hierarchy",
								":id",
								"children"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of immediate descendant objects for the specified parent."
					},
					"response": []
				},
				{
					"name": "Get list of descendant objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/hierarchy/:id/descendants?sort_by={{sort_by}}&sort_order=asc&limit={{limit}}&offset={{offset}}&name={{name}}&is_relic={{is_relic}}&effective_sla_domain_id={{effective_sla_domain_id}}&object_type={{object_type}}&primary_cluster_id={{primary_cluster_id}}&sla_assignment={{sla_assignment}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"hierarchy",
								":id",
								"descendants"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "object_type",
									"value": "{{object_type}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the list of descendant objects for the specified parent."
					},
					"response": []
				},
				{
					"name": "Get summary for vApps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp?sort_by={{sort_by}}&sort_order=asc&limit={{limit}}&offset={{offset}}&name={{name}}&is_relic={{is_relic}}&effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&sla_assignment={{sla_assignment}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp"
							],
							"query": [
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								}
							]
						},
						"description": "Retrieve summary information for all vCD vApp objects."
					},
					"response": []
				},
				{
					"name": "Get vApp job status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the details of a specified asynchronous job for a vApp."
					},
					"response": []
				},
				{
					"name": "Get vApp snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a specified snapshot for a vApp object."
					},
					"response": []
				},
				{
					"name": "Delete vApp snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Designate a vApp snapshot as expired and available for garbage collection. The snapshot must be an on-demand snapshot or a snapshot from a vApp that is not assigned to an SLA Domain."
					},
					"response": []
				},
				{
					"name": "Download snapshot from archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Provides a method for retrieving a snapshot, that is not available locally, from an archival location."
					},
					"response": []
				},
				{
					"name": "Export vApp snapshot.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the request to export the specified vApp snapshot."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:snapshot_id/export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":snapshot_id",
								"export"
							],
							"variable": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Export the specified vApp snapshot into a new vApp or an existing vApp."
					},
					"response": []
				},
				{
					"name": "Get exportable network configurations.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:snapshot_id/export/options?export_mode={{export_mode}}&target_vapp_id={{target_vapp_id}}&target_org_vdc_id={{target_org_vdc_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":snapshot_id",
								"export",
								"options"
							],
							"query": [
								{
									"key": "export_mode",
									"value": "{{export_mode}}"
								},
								{
									"key": "target_vapp_id",
									"value": "{{target_vapp_id}}"
								},
								{
									"key": "target_org_vdc_id",
									"value": "{{target_org_vdc_id}}"
								}
							],
							"variable": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Retrieve summary information for the vApp networks that are available for network connections from the virtual machines in the exported vApp snapshot. The summary also specifies the default vApp network for each virtual machine network connection."
					},
					"response": []
				},
				{
					"name": "Instant Recovery of vApp virtual machines",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a request to recover specified virtual machines from a vApp snapshot."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:snapshot_id/instant_recover",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":snapshot_id",
								"instant_recover"
							],
							"variable": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Use Instant Recovery to recover specified vApp virtual machines."
					},
					"response": []
				},
				{
					"name": "Get Instant Recovery information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/snapshot/:snapshot_id/instant_recover/options",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								"snapshot",
								":snapshot_id",
								"instant_recover",
								"options"
							],
							"variable": [
								{
									"key": "snapshot_id",
									"value": "{{snapshot_id}}"
								}
							]
						},
						"description": "Retrieve the available vApp network connections and the default vApp network connection for the virtual machines in a vApp snapshot. Use this information to configure an Instant Recovery of specified virtual machines in the vApp snapshot."
					},
					"response": []
				},
				{
					"name": "Get vApp details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information for a specified vApp."
					},
					"response": []
				},
				{
					"name": "Update vApp",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Parameters to use to update the specified vApp object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Make changes to the parameters of a specified vApp object."
					},
					"response": []
				},
				{
					"name": "Get details about missed snapshots for a vApp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the timestamp for each missed snapshot for a specified vApp."
					},
					"response": []
				},
				{
					"name": "Search for a file from a vApp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Aggregated search for a file through snapshots of all virtual machines that are presently part of the vApp. Specify the file by full path prefix or filename prefix."
					},
					"response": []
				},
				{
					"name": "Get list of snapshots of vApp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve summary information for each of the snapshot objects of a specified vApp object."
					},
					"response": []
				},
				{
					"name": "Create an on-demand snapshot for a vApp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the on-demand backup of a specified vApp object."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to create an on-demand snapshot for a specified vApp object."
					},
					"response": []
				},
				{
					"name": "Delete all snapshots of vApp",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vcd/vapp/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vcd",
								"vapp",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots for a specified vApp object."
					},
					"response": []
				}
			],
			"description": "Folder for vcd"
		},
		{
			"name": "vmware",
			"item": [
				{
					"name": "Get Rubrik Backup Service deployment setting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/agent",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"agent"
							]
						},
						"description": "Retrieve the global setting for automatic deployment of the Rubrik Backup Service to virtual machines."
					},
					"response": []
				},
				{
					"name": "Change the Rubrik Backup Service deployment setting",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Modify the Rubrik Backup Service deployment setting for a specified virtual machine."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/agent",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"agent"
							]
						},
						"description": "Modify the global setting for automatic deployment of the Rubrik Backup Service to virtual machines."
					},
					"response": []
				},
				{
					"name": "Get all the clusters belonging to this datacenter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/compute_cluster?data_center_id={{data_center_id}}&primary_cluster_id={{primary_cluster_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"compute_cluster"
							],
							"query": [
								{
									"key": "data_center_id",
									"value": "{{data_center_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								}
							]
						},
						"description": "Get all the clusters belonging to this datacenter"
					},
					"response": []
				},
				{
					"name": "Get details for the compute cluster",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/compute_cluster/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"compute_cluster",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details for the compute cluster"
					},
					"response": []
				},
				{
					"name": "Get the esxSubnets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/config/esx_subnets",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"config",
								"esx_subnets"
							]
						},
						"description": "Retrieve the preferred subnets to reach ESXi hosts."
					},
					"response": []
				},
				{
					"name": "Set ESXi subnets",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Preferred subnets to reach to ESX hosts. The format should be the comma separated list without any spaces, for example, 192.168.2.10/24,10.255.0.2/16"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/config/set_esx_subnets",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"config",
								"set_esx_subnets"
							]
						},
						"description": "Set the subnets that should be used to reach ESXi hosts."
					},
					"response": []
				},
				{
					"name": "Gets the list of all the data centers.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/data_center?primary_cluster_id={{primary_cluster_id}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"data_center"
							],
							"query": [
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								}
							]
						},
						"description": "Returns the summary of all the data centers."
					},
					"response": []
				},
				{
					"name": "Gets details about the specific DataCenter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/data_center/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"data_center",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Returns details about the specific DataCenter"
					},
					"response": []
				},
				{
					"name": "Get summaries of all the DataStores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/datastore",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"datastore"
							]
						},
						"description": "Get summaries of all the DataStores"
					},
					"response": []
				},
				{
					"name": "Get details about the specific DataStore",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/datastore/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"datastore",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about the specific DataStore"
					},
					"response": []
				},
				{
					"name": "Summary of all guest OS credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/guest_credential",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"guest_credential"
							]
						},
						"description": "Retrieve the ID, domain, username and password for all guest OS credentials."
					},
					"response": []
				},
				{
					"name": "Create a new guest OS credential",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object for guest OS credential definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/guest_credential",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"guest_credential"
							]
						},
						"description": "Create a new guest OS credential"
					},
					"response": []
				},
				{
					"name": "Get information about a specific guest OS credential.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/guest_credential/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"guest_credential",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get information about a specific guest OS credential."
					},
					"response": []
				},
				{
					"name": "Update a specific guest OS credential",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Object for guest OS credential definition."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/guest_credential/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"guest_credential",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Update the domain, username and password of given guest OS credential."
					},
					"response": []
				},
				{
					"name": "Remove a specific guest OS credential.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/guest_credential/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"guest_credential",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Remove a specific guest OS credential."
					},
					"response": []
				},
				{
					"name": "Refresh single virtual machine metadata in a vcenter.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration of the vm request to refresh"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vcenter/:id/refresh_vm",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vcenter",
								":id",
								"refresh_vm"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Refresh a single virtual machine metadata in a vcenter."
					},
					"response": []
				},
				{
					"name": "Count of all the local non-archived VMs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"count"
							]
						},
						"description": "Count of all the local non-archived VMs"
					},
					"response": []
				},
				{
					"name": "Fetch VMs with authentication failures",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/credential_failure",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"credential_failure"
							]
						},
						"description": "Fetch VMs with authentication failures"
					},
					"response": []
				},
				{
					"name": "Fetch count of VMs with authentication failures",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/credential_failure/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"credential_failure",
								"count"
							]
						},
						"description": "Fetch count of VMs with authentication failures"
					},
					"response": []
				},
				{
					"name": "Count of all the live snapshots of a VM",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/live_snapshot/count/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"live_snapshot",
								"count",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Count of all the live snapshots of a VM"
					},
					"response": []
				},
				{
					"name": "Get a count of snapshots",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								"count"
							]
						},
						"description": "Retrieve total number of snapshots."
					},
					"response": []
				},
				{
					"name": "Get summary information for all live mounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/mount?vm_id={{vm_id}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								"mount"
							],
							"query": [
								{
									"key": "vm_id",
									"value": "{{vm_id}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Retrieve the following information for all live mounts: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
					},
					"response": []
				},
				{
					"name": "Get a count of live mounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/mount/count",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								"mount",
								"count"
							]
						},
						"description": "Retrieve total number of live mounts."
					},
					"response": []
				},
				{
					"name": "Get summary information for a live mount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/mount/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								"mount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the following summary information for a specified live mount: ID, snapshot date, ID of source VM, name of source VM, ID of source host, status of the mount, mount event ID, and unmount event ID."
					},
					"response": []
				},
				{
					"name": "Rollback an Instant Recovery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/mount/:id/rollback",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								"mount",
								":id",
								"rollback"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "After an Instant Recovery that used the preserve MOID setting, rollback the datastore used by the recovered virtual machine from the Rubrik cluster to the original datastore."
					},
					"response": []
				},
				{
					"name": "Download multiple files and folders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration object containing an array with the full paths of the files and folders to download. The array has to contain at least one full path."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Start an asynchronous job to download multiple files and folders from a specified VMware backup. The response returns an asynchronous request ID. Get the URL for downloading the ZIP file including the specific files/folders by sending a GET request to 'vmware/vm/request/{id}'."
					},
					"response": []
				},
				{
					"name": "Restores multiple files/directories from VM snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the restore request."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a request to restore multiple file or folder to the source virtual machine."
					},
					"response": []
				},
				{
					"name": "Create an export request to standalone esx server",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the export request to standalone esx host"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/snapshot/:id/standalone_esx_host_export",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"snapshot",
								":id",
								"standalone_esx_host_export"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Export snapshot of a vm to stanadlone esx server."
					},
					"response": []
				},
				{
					"name": "Update VMs in bulk",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to update"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/update/bulk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"update",
								"bulk"
							]
						},
						"description": "Update VMs with specified properties"
					},
					"response": []
				},
				{
					"name": "Get a list of all the Virtual Disks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/vmware/vm/virtual_disk",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"vmware",
								"vm",
								"virtual_disk"
							]
						},
						"description": "Get a list of all the Virtual Disks"
					},
					"response": []
				}
			],
			"description": "Folder for vmware"
		},
		{
			"name": "volume_group",
			"item": [
				{
					"name": "Get list of Volume Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group?effective_sla_domain_id={{effective_sla_domain_id}}&primary_cluster_id={{primary_cluster_id}}&limit={{limit}}&offset={{offset}}&is_relic={{is_relic}}&name={{name}}&sla_assignment={{sla_assignment}}&sort_by=Name&sort_order=asc",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group"
							],
							"query": [
								{
									"key": "effective_sla_domain_id",
									"value": "{{effective_sla_domain_id}}"
								},
								{
									"key": "primary_cluster_id",
									"value": "{{primary_cluster_id}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "is_relic",
									"value": "{{is_relic}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "sla_assignment",
									"value": "{{sla_assignment}}"
								},
								{
									"key": "sort_by",
									"value": "Name"
								},
								{
									"key": "sort_order",
									"value": "asc"
								}
							]
						},
						"description": "Get summary of all Volume Groups"
					},
					"response": []
				},
				{
					"name": "Get Volume Group async request details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/request/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"request",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Get details about a Volume Group-related async request."
					},
					"response": []
				},
				{
					"name": "Get summary information for all mounts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/mount?source_volume_group_id={{source_volume_group_id}}&source_host_name={{source_host_name}}&sort_by={{sort_by}}&sort_order=asc&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								"mount"
							],
							"query": [
								{
									"key": "source_volume_group_id",
									"value": "{{source_volume_group_id}}"
								},
								{
									"key": "source_host_name",
									"value": "{{source_host_name}}"
								},
								{
									"key": "sort_by",
									"value": "{{sort_by}}"
								},
								{
									"key": "sort_order",
									"value": "asc"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Retrieve information about every Volume Group mount, such as the snapshot date, as well as which drives we are exposing"
					},
					"response": []
				},
				{
					"name": "Get summary information for a mount",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/mount/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								"mount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve information about a Volume Group mount, such as the addresses of the SMB mounts of each volume, as well as the directory in which they are all mounted"
					},
					"response": []
				},
				{
					"name": "Requst to delete a mount",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/mount/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								"mount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a request to delete a mount. If there are volumes mounted on a target host, this will use best-effort to unmount those volumes from the host, and proceed to unmount storage on Rubrik."
					},
					"response": []
				},
				{
					"name": "Get Volume Group snapshot details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve detailed information about a snapshot."
					},
					"response": []
				},
				{
					"name": "Delete Volume Group snapshot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id?location={{location}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id"
							],
							"query": [
								{
									"key": "location",
									"value": "{{location}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete a snapshot by expiring it. A snapshot can only be expired if it is an on-demand snapshot or a snapshot of an unprotected Volume Group."
					},
					"response": []
				},
				{
					"name": "Lists all files in Volume Group snapshot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id/browse?path={{path}}&offset={{offset}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id",
								"browse"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								},
								{
									"key": "offset",
									"value": "{{offset}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Lists all files and directories in a given path"
					},
					"response": []
				},
				{
					"name": "Creates a download from archival request.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id/download",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id",
								"download"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Download a snapshot from archival."
					},
					"response": []
				},
				{
					"name": "Download files from Volume Group snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for a download request"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id/download_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id",
								"download_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a download files request"
					},
					"response": []
				},
				{
					"name": "Initiate a live mount for a given Volume Group snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the mount request. The mount will expose an SMB address per recovered volume. In addition, if a target host is specified, each volume must specify a mount path. If a target host is specified but no mount paths are, they will be generated for every volume. In all cases, a single SMB share will be created for this mount. If a target host is specified, the share will only be accessible by that host."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id/mount",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id",
								"mount"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create a live mount request for a Volume Group snapshot."
					},
					"response": []
				},
				{
					"name": "Restore files from the Volume Group snapshot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration containing snapshot file paths and restore path"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/snapshot/:id/restore_files",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								"snapshot",
								":id",
								"restore_files"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Restore filess to the original Host"
					},
					"response": []
				},
				{
					"name": "Get Volume Group details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Detailed view of a Volume Group"
					},
					"response": []
				},
				{
					"name": "Patch Volume Group",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Properties to patch"
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Patch Volume Group with specified properties"
					},
					"response": []
				},
				{
					"name": "Get details about missed snapshots for a Volume Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id/missed_snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id",
								"missed_snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve the time of the day when the snapshots were missed specific to a Volume Group."
					},
					"response": []
				},
				{
					"name": "Search for file in Volume Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id/search?path={{path}}",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id",
								"search"
							],
							"query": [
								{
									"key": "path",
									"value": "{{path}}"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Search for a file within the Volume Group. Search via full path prefix or filename prefix."
					},
					"response": []
				},
				{
					"name": "Get list of snapshots of Volume Group",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Retrieve snapshot details for a Volume Group"
					},
					"response": []
				},
				{
					"name": "Create on-demand snapshot for Volume Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Configuration for the on-demand backup."
						},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Create an on-demand snapshot for the given Volume Group ID"
					},
					"response": []
				},
				{
					"name": "Delete all snapshots of Volume Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {},
						"url": {
							"raw": "https://{{rubrik_ip}}/api/internal/volume_group/:id/snapshot",
							"protocol": "https",
							"host": [
								"{{rubrik_ip}}"
							],
							"path": [
								"api",
								"internal",
								"volume_group",
								":id",
								"snapshot"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						},
						"description": "Delete all snapshots of a Volume Group"
					},
					"response": []
				}
			],
			"description": "Folder for volume_group"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ea41adca-f239-4e77-a6e5-b7b5e92c3e82",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cbbd8e99-93d0-40f4-b445-24735d4b3777",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
