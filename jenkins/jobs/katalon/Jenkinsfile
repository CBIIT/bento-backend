pipeline {
    agent {
        node {
            label 'docker-ansible'
            }
        }
    parameters {
    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Tag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/QA_Katalon')
    string(defaultValue: "", 
        description: 'Enter the Katalon Project file (include the path relative to the repo root):', 
        name: 'KatalonPrj')
    string(defaultValue: "", 
        description: 'Enter the Katalon Suite Path (not including the test suite file):', 
        name: 'KatalonSuite')
        }
    // options {
    // 	ansiColor('xterm')
    // }
    tools {
        jdk 'Default' 
        }
    stages{
        stage('checkout'){
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.Tag}"]], 
                    doGenerateSubmoduleConfigurations: false,
					extensions: [],
					submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/CBIIT/QA_Katalon']]])
                dir('icdc-devops'){
                    git branch: 'master',
                    url: 'https://github.com/CBIIT/icdc-devops.git'
                    }
                }
            }
		stage('set up inventory'){
			steps {
				sh label: 'inventory', script: '''#!/bin/bash
					echo "Creating inventory file"
					echo "[katalon]" >> ${WORKSPACE}/icdc-devops/ansible/inventory
						if [[ $(wc -l < ${ec2instance} | cut -d \',\' -f2 ) -ge 0 ]];then
							echo ${ec2instance} | cut -d \',\' -f1 >> ${WORKSPACE}/icdc-devops/ansible/inventory
							echo ${ec2instance} | cut -d \',\' -f2 >> ${WORKSPACE}/icdc-devops/ansible/inventory
						else
							echo ${ec2instance} >> ${WORKSPACE}/icdc-devops/ansible/inventory
						fi'''
				}
			}
        stage('run tests'){
            environment {
                SLACK_URL           =   ""
                KATALON_PRJ         =   "${params.KatalonPrj}"
                KATALON_SUITE_PATH  =   "${params.KatalonSuite}"
                }
            steps {
                wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
                    ansiblePlaybook(
                        playbook: '${WORKSPACE}/icdc-devops/ansible/katalon.yml',
                        inventory: '${WORKSPACE}/icdc-devops/ansible/hosts',
                        colorized: true)
                    }
                }
            }
        }
    }