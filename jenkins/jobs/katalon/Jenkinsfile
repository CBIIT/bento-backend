pipeline {
    agent {
        node {
            label 'docker-ansible'
            }
        }
	environment { 
        katalonVer = '7.2.6'
		chromedriverVer = '81.0.4044.138'
		geckodriverVer = '0.26.0'
		}
    parameters {

    gitParameter(branchFilter: 'origin/(.*)', 
        defaultValue: 'master', 
        name: 'Tag', 
        type: 'PT_BRANCH_TAG',
        quickFilterEnabled: false, 
        selectedValue: 'DEFAULT', 
        sortMode: 'ASCENDING_SMART', 
        tagFilter: '*', 
        useRepository: 'https://github.com/CBIIT/DataCommons_Automation')

    string(defaultValue: "Commons_Automation.prj", 
        description: 'Enter the Katalon Project file (include the path relative to the repo root):', 
        name: 'KatalonPrj')

    string(defaultValue: "Test Suites/Canine_TestSuite", 
        description: 'Enter the Katalon Suite Path (not including the test suite file):', 
        name: 'KatalonSuite')

    extendedChoice( 
        name: 'Browser', 
        defaultValue: 'Firefox', 
        description: 'Choose the browser (headless) to use', 
        type: 'PT_SINGLE_SELECT',
        value: 'Chrome,Firefox' )
		
	extendedChoice( 
        name: 'Profile', 
        defaultValue: 'QA_ICDC', 
        description: 'Choose the profile to use', 
        type: 'PT_SINGLE_SELECT',
        value: 'QA_ICDC,QA_CTDC' )

        }
    // options {
    // 	ansiColor('xterm')
    // }
    tools {
        jdk 'Default' 
        }
    stages{
        stage('checkout'){
            steps {

                checkout([$class: 'GitSCM', 
                    branches: [[name: "${params.Tag}"]], 
                    doGenerateSubmoduleConfigurations: false,
					extensions: [],
					submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/CBIIT/DataCommons_Automation']]])

                dir('icdc-devops'){
                    git branch: 'master',
                    url: 'https://github.com/michael-fleming/DevOps.git'}

                }
            }
		stage('set Profile'){
		    environment {
                KATALON_PRJ         =   "${params.KatalonPrj}"
                }
			steps {
                script {
                    switch("${params.Profile}") {
                    case "QA_ICDC":
                        withCredentials([file(credentialsId: 'Katalon_QA_ICDC', variable: 'pass_file')]) {
                            sh "cp ${pass_file} ${WORKSPACE}/Profiles/${params.Profile}.glbl"
                            }
                        break
                    
                       }
                    }
				}
			}
        stage('set Environment'){
            steps {
			
                script {

						sh "wget https://github.com/katalon-studio/katalon-studio/releases/download/v${env.katalonVer}/Katalon_Studio_Engine_Linux_64-${env.katalonVer}.tar.gz && tar -xvzf Katalon_Studio_Engine_Linux_64-${env.katalonVer}.tar.gz && mv Katalon_Studio_Engine_Linux_64-${env.katalonVer} katalon && chown -R root:root katalon"

				    }

				script {
                    switch("${params.Browser}") {
                    case "Firefox":
						sh "wget https://github.com/mozilla/geckodriver/releases/download/v${env.geckodriverVer}/geckodriver-v${env.geckodriverVer}-linux64.tar.gz && mv katalon/configuration/resources/drivers/firefox_linux64/geckodriver katalon/configuration/resources/drivers/firefox_linux64/geckodriver.bak && tar -C katalon/configuration/resources/drivers/firefox_linux64/ -xzf geckodriver-v${env.geckodriverVer}-linux64.tar.gz && chown root:root katalon/configuration/resources/drivers/firefox_linux64/geckodriver && yum -y install firefox"
						break
                    case "Chrome":
						sh "wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && yum -y install google-chrome-stable_current_x86_64.rpm && wget https://chromedriver.storage.googleapis.com/${env.chromedriverVer}/chromedriver_linux64.zip && mv katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver katalon/configuration/resources/drivers/chromedriver_linux64/chromedriver.bak && unzip chromedriver_linux64.zip -d katalon/configuration/resources/drivers/chromedriver_linux64/"
						break
                       }
                    }

                }
            }
		stage('run tests'){
            environment {
				KATALON_BROWSER     =   "${params.Browser}"
				KATALON_PROFILE     =   "${params.Profile}"
                KATALON_PRJ         =   "${params.KatalonPrj}"
                KATALON_SUITE_PATH  =   "${params.KatalonSuite}"
                }
            steps {

				script {

					sh label: 'Katalon-Tests', script: '''#!/bin/bash

						# Set datestamp for results file
                        dateStamp=$(date +%Y%m%d%H%M)

                        # Recreate the results directory
                        rm -rf results && mkdir results
												
						# Run Katalon Tests
						katalon/katalonc -noSplash -runMode=console -projectPath="$WORKSPACE/$KATALON_PRJ" -retry=0 -testSuitePath="$KATALON_SUITE_PATH" -executionProfile="$KATALON_PROFILE" -browserType="$KATALON_BROWSER (headless)" -reportFolder="$WORKSPACE/results" -reportFileName="index_$dateStamp" -apiKey="1d9d7e79-dde9-45c1-9d21-b31424a47864"

                        '''

					}

                }
            }
        }
		post {
			always {

				publishHTML([allowMissing: true,
					alwaysLinkToLastBuild: false,
					keepAll: false,
					reportDir: 'results',
					reportFiles: 'index_*.html',
					reportName: 'HTML Report',
					reportTitles: ''])

                emailext(attachmentsPattern: 'results/index_*.html',
                    body: 'Katalon Test Results',
                    subject: 'Katalon Test Results',
                    to: 'Katalon.w1imuj982tottg1c@u.box.com')
				
				}
			}
	}