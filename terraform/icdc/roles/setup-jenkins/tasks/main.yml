
- name: open http and https services
  firewalld:
    service: "{{item}}"
    zone: public
    immediate: yes
    permanent: yes
    state: enabled
  loop:
    - http
    - https

# - name: list current users
#   shell: getent group | awk -F":" '{print $1}'
#   register: current_users

# - name: change centos uid if exist
#   user:
#     name: centos
#     uid: 1001
#   when: '"centos" in current_users.stdout'


# - name: change centos gid if exist
#   group:
#     name: centos
#     gid: 1001
#   when: '"centos" in current_users.stdout'
  

- name: create jenkins group
  group:
    name: jenkins
    gid: 1000
    state: present

- name: create jenkins user
  user:
    name: jenkins
    uid: 1000
    group: jenkins

- name: create file structure for the jenkins
  file:
    path: "{{ item }}"
    state: directory
    group: jenkins
    owner: jenkins
  loop:
    - "{{ jenkins_home }}"
    - "{{ docker_home }}"
    - "{{ secrets_home }}"

- name: copy docker files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    group: jenkins
    owner: jenkins
  with_items:
    - {src: 'docker-compose.yml.j2',dest: '{{ docker_home }}/docker-compose.yml'}
    - {src: 'dockerfile_jenkins.j2',dest: '{{docker_home}}/dockerfile_jenkins'}
    - {src: 'plugins.txt.j2',dest: '{{docker_home}}/plugins.txt'}

- name: build the docker image
  docker_image:
    path: "{{ docker_home }}"
    name: k9dc/jenkins
    dockerfile: "{{ dockerfile }}"
    state: present

- name: create jenkinsAdmin secret
  file:
    path: "{{ secrets_home }}/{{item}}"
    owner: jenkins
    group: jenkins
    state: touch
  loop:
    - jenkinsAdmin
    - vdonkor
    - neo4j
    - bearer
    - sshkey

- name: update jenkinsAdmin with pass
  lineinfile:
    path: "{{ secrets_home }}/jenkinsAdmin"
    line: "{{ jenkinsAdmin }}"
  
- name: update vdonkor with pass
  lineinfile:
    path: "{{ secrets_home }}/vdonkor"
    line: "{{ vdonkor }}"

- name: update neo4j with pass
  lineinfile:
    path: "{{ secrets_home }}/neo4j"
    line: "{{ neo4j }}"

- name: update bearer with pass
  lineinfile:
    path: "{{ secrets_home }}/bearer"
    line: "{{ bearer }}"

- name: update sshkey with pass
  lineinfile:
    path: "{{ secrets_home }}/sshkey"
    line: "{{ sshkey }}"

- name: start the jenkins
  docker_service:
    project_src: "{{ docker_home }}"
    state: present

# - name: Init a new swarm with default parameters
#   docker_swarm:
#     state: present

# - name: check if secret is already created
#   shell: docker secret ls -f name=jenkinsAdmin | wc -l
#   register: output_secret

# - debug:
#     msg: "{{ output_secret.stdout }}"  

# - name: set docker secret user
#   shell: echo {{ jenkinsAdmin }} | docker secret create jenkinsAdmin -
#   when: output_secret.stdout == "1"
#   register: output

# - name: deploy jenkins
#   command:  docker stack deploy --compose-file {{ docker_compose_file }} jenkins
#   register: output

# - debug:
#     msg: "{{output.stdout }}"


